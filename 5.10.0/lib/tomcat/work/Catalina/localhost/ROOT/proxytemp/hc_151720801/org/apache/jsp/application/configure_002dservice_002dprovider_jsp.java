/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.31
 * Generated at: 2020-07-29 13:15:53 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.application;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.apache.axis2.context.ConfigurationContext;
import org.apache.commons.collections.CollectionUtils;
import org.apache.commons.lang.StringUtils;
import org.owasp.encoder.Encode;
import org.wso2.carbon.CarbonConstants;
import org.wso2.carbon.consent.mgt.core.model.Purpose;
import org.wso2.carbon.identity.application.common.model.CertData;
import org.wso2.carbon.identity.application.common.model.xsd.IdentityProvider;
import org.wso2.carbon.identity.application.common.model.xsd.InboundAuthenticationRequestConfig;
import org.wso2.carbon.identity.application.common.model.xsd.LocalAuthenticatorConfig;
import org.wso2.carbon.identity.application.common.model.xsd.Property;
import org.wso2.carbon.identity.application.common.model.xsd.ServiceProviderProperty;
import org.wso2.carbon.identity.application.common.model.xsd.ProvisioningConnectorConfig;
import org.wso2.carbon.identity.application.common.model.xsd.RequestPathAuthenticatorConfig;
import org.wso2.carbon.identity.application.common.util.IdentityApplicationManagementUtil;
import org.wso2.carbon.identity.application.mgt.ui.ApplicationBean;
import org.wso2.carbon.identity.application.mgt.ui.client.ApplicationManagementServiceClient;
import org.wso2.carbon.identity.application.mgt.ui.util.ApplicationMgtUIUtil;
import org.wso2.carbon.identity.application.mgt.ui.util.ApplicationMgtUIConstants;
import org.wso2.carbon.identity.application.mgt.ui.ApplicationPurpose;
import org.wso2.carbon.identity.application.mgt.ui.ApplicationPurposes;
import org.wso2.carbon.identity.core.util.IdentityUtil;
import org.wso2.carbon.ui.CarbonUIMessage;
import org.wso2.carbon.ui.CarbonUIUtil;
import org.wso2.carbon.utils.ServerConstants;
import java.security.cert.CertificateException;
import java.text.MessageFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Comparator;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.ResourceBundle;
import org.wso2.carbon.identity.application.common.model.xsd.SpTemplate;

public final class configure_002dservice_002dprovider_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

public static final String IS_HANDLER = "IS_HANDLER";
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/tlds/carbontags.tld", Long.valueOf(1582879640000L));
    _jspx_dependants.put("/WEB-INF/tlds/fmt.tld", Long.valueOf(1582879640000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("org.apache.commons.lang.StringUtils");
    _jspx_imports_classes.add("java.util.Arrays");
    _jspx_imports_classes.add("org.apache.axis2.context.ConfigurationContext");
    _jspx_imports_classes.add("org.wso2.carbon.identity.application.common.model.xsd.ServiceProviderProperty");
    _jspx_imports_classes.add("org.wso2.carbon.identity.application.mgt.ui.ApplicationBean");
    _jspx_imports_classes.add("java.util.HashMap");
    _jspx_imports_classes.add("java.text.MessageFormat");
    _jspx_imports_classes.add("java.util.ArrayList");
    _jspx_imports_classes.add("org.wso2.carbon.identity.application.common.model.xsd.IdentityProvider");
    _jspx_imports_classes.add("org.wso2.carbon.identity.application.common.model.xsd.InboundAuthenticationRequestConfig");
    _jspx_imports_classes.add("org.wso2.carbon.identity.application.mgt.ui.util.ApplicationMgtUIConstants");
    _jspx_imports_classes.add("org.owasp.encoder.Encode");
    _jspx_imports_classes.add("java.util.ResourceBundle");
    _jspx_imports_classes.add("org.apache.commons.collections.CollectionUtils");
    _jspx_imports_classes.add("org.wso2.carbon.identity.application.common.model.xsd.LocalAuthenticatorConfig");
    _jspx_imports_classes.add("org.wso2.carbon.identity.application.mgt.ui.util.ApplicationMgtUIUtil");
    _jspx_imports_classes.add("java.util.Map");
    _jspx_imports_classes.add("org.wso2.carbon.utils.ServerConstants");
    _jspx_imports_classes.add("org.wso2.carbon.identity.application.common.model.CertData");
    _jspx_imports_classes.add("org.wso2.carbon.ui.CarbonUIUtil");
    _jspx_imports_classes.add("org.wso2.carbon.identity.application.common.model.xsd.ProvisioningConnectorConfig");
    _jspx_imports_classes.add("org.wso2.carbon.identity.application.mgt.ui.ApplicationPurposes");
    _jspx_imports_classes.add("java.security.cert.CertificateException");
    _jspx_imports_classes.add("org.wso2.carbon.identity.application.common.util.IdentityApplicationManagementUtil");
    _jspx_imports_classes.add("org.wso2.carbon.consent.mgt.core.model.Purpose");
    _jspx_imports_classes.add("org.wso2.carbon.identity.application.common.model.xsd.Property");
    _jspx_imports_classes.add("org.wso2.carbon.identity.application.common.model.xsd.RequestPathAuthenticatorConfig");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("org.wso2.carbon.identity.application.mgt.ui.ApplicationPurpose");
    _jspx_imports_classes.add("org.wso2.carbon.identity.application.mgt.ui.client.ApplicationManagementServiceClient");
    _jspx_imports_classes.add("org.wso2.carbon.identity.core.util.IdentityUtil");
    _jspx_imports_classes.add("org.wso2.carbon.ui.CarbonUIMessage");
    _jspx_imports_classes.add("org.wso2.carbon.CarbonConstants");
    _jspx_imports_classes.add("java.util.Comparator");
    _jspx_imports_classes.add("org.wso2.carbon.identity.application.common.model.xsd.SpTemplate");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fcarbon_005fbreadcrumb_0026_005ftopPage_005fresourceBundle_005frequest_005flabel_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fcarbon_005fbreadcrumb_0026_005ftopPage_005fresourceBundle_005frequest_005flabel_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename.release();
    _005fjspx_005ftagPool_005fcarbon_005fbreadcrumb_0026_005ftopPage_005fresourceBundle_005frequest_005flabel_005fnobody.release();
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!--\n");
      out.write("~ Copyright (c) 2005-2013, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n");
      out.write("~\n");
      out.write("~ WSO2 Inc. licenses this file to you under the Apache License,\n");
      out.write("~ Version 2.0 (the \"License\"); you may not use this file except\n");
      out.write("~ in compliance with the License.\n");
      out.write("~ You may obtain a copy of the License at\n");
      out.write("~\n");
      out.write("~ http://www.apache.org/licenses/LICENSE-2.0\n");
      out.write("~\n");
      out.write("~ Unless required by applicable law or agreed to in writing,\n");
      out.write("~ software distributed under the License is distributed on an\n");
      out.write("~ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n");
      out.write("~ KIND, either express or implied. See the License for the\n");
      out.write("~ specific language governing permissions and limitations\n");
      out.write("~ under the License.\n");
      out.write("-->\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<link href=\"css/idpmgt.css\" rel=\"stylesheet\" type=\"text/css\" media=\"all\"/>\n");
      out.write("<link rel=\"stylesheet\" href=\"codemirror/lib/codemirror.css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"codemirror/theme/mdn-like.css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"codemirror/addon/dialog/dialog.css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"codemirror/addon/display/fullscreen.css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"codemirror/addon/fold/foldgutter.css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"codemirror/addon/hint/show-hint.css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"codemirror/addon/lint/lint.css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"css/idpmgt.css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"css/conditional-authentication.css\">\n");
      out.write("<script src=\"codemirror/lib/codemirror.js\"></script>\n");
      out.write("<script src=\"codemirror/keymap/sublime.js\"></script>\n");
      out.write("<script src=\"codemirror/mode/javascript/javascript.js\"></script>\n");
      out.write("<script src=\"codemirror/addon/lint/jshint.min.js\"></script>\n");
      out.write("<script src=\"codemirror/addon/lint/lint.js\"></script>\n");
      out.write("<script src=\"codemirror/addon/lint/javascript-lint.js\"></script>\n");
      out.write("<script src=\"codemirror/addon/hint/anyword-hint.js\"></script>\n");
      out.write("<script src=\"codemirror/addon/hint/show-hint.js\"></script>\n");
      out.write("<script src=\"codemirror/addon/hint/javascript-hint.js\"></script>\n");
      out.write("<script src=\"codemirror/addon/hint/wso2-hints.js\"></script>\n");
      out.write("<script src=\"codemirror/addon/edit/closebrackets.js\"></script>\n");
      out.write("<script src=\"codemirror/addon/edit/matchbrackets.js\"></script>\n");
      out.write("<script src=\"codemirror/addon/fold/brace-fold.js\"></script>\n");
      out.write("<script src=\"codemirror/addon/fold/foldcode.js\"></script>\n");
      out.write("<script src=\"codemirror/addon/fold/foldgutter.js\"></script>\n");
      out.write("<script src=\"codemirror/addon/display/fullscreen.js\"></script>\n");
      out.write("<script src=\"codemirror/addon/display/placeholder.js\"></script>\n");
      out.write("<script src=\"codemirror/addon/comment/comment.js\"></script>\n");
      out.write("<script src=\"codemirror/addon/selection/active-line.js\"></script>\n");
      out.write("<script src=\"codemirror/addon/dialog/dialog.js\"></script>\n");
      out.write("<script src=\"codemirror/addon/display/panel.js\"></script>\n");
      out.write("<script src=\"codemirror/util/formatting.js\"></script>\n");
      out.write("<script src=\"js/handlebars.min-v4.0.11.js\"></script>\n");
      out.write("<script src=\"../admin/js/main.js\" type=\"text/javascript\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"../identity/encode/js/identity-encode.js\"></script>\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\" src=\"extensions/js/vui.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"../extensions/core/js/vui.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"../admin/js/main.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"../identity/validation/js/identity-validate.js\"></script>\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../dialog/display_messages.jsp", out, false);
      out.write('\n');
      out.write('\n');
      //  fmt:bundle
      org.apache.taglibs.standard.tag.rt.fmt.BundleTag _jspx_th_fmt_005fbundle_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.BundleTag) _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename.get(org.apache.taglibs.standard.tag.rt.fmt.BundleTag.class);
      boolean _jspx_th_fmt_005fbundle_005f0_reused = false;
      try {
        _jspx_th_fmt_005fbundle_005f0.setPageContext(_jspx_page_context);
        _jspx_th_fmt_005fbundle_005f0.setParent(null);
        // /application/configure-service-provider.jsp(98,0) name = basename type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_fmt_005fbundle_005f0.setBasename("org.wso2.carbon.identity.application.mgt.ui.i18n.Resources");
        int _jspx_eval_fmt_005fbundle_005f0 = _jspx_th_fmt_005fbundle_005f0.doStartTag();
        if (_jspx_eval_fmt_005fbundle_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          if (_jspx_eval_fmt_005fbundle_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_fmt_005fbundle_005f0);
          }
          do {
            out.write('\n');
            //  carbon:breadcrumb
            org.wso2.carbon.ui.taglibs.Breadcrumb _jspx_th_carbon_005fbreadcrumb_005f0 = (org.wso2.carbon.ui.taglibs.Breadcrumb) _005fjspx_005ftagPool_005fcarbon_005fbreadcrumb_0026_005ftopPage_005fresourceBundle_005frequest_005flabel_005fnobody.get(org.wso2.carbon.ui.taglibs.Breadcrumb.class);
            boolean _jspx_th_carbon_005fbreadcrumb_005f0_reused = false;
            try {
              _jspx_th_carbon_005fbreadcrumb_005f0.setPageContext(_jspx_page_context);
              _jspx_th_carbon_005fbreadcrumb_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
              // /application/configure-service-provider.jsp(99,0) name = label type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_carbon_005fbreadcrumb_005f0.setLabel("breadcrumb.service.provider");
              // /application/configure-service-provider.jsp(99,0) name = resourceBundle type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_carbon_005fbreadcrumb_005f0.setResourceBundle("org.wso2.carbon.identity.application.mgt.ui.i18n.Resources");
              // /application/configure-service-provider.jsp(99,0) name = topPage type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_carbon_005fbreadcrumb_005f0.setTopPage(true);
              // /application/configure-service-provider.jsp(99,0) name = request type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_carbon_005fbreadcrumb_005f0.setRequest(request);
              int _jspx_eval_carbon_005fbreadcrumb_005f0 = _jspx_th_carbon_005fbreadcrumb_005f0.doStartTag();
              if (_jspx_th_carbon_005fbreadcrumb_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005fcarbon_005fbreadcrumb_0026_005ftopPage_005fresourceBundle_005frequest_005flabel_005fnobody.reuse(_jspx_th_carbon_005fbreadcrumb_005f0);
              _jspx_th_carbon_005fbreadcrumb_005f0_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_carbon_005fbreadcrumb_005f0, _jsp_getInstanceManager(), _jspx_th_carbon_005fbreadcrumb_005f0_reused);
            }
            out.write('\n');
            out.write('\n');
            out.write('\n');
            out.write('\n');

    String[] createTemplateError = (String[]) request.getSession().getAttribute("createTemplateError");
    if (createTemplateError == null) {
        createTemplateError = new String[0];
    }

    String BUNDLE = "org.wso2.carbon.identity.application.mgt.ui.i18n.Resources";
    ResourceBundle resourceBundle = ResourceBundle.getBundle(BUNDLE, request.getLocale());

    ApplicationBean appBean = ApplicationMgtUIUtil.getApplicationBeanFromSession(session, request.getParameter("spName"));
    if (appBean.getServiceProvider() == null || appBean.getServiceProvider().getApplicationName() == null) {
// if appbean is not set properly redirect the user to list-service-provider.jsp.

            out.write("\n");
            out.write("<script>\n");
            out.write("    location.href = \"list-service-providers.jsp\";\n");
            out.write("</script>\n");

        return;
    }
    String spName = appBean.getServiceProvider().getApplicationName();
    String accessURL = appBean.getServiceProvider().getAccessUrl();
    String imageURL = appBean.getServiceProvider().getImageUrl();

    List<String> permissions = null;
    permissions = appBean.getPermissions();

    String[] allClaimUris = appBean.getClaimUris();
    Map<String, String> claimMapping = appBean.getClaimMapping();
    Map<String, String> roleMapping = appBean.getRoleMapping();
    boolean isLocalClaimsSelected = appBean.isLocalClaimsSelected();
    List<String> spClaimDialects = appBean.getSPClaimDialects();
    List<String> claimDialectUris = appBean.getClaimDialectUris();
    String isHashDisabled = request.getParameter("isHashDisabled");
    String idPName = request.getParameter("idPName");
    String action = request.getParameter("action");
    String operation = request.getParameter("operation");
    String[] userStoreDomains = null;
    StringBuilder spTemplateNames = new StringBuilder();
    boolean isNeedToUpdate = false;
    boolean isAdvanceConsentManagementEnabled = false;

    //adding code to support jwks URI
    String jwksUri = appBean.getServiceProvider().getJwksUri();
    boolean hasJWKSUri = StringUtils.isNotEmpty(jwksUri);
    
    String authTypeReq = request.getParameter("authType");
    if (authTypeReq != null && authTypeReq.trim().length() > 0) {
        appBean.setAuthenticationType(authTypeReq);
    }

    String samlIssuerName = request.getParameter("samlIssuer");

    // Will be supported with 'Advance Consent Management Feature'.
    /*
    if ("updateSPPurposes".equals(action)) {
        appBean.setApplicationPurposes(ApplicationMgtUIUtil.getApplicationSpecificPurposes(appBean.getServiceProvider()));
    }
    if ("updateSharedPurposes".equals(action)) {
        appBean.setSharedPurposes(ApplicationMgtUIUtil.getSharedPurposes());
    }
    ApplicationPurposes applicationPurposes = appBean.getApplicationPurposes();
    List<ApplicationPurpose> appPurposes = applicationPurposes.getAppPurposes();
    List<ApplicationPurpose> appSharedPurposes = applicationPurposes.getAppSharedPurposes();
    Purpose[] sharedPurposes = appBean.getSharedPurposes();
    boolean isConsentManagementEnabled = false;

    if (appBean.getServiceProvider().getConsentConfig() != null) {
        isConsentManagementEnabled = appBean.getServiceProvider().getConsentConfig().getEnabled();
    }
    */


    if (samlIssuerName != null && "update".equals(action)) {
        appBean.setSAMLIssuer(samlIssuerName);

        // Inbound authentication components might have set an application certificate in the session.
        // One usage in this scenario is, using the certificate inside SAML SP metadata.
        String applicationCertificate = (String) session.getAttribute("applicationCertificate");

        if (applicationCertificate != null) {
            appBean.getServiceProvider().setCertificateContent(applicationCertificate);
            session.removeAttribute("applicationCertificate");
        }

        isNeedToUpdate = true;
    }

    if (samlIssuerName != null && "delete".equals(action)) {
        appBean.deleteSAMLIssuer();
        isNeedToUpdate = true;
    }

    samlIssuerName = appBean.getSAMLIssuer();

    String kerberosServicePrinciple = request.getParameter("kerberos");

    if (kerberosServicePrinciple != null && "update".equals(action)) {
        appBean.setKerberosServiceName(kerberosServicePrinciple);
        isNeedToUpdate = true;
    }

    if (kerberosServicePrinciple != null && "delete".equals(action)) {
        appBean.deleteKerberosApp();
        isNeedToUpdate = true;
    }

    String attributeConsumingServiceIndex = request.getParameter("attrConServIndex");
    if (attributeConsumingServiceIndex != null) {
        appBean.setAttributeConsumingServiceIndex(attributeConsumingServiceIndex);
    }

    String oauthapp = request.getParameter("oauthapp");

    if (oauthapp != null && "update".equals(action)) {
        appBean.setOIDCAppName(oauthapp);
        isNeedToUpdate = true;
    }

    if (oauthapp != null && "delete".equals(action)) {
        appBean.deleteOauthApp();
        isNeedToUpdate = true;
    }

    String oauthConsumerSecret = null;

    if (session.getAttribute("oauth-consum-secret") != null && ("update".equals(action) || "regenerate".equals(action))) {
        oauthConsumerSecret = (String) session.getAttribute("oauth-consum-secret");
        appBean.setOauthConsumerSecret(oauthConsumerSecret);
        session.removeAttribute("oauth-consum-secret");
    }

    oauthapp = appBean.getOIDCClientId();

    String wsTrust = request.getParameter("serviceName");

    if (wsTrust != null && "update".equals(action)) {
        appBean.setWstrustEp(wsTrust);
        isNeedToUpdate = true;
    }

    if (wsTrust != null && "delete".equals(action)) {
        appBean.deleteWstrustEp();
        isNeedToUpdate = true;
    }

    wsTrust = appBean.getWstrustSP();

    String display = request.getParameter("display");

    if (idPName != null && idPName.equals("")) {
        idPName = null;
    }

    if ((ApplicationBean.AUTH_TYPE_FLOW.equals(authTypeReq) || "graph".equals(authTypeReq)) && "update".equals(action)) {
        isNeedToUpdate = true;
    }

    String authType = appBean.getAuthenticationType();

    StringBuffer localAuthTypes = new StringBuffer();
    String startOption = "<option value=\"";
    String middleOption = "\">";
    String endOPtion = "</option>";
    StringBuffer requestPathAuthTypes = new StringBuffer();
    RequestPathAuthenticatorConfig[] requestPathAuthenticators = appBean.getRequestPathAuthenticators();

    if (requestPathAuthenticators != null && requestPathAuthenticators.length > 0) {
        for (RequestPathAuthenticatorConfig reqAuth : requestPathAuthenticators) {
            requestPathAuthTypes.append(startOption + Encode.forHtmlAttribute(reqAuth.getName()) + middleOption + Encode.forHtmlContent(reqAuth.getDisplayName()) + endOPtion);
        }
    }

    Map<String, String> idpAuthenticators = new HashMap<String, String>();
    IdentityProvider[] federatedIdPs = appBean.getFederatedIdentityProviders();
    Map<String, String> proIdpConnector = new HashMap<String, String>();
    Map<String, String> enabledProIdpConnector = new HashMap<String, String>();
    Map<String, String> selectedProIdpConnectors = new HashMap<String, String>();
    Map<String, Boolean> idpStatus = new HashMap<String, Boolean>();
    Map<String, Boolean> IdpProConnectorsStatus = new HashMap<String, Boolean>();

    StringBuffer idpType = null;
    StringBuffer connType = null;
    StringBuffer enabledConnType = null;

    if (federatedIdPs != null && federatedIdPs.length > 0) {
        idpType = new StringBuffer();
        StringBuffer provisioningConnectors = null;
        for (IdentityProvider idp : federatedIdPs) {
            idpStatus.put(idp.getIdentityProviderName(), idp.getEnable());
            if (idp.getProvisioningConnectorConfigs() != null && idp.getProvisioningConnectorConfigs().length > 0) {
                ProvisioningConnectorConfig[] connectors = idp.getProvisioningConnectorConfigs();
                int i = 1;
                connType = new StringBuffer();
                enabledConnType = new StringBuffer();
                provisioningConnectors = new StringBuffer();
                for (ProvisioningConnectorConfig proConnector : connectors) {
                    if (i == connectors.length) {
                        provisioningConnectors.append(proConnector.getEnabled() ? proConnector.getName() : "");
                    } else {
                        provisioningConnectors.append(proConnector.getEnabled() ? proConnector.getName() + "," : "");
                    }
                    connType.append(startOption + Encode.forHtmlAttribute(proConnector.getName()) + middleOption + Encode.forHtmlContent(proConnector.getName()) + endOPtion);
                    if (proConnector.getEnabled()) {
                        enabledConnType.append(startOption + Encode.forHtmlAttribute(proConnector.getName()) + middleOption + Encode.forHtmlContent(proConnector.getName()) + endOPtion);
                    }
                    IdpProConnectorsStatus.put(idp.getIdentityProviderName() + "_" + proConnector.getName(), proConnector.getEnabled());
                    i++;
                }
                proIdpConnector.put(idp.getIdentityProviderName(), connType.toString());
                if (idp.getEnable()) {
                    enabledProIdpConnector.put(idp.getIdentityProviderName(), enabledConnType.toString());
                    idpType.append(startOption + Encode.forHtmlAttribute(idp.getIdentityProviderName()) + "\" data=\"" + Encode.forHtmlAttribute(provisioningConnectors.toString()) + "\" >" + Encode.forHtmlContent(idp.getIdentityProviderName()) + endOPtion);
                }
            }
        }

        if (appBean.getServiceProvider().getOutboundProvisioningConfig() != null
            && appBean.getServiceProvider().getOutboundProvisioningConfig().getProvisioningIdentityProviders() != null
            && appBean.getServiceProvider().getOutboundProvisioningConfig().getProvisioningIdentityProviders().length > 0) {

            IdentityProvider[] proIdps = appBean.getServiceProvider().getOutboundProvisioningConfig().getProvisioningIdentityProviders();
            for (IdentityProvider idp : proIdps) {
                ProvisioningConnectorConfig proIdp = idp.getDefaultProvisioningConnectorConfig();
                String options = proIdpConnector.get(idp.getIdentityProviderName());
                if (proIdp != null && options != null) {
                    String oldOption = startOption + Encode.forHtmlAttribute(proIdp.getName()) + middleOption + Encode.forHtmlContent(proIdp.getName()) + endOPtion;
                    String newOption = startOption + Encode.forHtmlAttribute(proIdp.getName()) + "\" selected=\"selected" + middleOption + Encode.forHtmlContent(proIdp.getName()) + endOPtion;
                    if (options.contains(oldOption)) {
                        options = options.replace(oldOption, newOption);
                    } else {
                        options = options + newOption;
                    }
                    selectedProIdpConnectors.put(idp.getIdentityProviderName(), options);
                } else {
                    options = enabledProIdpConnector.get(idp.getIdentityProviderName());
                    selectedProIdpConnectors.put(idp.getIdentityProviderName(), options);
                }

            }
        }

    }
    try {
        String cookie = (String) session.getAttribute(ServerConstants.ADMIN_SERVICE_COOKIE);
        String backendServerURL = CarbonUIUtil.getServerURL(config.getServletContext(), session);
        ConfigurationContext configContext = (ConfigurationContext) config.getServletContext()
            .getAttribute(CarbonConstants.CONFIGURATION_CONTEXT);
        ApplicationManagementServiceClient serviceClient = new ApplicationManagementServiceClient(cookie, backendServerURL, configContext);
        userStoreDomains = serviceClient.getUserStoreDomains();
        SpTemplate[] spTemplates = serviceClient.getAllApplicationTemplateInfo();
        if (spTemplates != null) {
            for (SpTemplate spTemplate : spTemplates) {
                spTemplateNames.append(spTemplate.getName()).append(",");
            }
        }
    } catch (Exception e) {
        CarbonUIMessage.sendCarbonUIMessage(e.getMessage(), CarbonUIMessage.ERROR, request, e);
    }

    String certString = appBean.getServiceProvider().getCertificateContent();
    CertData certData = null;
    if (StringUtils.isNotBlank(certString)) {
        try {
            certData = IdentityApplicationManagementUtil.getCertData(IdentityUtil.getCertificateString(certString));
        } catch (CertificateException e) {
            //Invalid cert data, ignore showing cert information in the UI
        }
    }


            out.write("\n");
            out.write("\n");
            out.write("<script>\n");
            out.write("\n");
            out.write("\n");
            out.write("    ");
 if(claimMapping != null) {
            out.write("\n");
            out.write("    var claimMappinRowID = ");
            out.print(claimMapping.size() -1 );
            out.write(";\n");
            out.write("    ");
} else {
            out.write("\n");
            out.write("    var claimMappinRowID = -1;\n");
            out.write("    ");
}
            out.write("\n");
            out.write("\n");
            out.write("    var reqPathAuth = 0;\n");
            out.write("\n");
            out.write("    ");
if(appBean.getServiceProvider().getRequestPathAuthenticatorConfigs() != null){
            out.write("\n");
            out.write("    var reqPathAuth = ");
            out.print(appBean.getServiceProvider().getRequestPathAuthenticatorConfigs().length);
            out.write(";\n");
            out.write("    ");
} else {
            out.write("\n");
            out.write("    var reqPathAuth = 0;\n");
            out.write("    ");
}
            out.write("\n");
            out.write("\n");
            out.write("    ");
 if(roleMapping != null) {
            out.write("\n");
            out.write("    var roleMappinRowID = ");
            out.print(roleMapping.size() -1 );
            out.write(";\n");
            out.write("    ");
 } else { 
            out.write("\n");
            out.write("    var roleMappinRowID = -1;\n");
            out.write("    ");
 } 
            out.write("\n");
            out.write("\n");
            out.write("    function saveAsTemplate() {\n");
            out.write("        showPopupConfirm($(\".editor-error-warn-container\").html(), \"Save Service Provider Template\", 250, 550, \"Save\", \"Cancel\",\n");
            out.write("            saveTemplate, null);\n");
            out.write("    }\n");
            out.write("\n");
            out.write("    function validateTextForIllegal(fld) {\n");
            out.write("        var isValid = doValidateInput(fld, '");
            out.print(resourceBundle.getString("alert.error.sp.template.not.available"));
            out.write("');\n");
            out.write("        if (isValid) {\n");
            out.write("            return true;\n");
            out.write("        }\n");
            out.write("        return false;\n");
            out.write("    }\n");
            out.write("\n");
            out.write("    function validateSPConfigurations() {\n");
            out.write("        if (document.getElementById(\"isDiscoverableApp\").checked) {\n");
            out.write("            var accessUrl = document.getElementById(\"accessURL\").value;\n");
            out.write("            if (accessUrl == '') {\n");
            out.write("                CARBON.showWarningDialog('");
            out.print(resourceBundle.getString("alert.please.provide.access.url.value"));
            out.write("');\n");
            out.write("                return false;\n");
            out.write("            }\n");
            out.write("        }\n");
            out.write("        if ($('input:radio[name=claim_dialect]:checked').val() == \"custom\") {\n");
            out.write("            var isValied = true;\n");
            out.write("            $.each($('.spClaimVal'), function () {\n");
            out.write("                if ($(this).val().length == 0) {\n");
            out.write("                    isValied = false;\n");
            out.write("                    CARBON.showWarningDialog('");
            out.print(resourceBundle.getString("alert.error.sp.template.claim.config"));
            out.write("');\n");
            out.write("                    return false;\n");
            out.write("                }\n");
            out.write("            });\n");
            out.write("            if (!isValied) {\n");
            out.write("                return false;\n");
            out.write("            }\n");
            out.write("        }\n");
            out.write("        // number_of_claim_mappings\n");
            out.write("        var numberOfClaimMappings = document.getElementById(\"claimMappingAddTable\").rows.length;\n");
            out.write("        document.getElementById('number_of_claim_mappings').value = numberOfClaimMappings;\n");
            out.write("\n");
            out.write("        if ($('[name=app_permission]').length > 0) {\n");
            out.write("            var isValied = true;\n");
            out.write("            $.each($('[name=app_permission]'), function () {\n");
            out.write("                if ($(this).val().length == 0) {\n");
            out.write("                    isValied = false;\n");
            out.write("                    CARBON.showWarningDialog('");
            out.print(resourceBundle.getString("alert.error.sp.template.permission.config"));
            out.write("');\n");
            out.write("                    return false;\n");
            out.write("                }\n");
            out.write("            });\n");
            out.write("            if (!isValied) {\n");
            out.write("                return false;\n");
            out.write("            }\n");
            out.write("        }\n");
            out.write("        if ($('.roleMapIdp').length > 0) {\n");
            out.write("            var isValied = true;\n");
            out.write("            $.each($('.roleMapIdp'), function () {\n");
            out.write("                if ($(this).val().length == 0) {\n");
            out.write("                    isValied = false;\n");
            out.write("                    CARBON.showWarningDialog('");
            out.print(resourceBundle.getString("alert.error.sp.template.role.config"));
            out.write("');\n");
            out.write("                    return false;\n");
            out.write("                }\n");
            out.write("            });\n");
            out.write("            if (isValied) {\n");
            out.write("                if ($('.roleMapSp').length > 0) {\n");
            out.write("                    $.each($('.roleMapSp'), function () {\n");
            out.write("                        if ($(this).val().length == 0) {\n");
            out.write("                            isValied = false;\n");
            out.write("                            CARBON.showWarningDialog('");
            out.print(resourceBundle.getString("alert.error.sp.template.role.config"));
            out.write("');\n");
            out.write("                            return false;\n");
            out.write("                        }\n");
            out.write("                    });\n");
            out.write("                }\n");
            out.write("            }\n");
            out.write("            if (!isValied) {\n");
            out.write("                return false;\n");
            out.write("            }\n");
            out.write("        }\n");
            out.write("        var numberOfPermissions = document.getElementById(\"permissionAddTable\").rows.length;\n");
            out.write("        document.getElementById('number_of_permissions').value = numberOfPermissions;\n");
            out.write("\n");
            out.write("        var numberOfRoleMappings = document.getElementById(\"roleMappingAddTable\").rows.length;\n");
            out.write("        document.getElementById('number_of_rolemappings').value = numberOfRoleMappings;\n");
            out.write("        return true;\n");
            out.write("    }\n");
            out.write("\n");
            out.write("    function saveTemplate() {\n");
            out.write("        var templateName = \"\";\n");
            out.write("        var templateDesc = \"\";\n");
            out.write("        var templateNames = \"\";\n");
            out.write("        $(\".template-name\").each(function() {\n");
            out.write("            if(this.value != \"\") {\n");
            out.write("                if (!validateTextForIllegal(this)) {\n");
            out.write("                    return false;\n");
            out.write("                }\n");
            out.write("                templateName  = $.trim(this.value);\n");
            out.write("            }\n");
            out.write("        });\n");
            out.write("        $(\".template-description\").each(function() {\n");
            out.write("            if(this.value != \"\") {\n");
            out.write("                templateDesc  = $.trim(this.value);\n");
            out.write("            }\n");
            out.write("        });\n");
            out.write("        if (templateName === null || 0 === templateName.length) {\n");
            out.write("            CARBON.showWarningDialog('");
            out.print(resourceBundle.getString("alert.error.sp.template.not.available"));
            out.write("');\n");
            out.write("            return;\n");
            out.write("        }\n");
            out.write("\n");
            out.write("        templateNames = document.getElementById('templateNames').value.split(\",\");\n");
            out.write("        for (var i = 0; i < templateNames.length; i++) {\n");
            out.write("            if (templateNames[i] == templateName) {\n");
            out.write("                CARBON.showWarningDialog('");
            out.print(resourceBundle.getString("alert.error.sp.template.name.taken"));
            out.write("');\n");
            out.write("                return;\n");
            out.write("            }\n");
            out.write("        }\n");
            out.write("\n");
            out.write("        document.getElementById('templateName').value = templateName;\n");
            out.write("        document.getElementById('templateDesc').value = templateDesc;\n");
            out.write("\n");
            out.write("        validateSPConfigurations();\n");
            out.write("        $.ajax({\n");
            out.write("            type: \"POST\",\n");
            out.write("            url: 'add-service-provider-as-template.jsp',\n");
            out.write("            data: $(\"#configure-sp-form\").serialize(),\n");
            out.write("            success: function (responseText, status) {\n");
            out.write("                if (status == \"success\") {\n");
            out.write("                    CARBON.showInfoDialog('");
            out.print(resourceBundle.getString("alert.success.add.sp.template"));
            out.write("');\n");
            out.write("                    return;\n");
            out.write("                } else {\n");
            out.write("                    CARBON.showErrorDialog('");
            out.print(resourceBundle.getString("alert.error.sp.template.add"));
            out.write("');\n");
            out.write("                    return;\n");
            out.write("                }\n");
            out.write("            },\n");
            out.write("            error: function(e) {\n");
            out.write("                CARBON.showErrorDialog('");
            out.print(resourceBundle.getString("alert.error.sp.template.add"));
            out.write("');\n");
            out.write("                return;\n");
            out.write("            },\n");
            out.write("            async: false\n");
            out.write("        });\n");
            out.write("    }\n");
            out.write("\n");
            out.write("    function createAppOnclick() {\n");
            out.write("        var spName = document.getElementById(\"spName\").value;\n");
            out.write("        if (spName == '') {\n");
            out.write("            CARBON.showWarningDialog('");
            if (_jspx_meth_fmt_005fmessage_005f0(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("');\n");
            out.write("            location.href = '#';\n");
            out.write("        } else if (!validateTextForIllegal(document.getElementById(\"spName\"))) {\n");
            out.write("            return false;\n");
            out.write("        } else {\n");
            out.write("            if (!validateSPConfigurations()) {\n");
            out.write("                return false;\n");
            out.write("            }\n");
            out.write("            if (jQuery('#deletePublicCert').val() == 'true') {\n");
            out.write("                var confirmationMessage = 'Are you sure you want to delete the public certificate of ' +\n");
            out.write("                    spName + '?';\n");
            out.write("                if (jQuery('#certFile').val() != '') {\n");
            out.write("                    confirmationMessage = confirmationMessage.replace(\"delete\", \"re-upload\");\n");
            out.write("                }\n");
            out.write("                CARBON.showConfirmationDialog(confirmationMessage,\n");
            out.write("                    function () {\n");
            out.write("                        document.getElementById(\"configure-sp-form\").submit();\n");
            out.write("                    },\n");
            out.write("                    function () {\n");
            out.write("                        return false;\n");
            out.write("                    });\n");
            out.write("            } else {\n");
            out.write("                document.getElementById(\"configure-sp-form\").submit();\n");
            out.write("            }\n");
            out.write("        }\n");
            out.write("    }\n");
            out.write("\n");
            out.write("    function updateBeanAndRedirect(redirectURL) {\n");
            out.write("        var numberOfClaimMappings = document.getElementById(\"claimMappingAddTable\").rows.length;\n");
            out.write("        document.getElementById('number_of_claim_mappings').value = numberOfClaimMappings;\n");
            out.write("\n");
            out.write("        var numberOfPermissions = document.getElementById(\"permissionAddTable\").rows.length;\n");
            out.write("        document.getElementById('number_of_permissions').value = numberOfPermissions;\n");
            out.write("\n");
            out.write("        var numberOfRoleMappings = document.getElementById(\"roleMappingAddTable\").rows.length;\n");
            out.write("        document.getElementById('number_of_rolemappings').value = numberOfRoleMappings;\n");
            out.write("\n");
            out.write("        $.ajax({\n");
            out.write("            type: \"POST\",\n");
            out.write("            url: 'update-application-bean.jsp?spName=");
            out.print(Encode.forUriComponent(spName));
            out.write("',\n");
            out.write("            data: $(\"#configure-sp-form\").serialize(),\n");
            out.write("            success: function () {\n");
            out.write("                location.href = redirectURL;\n");
            out.write("            }\n");
            out.write("        });\n");
            out.write("    }\n");
            out.write("\n");
            out.write("    function updateBeanAndPost(postURL, data, redirectURLOnSuccess) {\n");
            out.write("        var numberOfClaimMappings = document.getElementById(\"claimMappingAddTable\").rows.length;\n");
            out.write("        document.getElementById('number_of_claim_mappings').value = numberOfClaimMappings;\n");
            out.write("\n");
            out.write("        var numberOfPermissions = document.getElementById(\"permissionAddTable\").rows.length;\n");
            out.write("        document.getElementById('number_of_permissions').value = numberOfPermissions;\n");
            out.write("\n");
            out.write("        var numberOfRoleMappings = document.getElementById(\"roleMappingAddTable\").rows.length;\n");
            out.write("        document.getElementById('number_of_rolemappings').value = numberOfRoleMappings;\n");
            out.write("\n");
            out.write("        $.ajax({\n");
            out.write("            type: \"POST\",\n");
            out.write("            url: 'update-application-bean.jsp?spName=");
            out.print(Encode.forUriComponent(spName));
            out.write("',\n");
            out.write("            data: $(\"#configure-sp-form\").serialize(),\n");
            out.write("            success: function () {\n");
            out.write("                $.ajax({\n");
            out.write("                    type: 'POST',\n");
            out.write("                    url: postURL,\n");
            out.write("                    headers: {\n");
            out.write("                        Accept: \"text/html\"\n");
            out.write("                    },\n");
            out.write("                    data: data,\n");
            out.write("                    async: false,\n");
            out.write("                    success: function (responseText, status) {\n");
            out.write("                        if (status == \"success\") {\n");
            out.write("                            location.assign(redirectURLOnSuccess);\n");
            out.write("                        }\n");
            out.write("                    }\n");
            out.write("                });\n");
            out.write("            }\n");
            out.write("        });\n");
            out.write("    }\n");
            out.write("\n");
            out.write("    function updateBeanAndPostTo(postURL, data) {\n");
            out.write("        $.ajax({\n");
            out.write("            type: \"POST\",\n");
            out.write("            url: 'update-application-bean.jsp?spName=");
            out.print(Encode.forUriComponent(spName));
            out.write("',\n");
            out.write("            data: $(\"#configure-sp-form\").serialize(),\n");
            out.write("            success: function () {\n");
            out.write("\n");
            out.write("                $.ajax({\n");
            out.write("                    type: 'POST',\n");
            out.write("                    url: postURL,\n");
            out.write("                    data: data,\n");
            out.write("                    success: function (data, textStatus, request) {\n");
            out.write("                        window.location = request.getResponseHeader('redirectUrl');\n");
            out.write("                    }\n");
            out.write("\n");
            out.write("                });\n");
            out.write("            }\n");
            out.write("        });\n");
            out.write("    }\n");
            out.write("\n");
            out.write("    function onSamlSsoClick() {\n");
            out.write("        var spName = document.getElementById(\"oldSPName\").value;\n");
            out.write("        if (spName != '') {\n");
            out.write("            updateBeanAndRedirect(\"../sso-saml/add_service_provider.jsp?spName=\" + spName);\n");
            out.write("        } else {\n");
            out.write("            CARBON.showWarningDialog('");
            if (_jspx_meth_fmt_005fmessage_005f1(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("');\n");
            out.write("            document.getElementById(\"saml_link\").href = \"#\"\n");
            out.write("        }\n");
            out.write("    }\n");
            out.write("\n");
            out.write("    function onKerberosClick() {\n");
            out.write("        var spName = document.getElementById(\"oldSPName\").value;\n");
            out.write("        if (spName != '') {\n");
            out.write("            updateBeanAndRedirect(\"../servicestore/add-step1.jsp?spName=\" + spName);\n");
            out.write("        } else {\n");
            out.write("            CARBON.showWarningDialog('");
            if (_jspx_meth_fmt_005fmessage_005f2(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("');\n");
            out.write("            document.getElementById(\"kerberos_link\").href = \"#\"\n");
            out.write("        }\n");
            out.write("    }\n");
            out.write("\n");
            out.write("    function onOauthClick() {\n");
            out.write("        var spName = document.getElementById(\"oldSPName\").value;\n");
            out.write("        if (spName != '') {\n");
            out.write("            updateBeanAndRedirect(\"../oauth/add.jsp?spName=\" + spName);\n");
            out.write("        } else {\n");
            out.write("            CARBON.showWarningDialog('");
            if (_jspx_meth_fmt_005fmessage_005f3(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("');\n");
            out.write("            document.getElementById(\"oauth_link\").href = \"#\"\n");
            out.write("        }\n");
            out.write("    }\n");
            out.write("\n");
            out.write("    function onSTSClick() {\n");
            out.write("        var spName = document.getElementById(\"oldSPName\").value;\n");
            out.write("        if (spName != '') {\n");
            out.write("            updateBeanAndRedirect(\"../generic-sts/sts.jsp?spName=\" + spName);\n");
            out.write("        } else {\n");
            out.write("            CARBON.showWarningDialog('");
            if (_jspx_meth_fmt_005fmessage_005f4(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("');\n");
            out.write("            document.getElementById(\"sts_link\").href = \"#\"\n");
            out.write("        }\n");
            out.write("    }\n");
            out.write("\n");
            out.write("    function deleteReqPathRow(obj) {\n");
            out.write("        reqPathAuth--;\n");
            out.write("        jQuery(obj).parent().parent().remove();\n");
            out.write("        if ($(jQuery('#permissionAddTable tr')).length == 1) {\n");
            out.write("            $(jQuery('#permissionAddTable')).toggle();\n");
            out.write("        }\n");
            out.write("    }\n");
            out.write("\n");
            out.write("    function onAdvanceAuthClick() {\n");
            out.write("        location.href = 'configure-authentication-flow.jsp?spName=");
            out.print(Encode.forUriComponent(spName));
            out.write("';\n");
            out.write("    }\n");
            out.write("\n");
            out.write("    // Will be supported with 'Advance Consent Management Feature'.\n");
            out.write("    ");
            out.write("\n");
            out.write("\n");
            out.write("    function onClickAddSpClaimDialectUri() {\n");
            out.write("\n");
            out.write("        var spClaimDialect = $(\"#standard_dialect\").val();\n");
            out.write("        if (spClaimDialect == null || spClaimDialect.trim().length == 0) {\n");
            out.write("            CARBON.showWarningDialog(\"");
            if (_jspx_meth_fmt_005fmessage_005f5(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\",\n");
            out.write("                null, null);\n");
            out.write("            return false;\n");
            out.write("        }\n");
            out.write("        spClaimDialect = spClaimDialect.trim();\n");
            out.write("        if (!$(\"#spClaimDialectsTblRow\").length) {\n");
            out.write("            var row = '<tr id=\"spClaimDialectsTblRow\">' +\n");
            out.write("                '    <td></td>' +\n");
            out.write("                '    <td>' +\n");
            out.write("                '        <table id=\"spClaimDialectsTable\" style=\"width: 40%; margin-bottom: 3px;\" class=\"styledInner\">' +\n");
            out.write("                '            <tbody id=\"spClaimDialectsTableBody\">' +\n");
            out.write("                '            </tbody>' +\n");
            out.write("                '        </table>' +\n");
            out.write("                '        <input type=\"hidden\" id=\"spClaimDialects\" name=\"spClaimDialects\" value=\"\">' +\n");
            out.write("                '        <input type=\"hidden\" id=\"currentColumnId\" value=\"0\">' +\n");
            out.write("                '    </td>' +\n");
            out.write("                '</tr>';\n");
            out.write("            $('#spClaimDialectInputRow').after(row);\n");
            out.write("        }\n");
            out.write("        var spClaimDialects = $(\"#spClaimDialects\").val();\n");
            out.write("        var currentColumnId = $(\"#currentColumnId\").val();\n");
            out.write("        if (spClaimDialects == null || spClaimDialects.trim().length == 0) {\n");
            out.write("            $(\"#spClaimDialects\").val(spClaimDialect);\n");
            out.write("            var row =\n");
            out.write("                '<tr id=\"spClaimDialectUri_' + parseInt(currentColumnId) + '\">' +\n");
            out.write("                '</td><td style=\"padding-left: 30px !important; color: rgb(119, 119, 119);font-style: italic;\">' +\n");
            out.write("                encodeForHTML(spClaimDialect) +\n");
            out.write("                '</td><td><a onclick=\"removeSpClaimDialect(\\'' + encodeForHTML(encodeQuotesForJavascript(spClaimDialect)) +\n");
            out.write("                '\\', \\'spClaimDialectUri_' +\n");
            out.write("                parseInt(currentColumnId) + '\\');return false;\"' +\n");
            out.write("                ' href=\"#\" class=\"icon-link\" style=\"background-image: url(../admin/images/delete.gif)\">Delete</a></td></tr>';\n");
            out.write("            $('#spClaimDialectsTable tbody').append(row);\n");
            out.write("        } else {\n");
            out.write("            var isExist = false;\n");
            out.write("            $.each(spClaimDialects.split(\",\"), function (index, value) {\n");
            out.write("                if (value === spClaimDialect) {\n");
            out.write("                    isExist = true;\n");
            out.write("                    CARBON.showWarningDialog(\"");
            if (_jspx_meth_fmt_005fmessage_005f6(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\",\n");
            out.write("                        null, null);\n");
            out.write("                    return false;\n");
            out.write("                }\n");
            out.write("            });\n");
            out.write("            if (isExist) {\n");
            out.write("                return false;\n");
            out.write("            }\n");
            out.write("            $(\"#spClaimDialects\").val(spClaimDialects + \",\" + spClaimDialect);\n");
            out.write("            var row =\n");
            out.write("                '<tr id=\"spClaimDialectUri_' + parseInt(currentColumnId) + '\">' +\n");
            out.write("                '</td><td style=\"padding-left: 30px !important; color: rgb(119, 119, 119);font-style: italic;\">' +\n");
            out.write("                encodeForHTML(spClaimDialect) +\n");
            out.write("                '</td><td><a onclick=\"removeSpClaimDialect(\\'' +\n");
            out.write("                encodeForHTML(encodeQuotesForJavascript(spClaimDialect)) +\n");
            out.write("                '\\', \\'spClaimDialectUri_' +\n");
            out.write("                parseInt(currentColumnId) + '\\');return false;\"' +\n");
            out.write("                ' href=\"#\" class=\"icon-link\" style=\"background-image: url(../admin/images/delete.gif)\">Delete</a></td></tr>';\n");
            out.write("            $('#spClaimDialectsTable tr:last').after(row);\n");
            out.write("        }\n");
            out.write("        $(\"#standard_dialect\").val(\"\");\n");
            out.write("        $(\"#currentColumnId\").val(parseInt(currentColumnId) + 1);\n");
            out.write("    }\n");
            out.write("\n");
            out.write("    function removeSpClaimDialect(spClaimDialect, columnId) {\n");
            out.write("\n");
            out.write("        var spClaimDialects = $(\"#spClaimDialects\").val();\n");
            out.write("        var newSpClaimDialects = \"\";\n");
            out.write("        if (spClaimDialects != null && spClaimDialects.trim().length > 0) {\n");
            out.write("            $.each(spClaimDialects.split(\",\"), function (index, value) {\n");
            out.write("                if (value.trim() === spClaimDialect.trim()) {\n");
            out.write("                    return true;\n");
            out.write("                }\n");
            out.write("                if (newSpClaimDialects.length > 0) {\n");
            out.write("                    newSpClaimDialects = newSpClaimDialects + \",\" + value.trim();\n");
            out.write("                } else {\n");
            out.write("                    newSpClaimDialects = value.trim();\n");
            out.write("                }\n");
            out.write("            });\n");
            out.write("        }\n");
            out.write("        $('#' + columnId).remove();\n");
            out.write("        $(\"#spClaimDialects\").val(newSpClaimDialects);\n");
            out.write("        if (newSpClaimDialects.length == 0) {\n");
            out.write("            $('#spClaimDialectsTblRow').remove();\n");
            out.write("        }\n");
            out.write("    }\n");
            out.write("\n");
            out.write("    var openFile = function (event) {\n");
            out.write("        var input = event.target;\n");
            out.write("\n");
            out.write("        var reader = new FileReader();\n");
            out.write("        reader.onload = function () {\n");
            out.write("            var data = reader.result;\n");
            out.write("            document.getElementById('sp-certificate').value = data;\n");
            out.write("        };\n");
            out.write("        reader.readAsText(input.files[0]);\n");
            out.write("    };\n");
            out.write("\n");
            out.write("    var resetCertFile = function (event) {\n");
            out.write("        event.preventDefault();\n");
            out.write("        document.getElementById('sp-certificate').value = document.getElementById('sp-old-certificate').value;\n");
            out.write("    };\n");
            out.write("\n");
            out.write("    function copyTextClick(value) {\n");
            out.write("        var copyText = value;\n");
            out.write("        copyText.select();\n");
            out.write("        document.execCommand(\"Copy\");\n");
            out.write("\n");
            out.write("        return false;\n");
            out.write("    }\n");
            out.write("\n");
            out.write("    $(function () {\n");
            out.write("        $(\"#showDialog\").dialog({\n");
            out.write("            autoOpen: false,\n");
            out.write("            modal: true,\n");
            out.write("            buttons: {\n");
            out.write("                OK: function () {\n");
            out.write("                    $(this).dialog(\"close\");\n");
            out.write("                }\n");
            out.write("            },\n");
            out.write("            height: 300,\n");
            out.write("            width: 590,\n");
            out.write("            modal: true\n");
            out.write("        });\n");
            out.write("    });\n");
            out.write("\n");
            out.write("    window.onload = function (e) {\n");
            out.write("        showManual();\n");
            out.write("        ");
 if(isHashDisabled != null && "false".equals(isHashDisabled) && appBean.getOIDCClientId() != null &&
           appBean.getOauthConsumerSecret() != null && ((operation != null && "add".equals(operation)) || "regenerate".equals(action))) { 
            out.write("\n");
            out.write("        $(\"#showDialog\").dialog(\"open\");\n");
            out.write("        ");
 } 
            out.write("\n");
            out.write("        ");
 if (createTemplateError.length > 0) { 
            out.write("\n");
            out.write("        $( \"#createTemplateErrorMsgDialog\" ).dialog( \"open\" );\n");
            out.write("        ");
 } 
            out.write("\n");
            out.write("    }\n");
            out.write("\n");
            out.write("    jQuery(document).ready(function () {\n");
            out.write("        jQuery('#authenticationConfRow').hide();\n");
            out.write("        jQuery('#outboundProvisioning').hide();\n");
            out.write("        jQuery('#inboundProvisioning').hide();\n");
            out.write("        jQuery('#ReqPathAuth').hide();\n");
            out.write("        jQuery('#permissionConfRow').hide();\n");
            out.write("        jQuery('#claimsConfRow').hide();\n");
            out.write("        jQuery('h2.trigger').click(function () {\n");
            out.write("            if (jQuery(this).next().is(\":visible\")) {\n");
            out.write("                this.className = \"active trigger\";\n");
            out.write("            } else {\n");
            out.write("                this.className = \"trigger\";\n");
            out.write("            }\n");
            out.write("            jQuery(this).next().slideToggle(\"fast\");\n");
            out.write("            return false; //Prevent the browser jump to the link anchor\n");
            out.write("        });\n");
            out.write("        jQuery('#permissionAddLink').click(function () {\n");
            out.write("            jQuery('#permissionAddTable').append(jQuery('<tr><td class=\"leftCol-big\"><input style=\"width: 98%;\" type=\"text\" id=\"app_permission\" name=\"app_permission\"/></td>' +\n");
            out.write("                '<td><a onclick=\"deletePermissionRow(this)\" class=\"icon-link\" ' +\n");
            out.write("                'style=\"background-image: url(images/delete.gif)\">' +\n");
            out.write("                'Delete' +\n");
            out.write("                '</a></td></tr>'));\n");
            out.write("        });\n");
            out.write("        jQuery('#claimMappingAddLink').click(function () {\n");
            out.write("            $('#claimMappingAddTable').show();\n");
            out.write("            var selectedIDPClaimName = $('select[name=idpClaimsList]').val();\n");
            out.write("            if (!validaForDuplications('.idpClaim', selectedIDPClaimName, 'Local Claim')) {\n");
            out.write("                return false;\n");
            out.write("            }\n");
            out.write("            claimMappinRowID++;\n");
            out.write("            var idpClaimListDiv = $('#localClaimsList').clone();\n");
            out.write("            if (idpClaimListDiv.length > 0) {\n");
            out.write("                $(idpClaimListDiv.find('select')).attr('id', 'idpClaim_' + claimMappinRowID);\n");
            out.write("                $(idpClaimListDiv.find('select')).attr('name', 'idpClaim_' + claimMappinRowID);\n");
            out.write("                $(idpClaimListDiv.find('select')).addClass(\"idpClaim\");\n");
            out.write("            }\n");
            out.write("            if ($('input:radio[name=claim_dialect]:checked').val() == \"local\") {\n");
            out.write("                $('.spClaimHeaders').hide();\n");
            out.write("                $('#roleMappingSelection').hide();\n");
            out.write("                jQuery('#claimMappingAddTable').append(jQuery('<tr>' +\n");
            out.write("                    '<td style=\"display:none;\"><input type=\"text\" style=\"width: 98%;\" id=\"spClaim_' + claimMappinRowID + '\" name=\"spClaim_' + claimMappinRowID + '\"/></td> ' +\n");
            out.write("                    '<td>' + idpClaimListDiv.html() + '</td>' +\n");
            out.write("                    '<td style=\"display:none;\"><input type=\"checkbox\"  name=\"spClaim_req_' + claimMappinRowID + '\"  id=\"spClaim_req_' + claimMappinRowID + '\" checked/></td>' +\n");
            out.write("                    '<td><input type=\"checkbox\"  name=\"spClaim_mand_' + claimMappinRowID + '\"  id=\"spClaim_mand_' + claimMappinRowID + '\"/></td>' +\n");
            out.write("                    '<td><a onclick=\"deleteClaimRow(this);return false;\" href=\"#\" class=\"icon-link\" style=\"background-image: url(images/delete.gif)\"> Delete</a></td>' +\n");
            out.write("                    '</tr>'));\n");
            out.write("            }\n");
            out.write("            else {\n");
            out.write("                $('.spClaimHeaders').show();\n");
            out.write("                $('#roleMappingSelection').show();\n");
            out.write("                jQuery('#claimMappingAddTable').append(jQuery('<tr>' +\n");
            out.write("                    '<td><input type=\"text\" class=\"spClaimVal\" style=\"width: 98%;\" id=\"spClaim_' + claimMappinRowID + '\" name=\"spClaim_' + claimMappinRowID + '\"/></td> ' +\n");
            out.write("                    '<td>' + idpClaimListDiv.html() + '</td>' +\n");
            out.write("                    '<td><input type=\"checkbox\"  name=\"spClaim_req_' + claimMappinRowID + '\"  id=\"spClaim_req_' + claimMappinRowID + '\"/></td>' +\n");
            out.write("                    '<td><input type=\"checkbox\"  name=\"spClaim_mand_' + claimMappinRowID + '\"  id=\"spClaim_mand_' + claimMappinRowID + '\"/></td>' +\n");
            out.write("                    '<td><a onclick=\"deleteClaimRow(this);return false;\" href=\"#\" class=\"icon-link\" style=\"background-image: url(images/delete.gif)\"> Delete</a></td>' +\n");
            out.write("                    '</tr>'));\n");
            out.write("                $('#spClaim_' + claimMappinRowID).change(function () {\n");
            out.write("                    resetRoleClaims();\n");
            out.write("                });\n");
            out.write("            }\n");
            out.write("\n");
            out.write("        });\n");
            out.write("        jQuery('#roleMappingAddLink').click(function () {\n");
            out.write("            roleMappinRowID++;\n");
            out.write("            $('#roleMappingAddTable').show();\n");
            out.write("            jQuery('#roleMappingAddTable').append(jQuery('<tr><td><input style=\"width: 98%;\" class=\"roleMapIdp\" type=\"text\" id=\"idpRole_' + roleMappinRowID + '\" name=\"idpRole_' + roleMappinRowID + '\"/></td>' +\n");
            out.write("                '<td><input style=\"width: 98%;\" class=\"roleMapSp\" type=\"text\" id=\"spRole_' + roleMappinRowID + '\" name=\"spRole_' + roleMappinRowID + '\"/></td> ' +\n");
            out.write("                '<td><a onclick=\"deleteRoleMappingRow(this);return false;\" href=\"#\" class=\"icon-link\" style=\"background-image: url(images/delete.gif)\"> Delete</a>' +\n");
            out.write("                '</td></tr>'));\n");
            out.write("        })\n");
            out.write("        jQuery('#reqPathAuthenticatorAddLink').click(function () {\n");
            out.write("            reqPathAuth++;\n");
            out.write("            var selectedRePathAuthenticator = jQuery(this).parent().children()[0].value;\n");
            out.write("            if (!validaForDuplications('[name=req_path_auth]', selectedRePathAuthenticator, \"Configuration\")) {\n");
            out.write("                return false;\n");
            out.write("            }\n");
            out.write("\n");
            out.write("            jQuery(this)\n");
            out.write("                .parent()\n");
            out.write("                .parent()\n");
            out.write("                .parent()\n");
            out.write("                .parent()\n");
            out.write("                .append(\n");
            out.write("                    jQuery('<tr><td><input name=\"req_path_auth' + '\" id=\"req_path_auth\" type=\"hidden\" value=\"' + selectedRePathAuthenticator + '\" />' + selectedRePathAuthenticator + '</td><td class=\"leftCol-small\" ><a onclick=\"deleteReqPathRow(this);return false;\" href=\"#\" class=\"icon-link\" style=\"background-image: url(images/delete.gif)\"> Delete </a></td></tr>'));\n");
            out.write("\n");
            out.write("        });\n");
            out.write("\n");
            out.write("        $(\"[name=claim_dialect]\").click(function () {\n");
            out.write("            var element = $(this);\n");
            out.write("            var currentId = element.attr('id');\n");
            out.write("\n");
            out.write("            claimMappinRowID = -1;\n");
            out.write("\n");
            out.write("            if ($('.idpClaim').length > 0) {\n");
            out.write("                CARBON.showConfirmationDialog('Changing dialect will delete all claim mappings. Do you want to proceed?',\n");
            out.write("                    function () {\n");
            out.write("                        $.each($('.idpClaim'), function () {\n");
            out.write("                            $(this).parent().parent().remove();\n");
            out.write("                        });\n");
            out.write("                        $('#claimMappingAddTable').hide();\n");
            out.write("                        changeDialectUIs(element);\n");
            out.write("                    },\n");
            out.write("                    function () {\n");
            out.write("                        //Reset checkboxes\n");
            out.write("                        if (currentId === \"claim_dialect_custom\") {\n");
            out.write("                            $('#claim_dialect_wso2').attr('checked', (element.val() == 'custom'));\n");
            out.write("                        } else {\n");
            out.write("                            $('#claim_dialect_custom').attr('checked', (element.val() == 'local'));\n");
            out.write("                        }\n");
            out.write("                    });\n");
            out.write("                jQuery('.ui-dialog-titlebar-close').click(function () {\n");
            out.write("                    //Reset checkboxes\n");
            out.write("                    if (currentId === \"claim_dialect_custom\") {\n");
            out.write("                        $('#claim_dialect_wso2').attr('checked', (element.val() == 'custom'));\n");
            out.write("                    } else {\n");
            out.write("                        $('#claim_dialect_custom').attr('checked', (element.val() == 'local'));\n");
            out.write("                    }\n");
            out.write("                })\n");
            out.write("            } else {\n");
            out.write("                $('#claimMappingAddTable').hide();\n");
            out.write("                changeDialectUIs(element);\n");
            out.write("            }\n");
            out.write("        });\n");
            out.write("\n");
            out.write("        var authenticationType = $('input:radio[name=auth_type]:checked').val();\n");
            out.write("        var isAuthTypeClicked = false;\n");
            out.write("        var lastSelectedAuthType;\n");
            out.write("        var changeAuthTypeMsg = \"Changing the Authentication Type from Advanced Configuration to another will remove the \" +\n");
            out.write("            \"advanced configurations when updating the Service Provider. Do you want to proceed?\";\n");
            out.write("\n");
            out.write("        $('#advanceAuthnConfRow input[name=auth_type]').mouseup(function(){\n");
            out.write("            lastSelectedAuthType = $('#advanceAuthnConfRow input[name=auth_type]:checked').val();\n");
            out.write("        }).change(function(){\n");
            out.write("            if(!isAuthTypeClicked && authenticationType == \"flow\" && $(this).val() !== \"flow\") {\n");
            out.write("                isAuthTypeClicked = true;\n");
            out.write("                CARBON.showConfirmationDialog(changeAuthTypeMsg,\n");
            out.write("                    function () {\n");
            out.write("                        return false;\n");
            out.write("                    },\n");
            out.write("                    function () {\n");
            out.write("                        $('#advanceAuthnConfRow input[name=auth_type][value=' + lastSelectedAuthType + ']').prop('checked', true);\n");
            out.write("                        isAuthTypeClicked = false;\n");
            out.write("\n");
            out.write("                    });\n");
            out.write("            }\n");
            out.write("        });\n");
            out.write("        \n");
            out.write("\n");
            out.write("        if ($('#isNeedToUpdate').val() == 'true') {\n");
            out.write("            $('#isNeedToUpdate').val('false');\n");
            out.write("            var numberOfClaimMappings = document.getElementById(\"claimMappingAddTable\").rows.length;\n");
            out.write("            document.getElementById('number_of_claim_mappings').value = numberOfClaimMappings;\n");
            out.write("\n");
            out.write("            var numberOfPermissions = document.getElementById(\"permissionAddTable\").rows.length;\n");
            out.write("            document.getElementById('number_of_permissions').value = numberOfPermissions;\n");
            out.write("\n");
            out.write("            var numberOfRoleMappings = document.getElementById(\"roleMappingAddTable\").rows.length;\n");
            out.write("            document.getElementById('number_of_rolemappings').value = numberOfRoleMappings;\n");
            out.write("\n");
            out.write("            $.ajax({\n");
            out.write("                type: \"POST\",\n");
            out.write("                url: 'configure-service-provider-update-ajaxprocessor.jsp?spName=");
            out.print(Encode.forUriComponent(spName));
            out.write("',\n");
            out.write("                data: $(\"#configure-sp-form\").serialize()\n");
            out.write("            });\n");
            out.write("        }\n");
            out.write("\n");
            out.write("        jQuery('#publicCertDeleteLink').click(function () {\n");
            out.write("            $(jQuery('#publicCertDiv')).toggle();\n");
            out.write("            var input = document.createElement('input');\n");
            out.write("            input.type = \"hidden\";\n");
            out.write("            input.name = \"deletePublicCert\";\n");
            out.write("            input.id = \"deletePublicCert\";\n");
            out.write("            input.value = \"true\";\n");
            out.write("            document.forms['configure-sp-form'].appendChild(input);\n");
            out.write("            document.getElementById('sp-certificate').value = \"\";\n");
            out.write("        });\n");
            out.write("\n");
            out.write("    });\n");
            out.write("\n");
            out.write("    function resetRoleClaims() {\n");
            out.write("        $(\"#roleClaim option\").filter(function () {\n");
            out.write("            return $(this).val().length > 0;\n");
            out.write("        }).remove();\n");
            out.write("        $(\"#subject_claim_uri option\").filter(function () {\n");
            out.write("            return $(this).val().length > 0;\n");
            out.write("        }).remove();\n");
            out.write("        $.each($('.spClaimVal'), function () {\n");
            out.write("            if ($(this).val().length > 0) {\n");
            out.write("                $(\"#roleClaim\").append('<option value=\"' + $(this).val() + '\">' + $(this).val() + '</option>');\n");
            out.write("                $('#subject_claim_uri').append('<option value=\"' + $(this).val() + '\">' + $(this).val() + '</option>');\n");
            out.write("            }\n");
            out.write("        });\n");
            out.write("    }\n");
            out.write("\n");
            out.write("    function changeDialectUIs(element) {\n");
            out.write("        $(\"#roleClaim option\").filter(function () {\n");
            out.write("            return $(this).val().length > 0;\n");
            out.write("        }).remove();\n");
            out.write("\n");
            out.write("        $(\"#subject_claim_uri option\").filter(function () {\n");
            out.write("            return $(this).val().length > 0;\n");
            out.write("        }).remove();\n");
            out.write("\n");
            out.write("        if (element.val() == 'local') {\n");
            out.write("            $('#addClaimUrisLbl').text('Requested Claims:');\n");
            out.write("            $('#roleMappingSelection').hide();\n");
            out.write("            if ($('#local_calim_uris').length > 0 && $('#local_calim_uris').val().length > 0) {\n");
            out.write("                var dataArray = $('#local_calim_uris').val().split(',');\n");
            out.write("                if (dataArray.length > 0) {\n");
            out.write("                    var optionsList = \"\";\n");
            out.write("                    $.each(dataArray, function () {\n");
            out.write("                        if (this.length > 0) {\n");
            out.write("                            optionsList += '<option value=' + this + '>' + this + '</option>'\n");
            out.write("                        }\n");
            out.write("                    });\n");
            out.write("                    if (optionsList.length > 0) {\n");
            out.write("                        $('#subject_claim_uri').append(optionsList);\n");
            out.write("                    }\n");
            out.write("                }\n");
            out.write("            }\n");
            out.write("        } else {\n");
            out.write("            $('#addClaimUrisLbl').text('Service Provider Claim URIs:');\n");
            out.write("            $('#roleMappingSelection').show();\n");
            out.write("        }\n");
            out.write("    }\n");
            out.write("\n");
            out.write("    function deleteClaimRow(obj) {\n");
            out.write("        if ($('input:radio[name=claim_dialect]:checked').val() == \"custom\") {\n");
            out.write("            if ($(obj).parent().parent().find('input.spClaimVal').val().length > 0) {\n");
            out.write("                $('#roleClaim option[value=\"' + $(obj).parent().parent().find('input.spClaimVal').val() + '\"]').remove();\n");
            out.write("                $('#subject_claim_uri option[value=\"' + $(obj).parent().parent().find('input.spClaimVal').val() + '\"]').remove();\n");
            out.write("            }\n");
            out.write("        }\n");
            out.write("\n");
            out.write("        jQuery(obj).parent().parent().remove();\n");
            out.write("        if ($('.idpClaim').length == 0) {\n");
            out.write("            $('#claimMappingAddTable').hide();\n");
            out.write("        }\n");
            out.write("    }\n");
            out.write("\n");
            out.write("    function deleteRoleMappingRow(obj) {\n");
            out.write("        jQuery(obj).parent().parent().remove();\n");
            out.write("        if ($('.roleMapIdp').length == 0) {\n");
            out.write("            $('#roleMappingAddTable').hide();\n");
            out.write("        }\n");
            out.write("    }\n");
            out.write("\n");
            out.write("    function deletePermissionRow(obj) {\n");
            out.write("        jQuery(obj).parent().parent().remove();\n");
            out.write("    }\n");
            out.write("\n");
            out.write("    var deletePermissionRows = [];\n");
            out.write("\n");
            out.write("    function deletePermissionRowOld(obj) {\n");
            out.write("        if (jQuery(obj).parent().prev().children()[0].value != '') {\n");
            out.write("            deletePermissionRows.push(jQuery(obj).parent().prev().children()[0].value);\n");
            out.write("        }\n");
            out.write("        jQuery(obj).parent().parent().remove();\n");
            out.write("        if ($(jQuery('#permissionAddTable tr')).length == 1) {\n");
            out.write("            $(jQuery('#permissionAddTable')).toggle();\n");
            out.write("        }\n");
            out.write("    }\n");
            out.write("\n");
            out.write("    function addIDPRow(obj) {\n");
            out.write("        var selectedObj = jQuery(obj).prev().find(\":selected\");\n");
            out.write("\n");
            out.write("        var selectedIDPName = selectedObj.val();\n");
            out.write("        if (!validaForDuplications('[name=provisioning_idp]', selectedIDPName, 'Configuration')) {\n");
            out.write("            return false;\n");
            out.write("        }\n");
            out.write("\n");
            out.write("        //var stepID = jQuery(obj).parent().children()[1].value;\n");
            out.write("        var dataArray = selectedObj.attr('data').split(',');\n");
            out.write("        var newRow = '<tr><td><input name=\"provisioning_idp\" id=\"\" type=\"hidden\" value=\"' + selectedIDPName + '\" />' + selectedIDPName + ' </td><td> <select name=\"provisioning_con_idp_' + selectedIDPName + '\" style=\"float: left; min-width: 150px;font-size:13px;\">';\n");
            out.write("        for (var i = 0; i < dataArray.length; i++) {\n");
            out.write("            if (dataArray[i].length > 0) {\n");
            out.write("                newRow += '<option>' + dataArray[i] + '</option>';\n");
            out.write("            }\n");
            out.write("        }\n");
            out.write("        newRow += '</select></td><td><input type=\"checkbox\" name=\"blocking_prov_' + selectedIDPName +\n");
            out.write("            '\"  />Blocking</td><td><input type=\"checkbox\" name=\"rules_enabled_' + selectedIDPName +\n");
            out.write("            '\"  />Enable Rules</td><td><input type=\"checkbox\" name=\"provisioning_jit_' + selectedIDPName +\n");
            out.write("            '\"  />JIT Outbound</td><td class=\"leftCol-small\" ><a onclick=\"deleteIDPRow(this);return false;\" href=\"#\" class=\"icon-link\" style=\"background-image: url(images/delete.gif)\"> Delete </a></td></tr>';\n");
            out.write("        jQuery(obj)\n");
            out.write("            .parent()\n");
            out.write("            .parent()\n");
            out.write("            .parent()\n");
            out.write("            .parent()\n");
            out.write("            .append(\n");
            out.write("                jQuery(newRow));\n");
            out.write("    }\n");
            out.write("\n");
            out.write("    function deleteIDPRow(obj) {\n");
            out.write("        jQuery(obj).parent().parent().remove();\n");
            out.write("    }\n");
            out.write("\n");
            out.write("    function validaForDuplications(selector, authenticatorName, type) {\n");
            out.write("        if ($(selector).length > 0) {\n");
            out.write("            var isNew = true;\n");
            out.write("            $.each($(selector), function () {\n");
            out.write("                if ($(this).val() == authenticatorName) {\n");
            out.write("                    CARBON.showWarningDialog(type + ' \"' + authenticatorName + '\" is already added');\n");
            out.write("                    isNew = false;\n");
            out.write("                    return false;\n");
            out.write("                }\n");
            out.write("            });\n");
            out.write("            if (!isNew) {\n");
            out.write("                return false;\n");
            out.write("            }\n");
            out.write("        }\n");
            out.write("        return true;\n");
            out.write("    }\n");
            out.write("\n");
            out.write("    function showHidePassword(element, inputId) {\n");
            out.write("        if ($(element).text() == 'Show') {\n");
            out.write("            document.getElementById(inputId).type = 'text';\n");
            out.write("            $(element).text('Hide');\n");
            out.write("        } else {\n");
            out.write("            document.getElementById(inputId).type = 'password';\n");
            out.write("            $(element).text('Show');\n");
            out.write("        }\n");
            out.write("    }\n");
            out.write("\n");
            out.write("    function disable() {\n");
            out.write("        document.getElementById(\"scim-inbound-userstore\").disabled = !document.getElementById(\"scim-inbound-userstore\").disabled;\n");
            out.write("        document.getElementById(\"dumb\").value = document.getElementById(\"scim-inbound-userstore\").disabled;\n");
            out.write("    }\n");
            out.write("\n");
            out.write("    function validateTextForIllegal(fld) {\n");
            out.write("        var isValid = doValidateInput(fld, \"Provided Service Provider name is invalid.\");\n");
            out.write("        if (isValid) {\n");
            out.write("            return true;\n");
            out.write("        } else {\n");
            out.write("            return false;\n");
            out.write("        }\n");
            out.write("    }\n");
            out.write("\n");
            out.write("    function selectJWKS(certDataNotNull) {\n");
            out.write("        var useJWKSUriStype = document.getElementById('use_jwks_uri').style;\n");
            out.write("        useJWKSUriStype.display = 'table-row';\n");
            out.write("        var uploadCertType = document.getElementById('upload_certificate').style;\n");
            out.write("        uploadCertType.display = 'none';\n");
            out.write("        // delete certificates if jwks_uri is selected.\n");
            out.write("        if (jQuery('#sp-certificate').val() != '') {\n");
            out.write("            jQuery('#sp-certificate').val('');\n");
            out.write("        } else if (certDataNotNull == 'true' && jQuery('#deletePublicCert').length) {\n");
            out.write("            jQuery('#deletePublicCert').val('true');\n");
            out.write("        } else if (certDataNotNull == 'true' && !jQuery('#deletePublicCert').length) {\n");
            out.write("            $(jQuery('#publicCertDiv')).toggle();\n");
            out.write("            var publicCertDiv = document.getElementById('publicCertDiv').style;\n");
            out.write("            publicCertDiv.display = 'none';\n");
            out.write("            jQuery( '#publicCertDiv').empty();\n");
            out.write("            var input = document.createElement('input');\n");
            out.write("            input.type = \"hidden\";\n");
            out.write("            input.name = \"deletePublicCert\";\n");
            out.write("            input.id = \"deletePublicCert\";\n");
            out.write("            input.value = \"true\";\n");
            out.write("            document.forms['configure-sp-form'].appendChild(input);\n");
            out.write("        }\n");
            out.write("    }\n");
            out.write("\n");
            out.write("    function selectCertificate() {\n");
            out.write("         var useJWKSUriStype = document.getElementById('use_jwks_uri').style;\n");
            out.write("         useJWKSUriStype.display = 'none';\n");
            out.write("         var uploadCertType = document.getElementById('upload_certificate').style;\n");
            out.write("         uploadCertType.display = 'table-row';\n");
            out.write("         if (jQuery('#deletePublicCert').length) {\n");
            out.write("            jQuery('#deletePublicCert').val('false');\n");
            out.write("         }\n");
            out.write("         $('#jwksUri').val(\"\");\n");
            out.write("    }\n");
            out.write("\n");
            out.write("    function showManual() {\n");
            out.write("        $(\"#configure-sp-form\").show();\n");
            out.write("    }\n");
            out.write("\n");
            out.write("    $(function() {\n");
            out.write("        $( \"#createTemplateErrorMsgDialog\" ).dialog({\n");
            out.write("            autoOpen: false,\n");
            out.write("            modal: true,\n");
            out.write("            buttons: {\n");
            out.write("                OK: closeCreateTemplateErrorDialog\n");
            out.write("            },\n");
            out.write("            width: \"fit-content\"\n");
            out.write("        });\n");
            out.write("    });\n");
            out.write("\n");
            out.write("    function closeCreateTemplateErrorDialog() {\n");
            out.write("        $(this).dialog(\"close\");\n");
            out.write("        ");

         request.getSession().removeAttribute("createTemplateError");
        
            out.write("\n");
            out.write("    }\n");
            out.write("\n");
            out.write("</script>\n");
            out.write("\n");
            out.write("    <div id=\"middle\">\n");
            out.write("        <h2>\n");
            out.write("            ");
            if (_jspx_meth_fmt_005fmessage_005f7(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\n");
            out.write("        </h2>\n");
            out.write("        <div id=\"workArea\">\n");
            out.write("            <form id=\"configure-sp-form\" method=\"post\" name=\"configure-sp-form\" method=\"post\"\n");
            out.write("                  action=\"configure-service-provider-finish-ajaxprocessor.jsp\">\n");
            out.write("                <input type=\"hidden\" name=\"oldSPName\" id=\"oldSPName\" value=\"");
            out.print(Encode.forHtmlAttribute(spName));
            out.write("\"/>\n");
            out.write("                <input type=\"hidden\" id=\"isNeedToUpdate\" value=\"");
            out.print(isNeedToUpdate);
            out.write("\"/>\n");
            out.write("                <div class=\"sectionSeperator togglebleTitle\">");
            if (_jspx_meth_fmt_005fmessage_005f8(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</div>\n");
            out.write("                <div class=\"sectionSub\">\n");
            out.write("                    <table class=\"carbonFormTable\">\n");
            out.write("                        <tr>\n");
            out.write("                            <td style=\"width:15%\" class=\"leftCol-med labelField\">");
            if (_jspx_meth_fmt_005fmessage_005f9(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write(":<span class=\"required\">*</span></td>\n");
            out.write("                            <td>\n");
            out.write("                                <input style=\"width:50%\" id=\"spName\" name=\"spName\" type=\"text\"\n");
            out.write("                                       value=\"");
            out.print(Encode.forHtmlAttribute(spName));
            out.write("\"\n");
            out.write("                                       white-list-patterns=\"^[a-zA-Z0-9\\s.+_-]*$\" autofocus/>\n");
            out.write("                                <div class=\"sectionHelp\">\n");
            out.write("                                    ");
            if (_jspx_meth_fmt_005fmessage_005f10(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\n");
            out.write("                                </div>\n");
            out.write("                            </td>\n");
            out.write("                        </tr>\n");
            out.write("                        <tr>\n");
            out.write("                            <td style=\"width:15%\" class=\"leftCol-med labelField\">Description:</td>\n");
            out.write("                            <td>\n");
            out.write("                                <textarea maxlength=\"1023\" style=\"width:50%\" type=\"text\" name=\"sp-description\" id=\"sp-description\"\n");
            out.write("                                          class=\"text-box-big\">");
            out.print(appBean.getServiceProvider().getDescription() != null ? Encode.forHtmlContent(appBean.getServiceProvider().getDescription()) : "" );
            out.write("</textarea>\n");
            out.write("                                <div class=\"sectionHelp\">\n");
            out.write("                                    ");
            if (_jspx_meth_fmt_005fmessage_005f11(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\n");
            out.write("                                </div>\n");
            out.write("                            </td>\n");
            out.write("                        </tr>\n");
            out.write("\n");
            out.write("                        <!-- Add radio button to select certificate or jwks end point fro sp -->\n");
            out.write("                        <tr>\n");
            out.write("                            <td class=\"leftCol-med labelField\"> Select SP Certificate Type </td>\n");
            out.write("                                <td>\n");
            out.write("                                    <label style=\"display:block\">\n");
            out.write("                                    <input type=\"radio\" id=\"choose_jwks_uri\" name=\"choose_certificate_type\"\n");
            out.write("                                     value=\"choose_jwks_uri\" ");
 if (hasJWKSUri || (!hasJWKSUri && appBean.getServiceProvider().getCertificateContent() == null)) { 
            out.write("\n");
            out.write("                                     checked=\"checked\" ");
 } 
            out.write(" onclick=\"selectJWKS('");
            out.print((appBean.getServiceProvider().getCertificateContent() != null));
            out.write("');\" />\n");
            out.write("                                    Use SP JWKS endpoint\n");
            out.write("                                    </label>\n");
            out.write("                                    <label style=\"display:block\">\n");
            out.write("                                    <input type=\"radio\" id=\"choose_upload_certificate\" name=\"choose_certificate_type\"\n");
            out.write("                                     ");
 if (appBean.getServiceProvider().getCertificateContent() != null) { 
            out.write(" checked=\"checked\" ");
 } 
            out.write("\n");
            out.write("                                     value=\"choose_upload_certificate\" onclick=\"selectCertificate()\" />\n");
            out.write("                                    Upload SP certificate\n");
            out.write("                                    </label>\n");
            out.write("                                </td>\n");
            out.write("                        </tr>\n");
            out.write("                        <tr id =\"upload_certificate\" ");
 if (appBean.getServiceProvider().getCertificateContent() == null) { 
            out.write(" style=\"display:none\" ");
 } 
            out.write(">\n");
            out.write("                            <td style=\"width:15%\" class=\"leftCol-med labelField\">Application Certificate:</td>\n");
            out.write("                            <td>\n");
            out.write("                            <textarea style=\"width:100%;height: 100px;\" type=\"text\" name=\"sp-certificate\"\n");
            out.write("                                      id=\"sp-certificate\"\n");
            out.write("                                      class=\"text-box-big\">");
            out.print(appBean.getServiceProvider().getCertificateContent() != null ? Encode.forHtmlContent(appBean.getServiceProvider().getCertificateContent()) : "" );
            out.write("</textarea>\n");
            out.write("                                <input type=\"hidden\" name=\"sp-old-certificate\"\n");
            out.write("                                       id=\"sp-old-certificate\"\n");
            out.write("                                       value=");
            out.print(appBean.getServiceProvider().getCertificateContent() != null ? Encode.forHtmlContent(appBean.getServiceProvider().getCertificateContent()) : "" );
            out.write("/>\n");
            out.write("                                <input id=\"certFile\" name=\"certFile\" type=\"file\" onchange='openFile(event)'/>\n");
            out.write("                                <div class=\"sectionHelp\">\n");
            out.write("                                    ");
            if (_jspx_meth_fmt_005fmessage_005f12(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\n");
            out.write("                                </div>\n");
            out.write("                                <div id=\"publicCertDiv\">\n");
            out.write("                                    ");
 if (certData != null) { 
            out.write("\n");
            out.write("                                    <a id=\"publicCertDeleteLink\" class=\"icon-link\"\n");
            out.write("                                       style=\"margin-left:0;background-image:url(images/delete.gif);\">");
            if (_jspx_meth_fmt_005fmessage_005f13(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</a>\n");
            out.write("                                    <div style=\"clear:both\"></div>\n");
            out.write("                                    <table class=\"styledLeft\">\n");
            out.write("                                        <thead>\n");
            out.write("                                        <tr>\n");
            out.write("                                            <th>");
            if (_jspx_meth_fmt_005fmessage_005f14(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</th>\n");
            out.write("                                            <th>");
            if (_jspx_meth_fmt_005fmessage_005f15(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</th>\n");
            out.write("                                            <th>");
            if (_jspx_meth_fmt_005fmessage_005f16(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</th>\n");
            out.write("                                            <th>");
            if (_jspx_meth_fmt_005fmessage_005f17(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</th>\n");
            out.write("                                            <th>");
            if (_jspx_meth_fmt_005fmessage_005f18(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</th>\n");
            out.write("                                            <th>");
            if (_jspx_meth_fmt_005fmessage_005f19(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</th>\n");
            out.write("                                        </tr>\n");
            out.write("                                        </thead>\n");
            out.write("                                        <tbody>\n");
            out.write("                                        <tr>\n");
            out.write("                                            <td>");

                                                String issuerDN = "";
                                                if (certData.getIssuerDN() != null) {
                                                    issuerDN = certData.getIssuerDN();
                                                }
                                            
            out.print(Encode.forHtmlContent(issuerDN));
            out.write("\n");
            out.write("                                            </td>\n");
            out.write("                                            <td>");

                                                String subjectDN = "";
                                                if (certData.getSubjectDN() != null) {
                                                    subjectDN = certData.getSubjectDN();
                                                }
                                            
            out.print(Encode.forHtmlContent(subjectDN));
            out.write("\n");
            out.write("                                            </td>\n");
            out.write("                                            <td>");

                                                String notAfter = "";
                                                if (certData.getNotAfter() != null) {
                                                    notAfter = certData.getNotAfter();
                                                }
                                            
            out.print(Encode.forHtmlContent(notAfter));
            out.write("\n");
            out.write("                                            </td>\n");
            out.write("                                            <td>");

                                                String notBefore = "";
                                                if (certData.getNotBefore() != null) {
                                                    notBefore = certData.getNotBefore();
                                                }
                                            
            out.print(Encode.forHtmlContent(notBefore));
            out.write("\n");
            out.write("                                            </td>\n");
            out.write("                                            <td>");

                                                String serialNo = "";
                                                if (certData.getSerialNumber() != null) {
                                                    serialNo = certData.getSerialNumber().toString();
                                                }
                                            
            out.print(Encode.forHtmlContent(serialNo));
            out.write("\n");
            out.write("                                            </td>\n");
            out.write("                                            <td>");
            out.print(certData.getVersion());
            out.write("\n");
            out.write("                                            </td>\n");
            out.write("                                        </tr>\n");
            out.write("                                        </tbody>\n");
            out.write("                                    </table>\n");
            out.write("                                    ");
 } 
            out.write("\n");
            out.write("                                </div>\n");
            out.write("                            </td>\n");
            out.write("                        </tr>\n");
            out.write("                        <!--JWKS TEXT BOX-->\n");
            out.write("                        <tr id=\"use_jwks_uri\" ");
 if (appBean.getServiceProvider().getCertificateContent() != null) { 
            out.write("\n");
            out.write("                            style=\"display:none\" ");
 } 
            out.write(">\n");
            out.write("                            <td style=\"width:15%\" class=\"leftCol-med labelField\">\n");
            out.write("                            ");
            if (_jspx_meth_fmt_005fmessage_005f20(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\n");
            out.write("                            </td>\n");
            out.write("                            <td style=\"width:50%\" class=\"leftCol-med labelField\">\n");
            out.write("                               <input style=\"width:50%\" id=\"jwksUri\" name=\"jwksUri\" type=\"text\" value=\"");
            out.print(jwksUri != null ? Encode.forHtmlAttribute(jwksUri) : "" );
            out.write("\"\n");
            out.write("                                autofocus required/>\n");
            out.write("                            </td>\n");
            out.write("                        </tr>\n");
            out.write("                        <tr>\n");
            out.write("                            <td class=\"leftCol-med\">\n");
            out.write("                                <label for=\"isSaasApp\">");
            if (_jspx_meth_fmt_005fmessage_005f21(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</label>\n");
            out.write("                            </td>\n");
            out.write("                            <td>\n");
            out.write("                                <div class=\"sectionCheckbox\">\n");
            out.write("                                    <input type=\"checkbox\" id=\"isSaasApp\"\n");
            out.write("                                           name=\"isSaasApp\" ");
            out.print(appBean.getServiceProvider().getSaasApp() ? "checked" : "" );
            out.write("/>\n");
            out.write("                                    <span style=\"display:inline-block\" class=\"sectionHelp\">\n");
            out.write("                                    ");
            if (_jspx_meth_fmt_005fmessage_005f22(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\n");
            out.write("                                </span>\n");
            out.write("                                </div>\n");
            out.write("                            </td>\n");
            out.write("                        </tr>\n");
            out.write("                        <tr>\n");
            out.write("                            <td class=\"leftCol-med\">\n");
            out.write("                                <label for=\"isDiscoverableApp\">");
            if (_jspx_meth_fmt_005fmessage_005f23(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</label>\n");
            out.write("                            </td>\n");
            out.write("                            <td>\n");
            out.write("                                <div class=\"sectionCheckbox\">\n");
            out.write("                                    <input type=\"checkbox\" id=\"isDiscoverableApp\"\n");
            out.write("                                           name=\"isDiscoverableApp\" ");
            out.print(appBean.getServiceProvider().getDiscoverable() ? "checked" :
                                            "" );
            out.write("/>\n");
            out.write("                                    <span style=\"display:inline-block\" class=\"sectionHelp\">\n");
            out.write("                                    ");
            if (_jspx_meth_fmt_005fmessage_005f24(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\n");
            out.write("                                </span>\n");
            out.write("                                </div>\n");
            out.write("                            </td>\n");
            out.write("                        </tr>\n");
            out.write("                        <!--Access URL TEXT BOX-->\n");
            out.write("                        <tr id=\"use_access_url\">\n");
            out.write("                            <td style=\"width:15%\" class=\"leftCol-med labelField\">\n");
            out.write("                                ");
            if (_jspx_meth_fmt_005fmessage_005f25(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\n");
            out.write("                            </td>\n");
            out.write("                            <td style=\"width:50%\" class=\"leftCol-med labelField\">\n");
            out.write("                                <input style=\"width:50%\" id=\"accessURL\" name=\"accessURL\" type=\"text\"\n");
            out.write("                                       value=\"");
            out.print(accessURL != null ? Encode.forHtmlAttribute(accessURL) : "" );
            out.write("\" autofocus />\n");
            out.write("                                <div class=\"sectionHelp\">\n");
            out.write("                                    ");
            if (_jspx_meth_fmt_005fmessage_005f26(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\n");
            out.write("                                </div>\n");
            out.write("                            </td>\n");
            out.write("                        </tr>\n");
            out.write("                        <!--Image URL TEXT BOX-->\n");
            out.write("                        <tr id=\"use_image_url\">\n");
            out.write("                            <td style=\"width:15%\" class=\"leftCol-med labelField\">\n");
            out.write("                                ");
            if (_jspx_meth_fmt_005fmessage_005f27(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\n");
            out.write("                            </td>\n");
            out.write("                            <td style=\"width:50%\" class=\"leftCol-med labelField\">\n");
            out.write("                                <input style=\"width:50%\" id=\"imageURL\" name=\"imageURL\" type=\"text\"\n");
            out.write("                                       value=\"");
            out.print(imageURL != null ? Encode.forHtmlAttribute(imageURL) : "" );
            out.write("\"\n");
            out.write("                                       autofocus />\n");
            out.write("                                <div class=\"sectionHelp\">\n");
            out.write("                                    ");
            if (_jspx_meth_fmt_005fmessage_005f28(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\n");
            out.write("                                </div>\n");
            out.write("                            </td>\n");
            out.write("                        </tr>\n");
            out.write("                    </table>\n");
            out.write("                </div>\n");
            out.write("\n");
            out.write("                <h2 id=\"claims_head\" class=\"sectionSeperator trigger active\">\n");
            out.write("                    <a href=\"#\">");
            if (_jspx_meth_fmt_005fmessage_005f29(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</a>\n");
            out.write("                </h2>\n");
            out.write("                <div class=\"toggle_container sectionSub\" style=\"margin-bottom:10px;\" id=\"claimsConfRow\">\n");
            out.write("                    <table style=\"padding-top: 5px; padding-bottom: 10px;\" class=\"carbonFormTable\">\n");
            out.write("                        <tr>\n");
            out.write("                            <td class=\"leftCol-med labelField\">\n");
            out.write("                                ");
            if (_jspx_meth_fmt_005fmessage_005f30(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write(":\n");
            out.write("                            </td>\n");
            out.write("                            <td class=\"leftCol-med\">\n");
            out.write("                                <input type=\"radio\" id=\"claim_dialect_wso2\" name=\"claim_dialect\"\n");
            out.write("                                       value=\"local\" ");
            out.print(isLocalClaimsSelected ? "checked" : "");
            out.write("><label\n");
            out.write("                                for=\"claim_dialect_wso2\" style=\"cursor: pointer;\">");
            if (_jspx_meth_fmt_005fmessage_005f31(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</label>\n");
            out.write("                            </td>\n");
            out.write("                        </tr>\n");
            out.write("                        <tr>\n");
            out.write("                            <td style=\"width:15%\" class=\"leftCol-med labelField\">\n");
            out.write("                            </td>\n");
            out.write("                            <td class=\"leftCol-med\">\n");
            out.write("                                <input type=\"radio\" id=\"claim_dialect_custom\" name=\"claim_dialect\"\n");
            out.write("                                       value=\"custom\" ");
            out.print(!isLocalClaimsSelected ? "checked" : "");
            out.write("><label\n");
            out.write("                                for=\"claim_dialect_custom\" style=\"cursor: pointer;\">");
            if (_jspx_meth_fmt_005fmessage_005f32(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</label>\n");
            out.write("                            </td>\n");
            out.write("                        </tr>\n");
            out.write("                    </table>\n");
            out.write("                    <table class=\"carbonFormTable\">\n");
            out.write("                        <tr>\n");
            out.write("                            <td class=\"leftCol-med labelField\" style=\"width:15%\">\n");
            out.write("                                <label\n");
            out.write("                                    id=\"addClaimUrisLbl\">");
            out.print(isLocalClaimsSelected ? "Requested Claims:" : "Identity Provider Claim URIs:");
            out.write("\n");
            out.write("                                </label>\n");
            out.write("                            </td>\n");
            out.write("                            <td class=\"leftCol-med\">\n");
            out.write("                                <a id=\"claimMappingAddLink\" class=\"icon-link\"\n");
            out.write("                                   style=\"background-image: url(images/add.gif); margin-top: 0px !important; margin-bottom: 5px !important; margin-left: 5px;\">");
            if (_jspx_meth_fmt_005fmessage_005f33(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</a>\n");
            out.write("                                <table class=\"styledLeft\" id=\"claimMappingAddTable\"\n");
            out.write("                                       style=\"");
            out.print( claimMapping == null || claimMapping.isEmpty() ? "display:none" : "" );
            out.write("\">\n");
            out.write("                                    <thead>\n");
            out.write("                                    <tr>\n");
            out.write("                                        <th class=\"leftCol-big spClaimHeaders\"\n");
            out.write("                                            style=\"");
            out.print(isLocalClaimsSelected ? "display:none;" : "");
            out.write('"');
            out.write('>');
            if (_jspx_meth_fmt_005fmessage_005f34(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</th>\n");
            out.write("                                        <th class=\"leftCol-big\">");
            if (_jspx_meth_fmt_005fmessage_005f35(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</th>\n");
            out.write("                                        <th class=\"leftCol-mid spClaimHeaders\"\n");
            out.write("                                            style=\"");
            out.print(isLocalClaimsSelected ? "display:none;" : "");
            out.write('"');
            out.write('>');
            if (_jspx_meth_fmt_005fmessage_005f36(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</th>\n");
            out.write("\n");
            out.write("                                        <th>");
            if (_jspx_meth_fmt_005fmessage_005f37(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</th>\n");
            out.write("                                        <th>");
            if (_jspx_meth_fmt_005fmessage_005f38(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</th>\n");
            out.write("                                    </tr>\n");
            out.write("                                    </thead>\n");
            out.write("                                    <tbody>\n");
            out.write("                                    ");
 if (claimMapping != null && !claimMapping.isEmpty()) { 
            out.write("\n");
            out.write("\n");
            out.write("                                    ");

                                        int i = -1;
                                        for (Map.Entry<String, String> entry : claimMapping.entrySet()) {
                                            i++;
                                    
            out.write("\n");
            out.write("                                    <tr>\n");
            out.write("                                        <td style=\"");
            out.print(isLocalClaimsSelected ? "display:none;" : "");
            out.write("\"><input type=\"text\"\n");
            out.write("                                                                                                             class=\"spClaimVal\"\n");
            out.write("                                                                                                             style=\"width: 98%;\"\n");
            out.write("                                                                                                             value=\"");
            out.print(Encode.forHtmlAttribute(entry.getValue()));
            out.write("\"\n");
            out.write("                                                                                                             id=\"spClaim_");
            out.print(i);
            out.write("\"\n");
            out.write("                                                                                                             name=\"spClaim_");
            out.print(i);
            out.write("\"\n");
            out.write("                                                                                                             readonly=\"readonly\"/>\n");
            out.write("                                        </td>\n");
            out.write("                                        <td>\n");
            out.write("                                            <select id=\"idpClaim_");
            out.print(i);
            out.write("\" name=\"idpClaim_");
            out.print(i);
            out.write("\" class=\"idpClaim\"\n");
            out.write("                                                    style=\"float:left; width: 100%\">\n");
            out.write("                                                ");
 String[] localClaims = appBean.getClaimUris();
                                                    for (String localClaimName : localClaims) {
                                                        if (localClaimName.equals(entry.getKey())) {
            out.write("\n");
            out.write("                                                <option value=\"");
            out.print(Encode.forHtmlAttribute(localClaimName));
            out.write("\"\n");
            out.write("                                                        selected>");
            out.print(Encode.forHtmlContent(localClaimName));
            out.write("\n");
            out.write("                                                </option>\n");
            out.write("                                                ");
} else {
            out.write("\n");
            out.write("                                                <option\n");
            out.write("                                                    value=\"");
            out.print(Encode.forHtmlAttribute(localClaimName));
            out.write('"');
            out.write('>');
            out.print(Encode.forHtmlContent(localClaimName));
            out.write("\n");
            out.write("                                                </option>\n");
            out.write("                                                ");
 }
                                                }
            out.write("\n");
            out.write("                                            </select>\n");
            out.write("                                        </td>\n");
            out.write("                                        <td style=\"");
            out.print(isLocalClaimsSelected ? "display:none;" : "");
            out.write("\">\n");
            out.write("                                            ");
 if ("true".equals(appBean.getRequestedClaims().get(entry.getValue()))) {
            out.write("\n");
            out.write("                                            <input type=\"checkbox\" id=\"spClaim_req_");
            out.print(i);
            out.write("\" name=\"spClaim_req_");
            out.print(i);
            out.write("\"\n");
            out.write("                                                   checked/>\n");
            out.write("                                            ");
} else { 
            out.write("\n");
            out.write("                                            <input type=\"checkbox\" id=\"spClaim_req_");
            out.print(i);
            out.write("\" name=\"spClaim_req_");
            out.print(i);
            out.write("\"/>\n");
            out.write("                                            ");
}
            out.write("\n");
            out.write("                                        </td>\n");
            out.write("                                        <td>\n");
            out.write("                                            ");
 if ("true".equals(appBean.getMandatoryClaims().get(entry.getValue()))) {
            out.write("\n");
            out.write("                                            <input type=\"checkbox\" id=\"spClaim_mand_");
            out.print(i);
            out.write("\" name=\"spClaim_mand_");
            out.print(i);
            out.write("\"\n");
            out.write("                                                   checked/>\n");
            out.write("                                            ");
} else { 
            out.write("\n");
            out.write("                                            <input type=\"checkbox\" id=\"spClaim_mand_");
            out.print(i);
            out.write("\" name=\"spClaim_mand_");
            out.print(i);
            out.write("\"/>\n");
            out.write("                                            ");
}
            out.write("\n");
            out.write("                                        </td>\n");
            out.write("\n");
            out.write("                                        <td>\n");
            out.write("                                            <a title=\"");
            if (_jspx_meth_fmt_005fmessage_005f39(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\"\n");
            out.write("                                               onclick=\"deleteClaimRow(this);return false;\"\n");
            out.write("                                               href=\"#\"\n");
            out.write("                                               class=\"icon-link\"\n");
            out.write("                                               style=\"background-image: url(images/delete.gif)\">\n");
            out.write("                                                ");
            if (_jspx_meth_fmt_005fmessage_005f40(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\n");
            out.write("                                            </a>\n");
            out.write("                                        </td>\n");
            out.write("                                    </tr>\n");
            out.write("                                    ");
 } 
            out.write("\n");
            out.write("                                    ");
 } 
            out.write("\n");
            out.write("                                    </tbody>\n");
            out.write("                                </table>\n");
            out.write("                            </td>\n");
            out.write("                        </tr>\n");
            out.write("\n");
            out.write("                        <tr>\n");
            out.write("                            <td class=\"leftCol-med labelField\">");
            if (_jspx_meth_fmt_005fmessage_005f41(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write(":\n");
            out.write("                            <td>\n");
            out.write("                                <select class=\"leftCol-med\" id=\"subject_claim_uri\" name=\"subject_claim_uri\"\n");
            out.write("                                        style=\" margin-left: 5px; \">\n");
            out.write("                                    <option value=\"\">---Select---</option>\n");
            out.write("                                    ");
 if (isLocalClaimsSelected) {
                                        String[] localClaimUris = appBean.getClaimUris();
                                        for (String localClaimName : localClaimUris) {
                                            if (appBean.getSubjectClaimUri() != null && localClaimName.equals(appBean.getSubjectClaimUri())) {
            out.write("\n");
            out.write("                                    <option value=\"");
            out.print(Encode.forHtmlAttribute(localClaimName));
            out.write("\"\n");
            out.write("                                            selected>");
            out.print(Encode.forHtmlContent(localClaimName));
            out.write("\n");
            out.write("                                    </option>\n");
            out.write("                                    ");
} else {
            out.write("\n");
            out.write("                                    <option\n");
            out.write("                                        value=\"");
            out.print(Encode.forHtmlAttribute(localClaimName));
            out.write('"');
            out.write('>');
            out.print(Encode.forHtmlContent(localClaimName));
            out.write("\n");
            out.write("                                    </option>\n");
            out.write("                                    ");
 }
                                    }
                                    } else {
                                        for (Map.Entry<String, String> entry : claimMapping.entrySet()) { 
            out.write("\n");
            out.write("                                    ");
 if (entry.getValue() != null && !entry.getValue().isEmpty()) {
                                        if (appBean.getSubjectClaimUri() != null && appBean.getSubjectClaimUri().equals(entry.getValue())) { 
            out.write("\n");
            out.write("                                    <option value=\"");
            out.print(Encode.forHtmlAttribute(entry.getValue()));
            out.write("\"\n");
            out.write("                                            selected>");
            out.print(Encode.forHtmlContent(entry.getValue()));
            out.write("\n");
            out.write("                                    </option>\n");
            out.write("                                    ");
 } else { 
            out.write("\n");
            out.write("                                    <option\n");
            out.write("                                        value=\"");
            out.print(Encode.forHtmlAttribute(entry.getValue()));
            out.write('"');
            out.write('>');
            out.print(Encode.forHtmlContent(entry.getValue()));
            out.write("\n");
            out.write("                                    </option>\n");
            out.write("                                    ");

                                                    }
                                                }
                                            }
                                        }
                                    
            out.write("\n");
            out.write("                                </select>\n");
            out.write("                            </td>\n");
            out.write("                        </tr>\n");
            out.write("                    </table>\n");
            out.write("\n");
            out.write("                    <input type=\"hidden\" name=\"number_of_claim_mappings\" id=\"number_of_claim_mappings\" value=\"1\">\n");
            out.write("                    <div id=\"localClaimsList\" style=\"display: none;\">\n");
            out.write("                        <select style=\"float:left; width: 100%\">\n");
            out.write("                            ");
 String[] localClaims = appBean.getClaimUris();
                                StringBuffer allLocalClaims = new StringBuffer();
                                for (String localClaimName : localClaims) { 
            out.write("\n");
            out.write("                            <option\n");
            out.write("                                value=\"");
            out.print(Encode.forHtmlAttribute(localClaimName));
            out.write('"');
            out.write('>');
            out.print(Encode.forHtmlContent(localClaimName));
            out.write("\n");
            out.write("                            </option>\n");
            out.write("                            ");

                                    allLocalClaims.append(localClaimName + ",");
                                } 
            out.write("\n");
            out.write("                        </select>\n");
            out.write("                    </div>\n");
            out.write("                    <input type=\"hidden\" id=\"local_calim_uris\"\n");
            out.write("                           value=\"");
            out.print(Encode.forHtmlAttribute(allLocalClaims.toString()));
            out.write("\">\n");
            out.write("                    <div id=\"roleMappingSelection\" style=\"");
            out.print(isLocalClaimsSelected ? "display:none" : "");
            out.write("\">\n");
            out.write("                        <table class=\"carbonFormTable\" style=\"padding-top: 10px\">\n");
            out.write("                            <tr>\n");
            out.write("                                <td class=\"leftCol-med labelField\" style=\"width:15%\">\n");
            out.write("                                    <label id=\"addClaimUrisLbl\">");
            if (_jspx_meth_fmt_005fmessage_005f42(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write(":</label>\n");
            out.write("                                </td>\n");
            out.write("                                <td>\n");
            out.write("                                    <select id=\"roleClaim\" name=\"roleClaim\" style=\"float:left;min-width: 250px;\">\n");
            out.write("                                        <option value=\"\">---Select---</option>\n");
            out.write("                                        ");
 if (!isLocalClaimsSelected) {
                                            for (Map.Entry<String, String> entry : claimMapping.entrySet()) { 
            out.write("\n");
            out.write("                                        ");
 if (entry.getValue() != null && !entry.getValue().isEmpty()) {
                                            if (appBean.getRoleClaimUri() != null && appBean.getRoleClaimUri().equals(entry.getValue())) { 
            out.write("\n");
            out.write("                                        <option value=\"");
            out.print(Encode.forHtmlAttribute(entry.getValue()));
            out.write("\"\n");
            out.write("                                                selected>");
            out.print(Encode.forHtmlContent(entry.getValue()));
            out.write("\n");
            out.write("                                        </option>\n");
            out.write("                                        ");
 } else { 
            out.write("\n");
            out.write("                                        <option\n");
            out.write("                                            value=\"");
            out.print(Encode.forHtmlAttribute(entry.getValue()));
            out.write('"');
            out.write('>');
            out.print(Encode.forHtmlContent(entry.getValue()));
            out.write("\n");
            out.write("                                        </option>\n");
            out.write("                                        ");
 }
                                        }
            out.write("\n");
            out.write("                                        ");
} 
            out.write("\n");
            out.write("                                        ");
 } 
            out.write("\n");
            out.write("                                    </select>\n");
            out.write("                                </td>\n");
            out.write("                            </tr>\n");
            out.write("                            <tr>\n");
            out.write("                                <td class=\"leftCol-med\" style=\"width:15%\"></td>\n");
            out.write("                                <td>\n");
            out.write("                                    <div class=\"sectionHelp\">\n");
            out.write("                                        ");
            if (_jspx_meth_fmt_005fmessage_005f43(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\n");
            out.write("                                    </div>\n");
            out.write("                                </td>\n");
            out.write("                            </tr>\n");
            out.write("                        </table>\n");
            out.write("                    </div>\n");
            out.write("                    <div id=\"spClaimDialectSelection\">\n");
            out.write("                        <table class=\"carbonFormTable\">\n");
            out.write("                            <tr id=\"spClaimDialectInputRow\">\n");
            out.write("                                <td class=\"leftCol-med labelField\" style=\"width:15%\">\n");
            out.write("                                    <label id=\"addSpClaimDialectUrisLbl\">");
            if (_jspx_meth_fmt_005fmessage_005f44(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write(":</label>\n");
            out.write("                                </td>\n");
            out.write("                                <td>\n");
            out.write("                                    <select class=\"leftCol-med\" id=\"standard_dialect\" name=\"standard_dialect\"\n");
            out.write("                                            style=\" margin-left: 5px; \">\n");
            out.write("                                        <option value=\"\">---Select---</option>\n");
            out.write("                                        ");

                                            for (String dialectURI : claimDialectUris) {
            out.write("\n");
            out.write("                                        <option\n");
            out.write("                                            value=\"");
            out.print(Encode.forHtmlAttribute(dialectURI));
            out.write('"');
            out.write('>');
            out.print(Encode.forHtmlContent(dialectURI));
            out.write("\n");
            out.write("                                        </option>\n");
            out.write("                                        ");

                                            } 
            out.write("\n");
            out.write("                                    </select>\n");
            out.write("                                    <input id=\"addSpClaimDialectUriBtn\" type=\"button\"\n");
            out.write("                                           value=\"");
            if (_jspx_meth_fmt_005fmessage_005f45(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\"\n");
            out.write("                                           onclick=\"onClickAddSpClaimDialectUri()\"/>\n");
            out.write("                                </td>\n");
            out.write("                            </tr>\n");
            out.write("\n");
            out.write("                            ");
if (spClaimDialects != null) {
            out.write("\n");
            out.write("                            <tr id=\"spClaimDialectsTblRow\">\n");
            out.write("                                <td></td>\n");
            out.write("                                <td>\n");
            out.write("                                    <table id=\"spClaimDialectsTable\" style=\"width: 40%; margin-bottom: 3px;\"\n");
            out.write("                                           class=\"styledInner\">\n");
            out.write("                                        <tbody id=\"spClaimDialectsTableBody\">\n");
            out.write("                                        ");

                                            StringBuilder spClaimDialectsBuilder = new StringBuilder();
                                            int spClaimDialectColumnId = 0;
                                            for (String spClaimDialect : spClaimDialects) {
                                                if (spClaimDialect != null) {
                                                    if (spClaimDialectsBuilder.length() > 0) {
                                                        spClaimDialectsBuilder.append(",").append(spClaimDialect);
                                                    } else {
                                                        spClaimDialectsBuilder.append(spClaimDialect);
                                                    }
                                        
            out.write("\n");
            out.write("                                        <tr id=\"spClaimDialectUri_");
            out.print(spClaimDialectColumnId);
            out.write("\">\n");
            out.write("                                            <td style=\"padding-left: 30px !important; color: rgb(119, 119, 119);font-style: italic;\">\n");
            out.write("                                                ");
            out.print(Encode.forHtml(spClaimDialect));
            out.write("\n");
            out.write("                                            </td>\n");
            out.write("                                            <td>\n");
            out.write("                                                <a onclick=\"removeSpClaimDialect('");
            out.print(Encode.forJavaScriptAttribute(spClaimDialect));
            out.write("',\n");
            out.write("                                                    'spClaimDialectUri_");
            out.print(spClaimDialectColumnId);
            out.write("');return false;\"\n");
            out.write("                                                   href=\"#\" class=\"icon-link\"\n");
            out.write("                                                   style=\"background-image: url(../admin/images/delete.gif)\">\n");
            out.write("                                                    Delete\n");
            out.write("                                                </a>\n");
            out.write("                                            </td>\n");
            out.write("                                        </tr>\n");
            out.write("                                        ");

                                                    spClaimDialectColumnId++;
                                                }
                                            }
                                        
            out.write("\n");
            out.write("                                        </tbody>\n");
            out.write("                                    </table>\n");
            out.write("                                    <input type=\"hidden\" id=\"spClaimDialects\" name=\"spClaimDialects\"\n");
            out.write("                                           value=\"");
            out.print(spClaimDialectsBuilder.length() > 0 ?
         Encode.forHtmlAttribute(spClaimDialectsBuilder.toString()) : "");
            out.write("\">\n");
            out.write("                                    <input type=\"hidden\" id=\"currentColumnId\" value=\"");
            out.print(spClaimDialectColumnId);
            out.write("\">\n");
            out.write("                                </td>\n");
            out.write("                            </tr>\n");
            out.write("                            ");

                                }
                            
            out.write("\n");
            out.write("\n");
            out.write("                        </table>\n");
            out.write("                    </div>\n");
            out.write("                </div>\n");
            out.write("                ");
            out.write("\n");
            out.write("                <h2 id=\"authorization_permission_head\" class=\"sectionSeperator trigger active\">\n");
            out.write("                    <a href=\"#\">");
            if (_jspx_meth_fmt_005fmessage_005f46(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</a>\n");
            out.write("                </h2>\n");
            out.write("                <div class=\"toggle_container sectionSub\" style=\"margin-bottom:10px;\" id=\"permissionConfRow\">\n");
            out.write("                    <h2 id=\"permission_mapping_head\" class=\"sectionSeperator trigger active\"\n");
            out.write("                        style=\"background-color: beige;\">\n");
            out.write("                        <a href=\"#\">Permissions</a>\n");
            out.write("                    </h2>\n");
            out.write("                    <div class=\"toggle_container sectionSub\" style=\"margin-bottom:10px;display: none;\"\n");
            out.write("                         id=\"appPermissionRow\">\n");
            out.write("                        <table class=\"carbonFormTable\">\n");
            out.write("                            <tr>\n");
            out.write("                                <td>\n");
            out.write("                                    <a id=\"permissionAddLink\" class=\"icon-link\"\n");
            out.write("                                       style=\"background-image:url(images/add.gif);margin-left:0;\">");
            if (_jspx_meth_fmt_005fmessage_005f47(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</a>\n");
            out.write("                                    <div style=\"clear:both\"></div>\n");
            out.write("                                    <div class=\"sectionHelp\">\n");
            out.write("                                        ");
            if (_jspx_meth_fmt_005fmessage_005f48(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\n");
            out.write("                                    </div>\n");
            out.write("                                    <table class=\"styledLeft\" id=\"permissionAddTable\">\n");
            out.write("                                        <thead>\n");
            out.write("                                        </thead>\n");
            out.write("                                        <tbody>\n");
            out.write("                                        ");
 if (permissions != null && !permissions.isEmpty()) { 
            out.write("\n");
            out.write("\n");
            out.write("                                        ");
 for (int i = 0; i < permissions.size(); i++) {
                                            if (permissions.get(i) != null) {
                                        
            out.write("\n");
            out.write("\n");
            out.write("                                        <tr>\n");
            out.write("                                            <td class=\"leftCol-big\"><input style=\"width: 98%;\" type=\"text\"\n");
            out.write("                                                                           value=\"");
            out.print(Encode.forHtmlAttribute(permissions.get(i)));
            out.write("\"\n");
            out.write("                                                                           id=\"app_permission\" name=\"app_permission\"\n");
            out.write("                                                                           readonly=\"readonly\"/></td>\n");
            out.write("                                            <td>\n");
            out.write("                                                <a title=\"");
            if (_jspx_meth_fmt_005fmessage_005f49(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\"\n");
            out.write("                                                   onclick=\"deletePermissionRow(this);return false;\"\n");
            out.write("                                                   href=\"#\"\n");
            out.write("                                                   class=\"icon-link\"\n");
            out.write("                                                   style=\"background-image: url(images/delete.gif)\">\n");
            out.write("                                                    ");
            if (_jspx_meth_fmt_005fmessage_005f50(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\n");
            out.write("                                                </a>\n");
            out.write("                                            </td>\n");
            out.write("                                        </tr>\n");
            out.write("                                        ");
 }
                                        } 
            out.write("\n");
            out.write("                                        ");
 } 
            out.write("\n");
            out.write("                                        </tbody>\n");
            out.write("                                    </table>\n");
            out.write("                                    <div style=\"clear:both\"/>\n");
            out.write("                                    <input type=\"hidden\" name=\"number_of_permissions\" id=\"number_of_permissions\"\n");
            out.write("                                           value=\"1\">\n");
            out.write("                                </td>\n");
            out.write("                            </tr>\n");
            out.write("\n");
            out.write("                        </table>\n");
            out.write("                    </div>\n");
            out.write("                    <h2 id=\"role_mapping_head\" class=\"sectionSeperator trigger active\" style=\"background-color: beige;\">\n");
            out.write("                        <a href=\"#\">Role Mapping</a>\n");
            out.write("                    </h2>\n");
            out.write("                    <div class=\"toggle_container sectionSub\" style=\"margin-bottom:10px;display: none;\"\n");
            out.write("                         id=\"roleMappingRowRow\">\n");
            out.write("                        <table>\n");
            out.write("                            <tr>\n");
            out.write("                                <td>\n");
            out.write("                                    <a id=\"roleMappingAddLink\" class=\"icon-link\"\n");
            out.write("                                       style=\"background-image: url(images/add.gif);margin-left:0;\">");
            if (_jspx_meth_fmt_005fmessage_005f51(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</a>\n");
            out.write("                                    <div style=\"clear:both\"/>\n");
            out.write("                                    <div class=\"sectionHelp\">\n");
            out.write("                                        ");
            if (_jspx_meth_fmt_005fmessage_005f52(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\n");
            out.write("                                    </div>\n");
            out.write("                                </td>\n");
            out.write("                            </tr>\n");
            out.write("                        </table>\n");
            out.write("                        <table class=\"styledLeft\" id=\"roleMappingAddTable\" style=\"display:none\">\n");
            out.write("                            <thead>\n");
            out.write("                            <tr>\n");
            out.write("                                <th class=\"leftCol-big\">");
            if (_jspx_meth_fmt_005fmessage_005f53(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</th>\n");
            out.write("                                <th class=\"leftCol-big\">");
            if (_jspx_meth_fmt_005fmessage_005f54(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</th>\n");
            out.write("                                <th>");
            if (_jspx_meth_fmt_005fmessage_005f55(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</th>\n");
            out.write("                            </tr>\n");
            out.write("                            </thead>\n");
            out.write("                            <tbody>\n");
            out.write("                            ");
 if (roleMapping != null && !roleMapping.isEmpty()) { 
            out.write("\n");
            out.write("                            <script>\n");
            out.write("                                $(jQuery('#roleMappingAddTable')).toggle();\n");
            out.write("                            </script>\n");
            out.write("                            ");

                                int i = -1;
                                for (Map.Entry<String, String> entry : roleMapping.entrySet()) {
                                    i++;
                            
            out.write("\n");
            out.write("                            <tr>\n");
            out.write("                                <td>\n");
            out.write("                                    <input style=\"width: 98%;\" class=\"roleMapIdp\" type=\"text\"\n");
            out.write("                                           value=\"");
            out.print(Encode.forHtmlAttribute(entry.getKey()));
            out.write("\" id=\"idpRole_");
            out.print(i);
            out.write("\"\n");
            out.write("                                           name=\"idpRole_");
            out.print(i);
            out.write("\" readonly=\"readonly\"/>\n");
            out.write("                                </td>\n");
            out.write("                                <td><input style=\"width: 98%;\" class=\"roleMapSp\" type=\"text\"\n");
            out.write("                                           value=\"");
            out.print(Encode.forHtmlAttribute(entry.getValue()));
            out.write("\" id=\"spRole_");
            out.print(i);
            out.write("\"\n");
            out.write("                                           name=\"spRole_");
            out.print(i);
            out.write("\" readonly=\"readonly\"/></td>\n");
            out.write("                                <td>\n");
            out.write("                                    <a title=\"");
            if (_jspx_meth_fmt_005fmessage_005f56(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\"\n");
            out.write("                                       onclick=\"deleteRoleMappingRow(this);return false;\"\n");
            out.write("                                       href=\"#\"\n");
            out.write("                                       class=\"icon-link\"\n");
            out.write("                                       style=\"background-image: url(images/delete.gif)\">\n");
            out.write("                                        ");
            if (_jspx_meth_fmt_005fmessage_005f57(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\n");
            out.write("                                    </a>\n");
            out.write("                                </td>\n");
            out.write("                            </tr>\n");
            out.write("                            ");
 } 
            out.write("\n");
            out.write("                            ");
 } 
            out.write("\n");
            out.write("                            </tbody>\n");
            out.write("                        </table>\n");
            out.write("                        <input type=\"hidden\" name=\"number_of_rolemappings\" id=\"number_of_rolemappings\" value=\"1\">\n");
            out.write("                    </div>\n");
            out.write("                </div>\n");
            out.write("\n");
            out.write("                <h2 id=\"app_authentication_head\" class=\"sectionSeperator trigger active\">\n");
            out.write("                    <a href=\"#\">");
            if (_jspx_meth_fmt_005fmessage_005f58(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</a>\n");
            out.write("                </h2>\n");
            out.write("\n");
            out.write("                ");

                    if (display != null && (display.equals("oauthapp") || display.equals("samlIssuer") ||
                        display.equals("serviceName") || display.equals("kerberos"))) {
                
            out.write("\n");
            out.write("                <div class=\"toggle_container sectionSub\" style=\"margin-bottom:10px;\" id=\"inbound_auth_request_div\">\n");
            out.write("                            ");
} else { 
            out.write("\n");
            out.write("                    <div class=\"toggle_container sectionSub\" style=\"margin-bottom:10px;display:none;\"\n");
            out.write("                         id=\"inbound_auth_request_div\">\n");
            out.write("                                ");
} 
            out.write("\n");
            out.write("                        <h2 id=\"saml.config.head\" class=\"sectionSeperator trigger active\"\n");
            out.write("                            style=\"background-color: beige;\">\n");
            out.write("                            <a href=\"#\">");
            if (_jspx_meth_fmt_005fmessage_005f59(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</a>\n");
            out.write("                            ");
 if (appBean.getSAMLIssuer() != null) { 
            out.write("\n");
            out.write("                            <div class=\"enablelogo\"><img src=\"images/ok.png\" width=\"16\" height=\"16\"></div>\n");
            out.write("                            ");
} 
            out.write("\n");
            out.write("                        </h2>\n");
            out.write("\n");
            out.write("                                ");
if (display!=null && display.equals("samlIssuer")) { 
            out.write("\n");
            out.write("                        <div class=\"toggle_container sectionSub\" style=\"margin-bottom:10px;\" id=\"saml.config.div\">\n");
            out.write("                                    ");
 } else { 
            out.write("\n");
            out.write("                            <div class=\"toggle_container sectionSub\" style=\"margin-bottom:10px;display:none;\"\n");
            out.write("                                 id=\"saml.config.div\">\n");
            out.write("                                ");
 } 
            out.write("\n");
            out.write("                                <table class=\"carbonFormTable\">\n");
            out.write("                                    <tr>\n");
            out.write("                                        <td class=\"leftCol-med labelField\">\n");
            out.write("                                            ");

                                                if (appBean.getSAMLIssuer() == null) {
                                            
            out.write("\n");
            out.write("                                            <a id=\"saml_link\" class=\"icon-link\" onclick=\"onSamlSsoClick()\">");
            if (_jspx_meth_fmt_005fmessage_005f60(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</a>\n");
            out.write("                                            ");

                                            } else {
                                            
            out.write("\n");
            out.write("                                            <div style=\"clear:both\"></div>\n");
            out.write("                                            <table class=\"styledLeft\" id=\"samlTable\">\n");
            out.write("                                                <thead>\n");
            out.write("                                                <tr>\n");
            out.write("                                                    <th class=\"leftCol-big\">");
            if (_jspx_meth_fmt_005fmessage_005f61(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</th>\n");
            out.write("                                                    <th class=\"leftCol-big\">");
            if (_jspx_meth_fmt_005fmessage_005f62(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</th>\n");
            out.write("                                                    <th>");
            if (_jspx_meth_fmt_005fmessage_005f63(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</th>\n");
            out.write("                                                </tr>\n");
            out.write("                                                </thead>\n");
            out.write("                                                <tbody>\n");
            out.write("                                                <tr>\n");
            out.write("                                                    <td>");
            out.print(Encode.forHtmlContent(appBean.getSAMLIssuer()));
            out.write("\n");
            out.write("                                                    </td>\n");
            out.write("                                                    <td>\n");
            out.write("                                                        ");
 if (attributeConsumingServiceIndex == null || attributeConsumingServiceIndex.isEmpty()) {
                                                            attributeConsumingServiceIndex = appBean.getAttributeConsumingServiceIndex();
                                                        }

                                                            if (attributeConsumingServiceIndex != null) {
            out.write("\n");
            out.write("                                                        ");
            out.print(Encode.forHtmlContent(attributeConsumingServiceIndex));
            out.write("\n");
            out.write("                                                        ");
 } 
            out.write("\n");
            out.write("                                                    </td>\n");
            out.write("                                                    <td style=\"white-space: nowrap;\">\n");
            out.write("                                                        <a title=\"Edit Service Providers\"\n");
            out.write("                                                           onclick=\"updateBeanAndRedirect('../sso-saml/add_service_provider.jsp?SPAction=editServiceProvider&issuer=");
            out.print(Encode.forUriComponent(appBean.getSAMLIssuer()));
            out.write("&spName=");
            out.print(Encode.forUriComponent(spName));
            out.write("');\"\n");
            out.write("                                                           class=\"icon-link\"\n");
            out.write("                                                           style=\"background-image: url(../admin/images/edit.gif)\">Edit</a>\n");
            out.write("                                                        <a title=\"Delete Service Providers\"\n");
            out.write("                                                           onclick=\"updateBeanAndPost('../sso-saml/remove_service_provider-finish-ajaxprocessor.jsp',\n");
            out.write("                                                               'issuer=");
            out.print(Encode.forUriComponent(appBean.getSAMLIssuer()));
            out.write("&spName=");
            out.print(Encode.forUriComponent(spName));
            out.write("',\n");
            out.write("                                                               'configure-service-provider.jsp?action=delete&samlIssuer=");
            out.print(Encode.forUriComponent(appBean.getSAMLIssuer()));
            out.write("&spName=");
            out.print(Encode.forUriComponent(spName));
            out.write("');\"\n");
            out.write("                                                           class=\"icon-link\"\n");
            out.write("                                                           style=\"background-image: url(images/delete.gif)\">\n");
            out.write("                                                            Delete </a>\n");
            out.write("                                                    </td>\n");
            out.write("                                                </tr>\n");
            out.write("                                                </tbody>\n");
            out.write("                                            </table>\n");
            out.write("                                            ");

                                                }
                                            
            out.write("\n");
            out.write("                                            <div style=\"clear:both\"></div>\n");
            out.write("                                        </td>\n");
            out.write("                                    </tr>\n");
            out.write("                                </table>\n");
            out.write("\n");
            out.write("                            </div>\n");
            out.write("                            <h2 id=\"oauth.config.head\" class=\"sectionSeperator trigger active\"\n");
            out.write("                                style=\"background-color: beige;\">\n");
            out.write("                                <a href=\"#\">");
            if (_jspx_meth_fmt_005fmessage_005f64(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</a>\n");
            out.write("                                ");
 if (appBean.getOIDCClientId() != null) { 
            out.write("\n");
            out.write("                                <div class=\"enablelogo\"><img src=\"images/ok.png\" width=\"16\" height=\"16\"></div>\n");
            out.write("                                ");
} 
            out.write("\n");
            out.write("                            </h2>\n");
            out.write("                                    ");
if (display!=null && display.equals("oauthapp")) { 
            out.write("\n");
            out.write("                            <div class=\"toggle_container sectionSub\" style=\"margin-bottom:10px;\" id=\"oauth.config.div\">\n");
            out.write("                                        ");
} else { 
            out.write("\n");
            out.write("                                <div class=\"toggle_container sectionSub\" style=\"margin-bottom:10px;display:none;\"\n");
            out.write("                                     id=\"oauth.config.div\">\n");
            out.write("                                    ");
} 
            out.write("\n");
            out.write("                                    <table class=\"carbonFormTable\">\n");
            out.write("                                        <tr>\n");
            out.write("                                            <td>\n");
            out.write("                                                ");

                                                    if (appBean.getOIDCClientId() == null) {
                                                
            out.write("\n");
            out.write("                                                <a id=\"oauth_link\" class=\"icon-link\" onclick=\"onOauthClick()\">\n");
            out.write("                                                    ");
            if (_jspx_meth_fmt_005fmessage_005f65(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</a>\n");
            out.write("                                                ");

                                                } else {
                                                
            out.write("\n");
            out.write("                                                <div style=\"clear:both\"></div>\n");
            out.write("                                                <table class=\"styledLeft\" id=\"samlTable\">\n");
            out.write("                                                    <thead>\n");
            out.write("                                                    <tr>\n");
            out.write("                                                        <th class=\"leftCol-big\">OAuth Client Key</th>\n");
            out.write("                                                        <th class=\"leftCol-big\">OAuth Client Secret</th>\n");
            out.write("                                                        <th>");
            if (_jspx_meth_fmt_005fmessage_005f66(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</th>\n");
            out.write("                                                    </tr>\n");
            out.write("                                                    </thead>\n");
            out.write("                                                    <tbody>\n");
            out.write("                                                    <tr>\n");
            out.write("                                                        <td>");
            out.print(Encode.forHtmlContent(appBean.getOIDCClientId()));
            out.write("\n");
            out.write("                                                        </td>\n");
            out.write("                                                        <td>\n");
            out.write("                                                            ");

                                                                if (oauthConsumerSecret == null || oauthConsumerSecret.isEmpty()) {
                                                                    oauthConsumerSecret = appBean.getOauthConsumerSecret();
                                                                }
                                                                if (oauthConsumerSecret != null) {
                                                            
            out.write("\n");
            out.write("                                                            ");
 if (!(appBean.getOauthConsumerSecret() == null || "false".equals(isHashDisabled))) { 
            out.write("\n");
            out.write("                                                            <div>\n");
            out.write("                                                                <input style=\"border: none; background: white;\"\n");
            out.write("                                                                       type=\"password\" autocomplete=\"off\"\n");
            out.write("                                                                       id=\"oauthConsumerSecret\"\n");
            out.write("                                                                       name=\"oauthConsumerSecret\"\n");
            out.write("                                                                       value=\"");
            out.print(Encode.forHtmlAttribute(oauthConsumerSecret));
            out.write("\"\n");
            out.write("                                                                       readonly=\"readonly\">\n");
            out.write("                                                                <span style=\"float: right;\">\n");
            out.write("                                \t\t\t\t\t\t<a style=\"margin-top: 5px;\" class=\"showHideBtn\"\n");
            out.write("                                                           onclick=\"showHidePassword(this, 'oauthConsumerSecret')\">Show</a>\n");
            out.write("                                \t\t\t\t\t</span>\n");
            out.write("                                                            </div>\n");
            out.write("                                                            ");
 } 
            out.write("\n");
            out.write("                                                            ");
} 
            out.write("\n");
            out.write("                                                        </td>\n");
            out.write("                                                        <td style=\"white-space: nowrap;\">\n");
            out.write("                                                            <a title=\"Edit Service Providers\"\n");
            out.write("                                                               onclick=\"updateBeanAndRedirect('../oauth/edit.jsp?appName=");
            out.print(Encode.forUriComponent(spName));
            out.write("&consumerkey=");
            out.print(Encode.forUriComponent(appBean.getOIDCClientId()));
            out.write("');\"\n");
            out.write("                                                               class=\"icon-link\"\n");
            out.write("                                                               style=\"background-image: url(../admin/images/edit.gif)\">Edit</a>\n");
            out.write("\n");
            out.write("\n");
            out.write("                                                            <a title=\"Revoke Service Providers\"\n");
            out.write("                                                               onclick=\"updateBeanAndPostTo('../oauth/edit-app-ajaxprocessor.jsp','appName=");
            out.print(Encode.forUriComponent(spName));
            out.write("&consumerkey=");
            out.print(Encode.forUriComponent(appBean.getOIDCClientId()));
            out.write("&action=revoke');\"\n");
            out.write("                                                               class=\"icon-link\"\n");
            out.write("                                                               style=\"background-image: url(images/disabled.png)\">Revoke</a>\n");
            out.write("\n");
            out.write("\n");
            out.write("                                                            <a title=\"Regenerate Secret Key\"\n");
            out.write("                                                               onclick=\"updateBeanAndPostTo('../oauth/edit-app-ajaxprocessor.jsp','appName=");
            out.print(Encode.forUriComponent(spName));
            out.write("&consumerkey=");
            out.print(Encode.forUriComponent(appBean.getOIDCClientId()));
            out.write("&action=regenerate');\"\n");
            out.write("                                                               class=\"icon-link\"\n");
            out.write("                                                               style=\"background-image: url(images/enabled.png)\">Regenerate\n");
            out.write("                                                                Secret</a>\n");
            out.write("\n");
            out.write("\n");
            out.write("                                                            <a title=\"Delete Service Providers\"\n");
            out.write("                                                               onclick=\"updateBeanAndPost('../oauth/remove-app-ajaxprocessor.jsp',\n");
            out.write("                                                                   'consumerkey=");
            out.print(Encode.forUriComponent(appBean.getOIDCClientId()));
            out.write("&appName=");
            out.print(Encode.forUriComponent(spName));
            out.write("&spName=");
            out.print(Encode.forUriComponent(spName));
            out.write("',\n");
            out.write("                                                                   'configure-service-provider.jsp?action=delete&spName=");
            out.print(Encode.forUriComponent(spName));
            out.write("&oauthapp=");
            out.print(Encode.forUriComponent(appBean.getOIDCClientId()));
            out.write("');\"\n");
            out.write("                                                               class=\"icon-link\"\n");
            out.write("                                                               style=\"background-image: url(images/delete.gif)\">\n");
            out.write("                                                                Delete </a>\n");
            out.write("                                                        </td>\n");
            out.write("                                                    </tr>\n");
            out.write("                                                    </tbody>\n");
            out.write("                                                </table>\n");
            out.write("                                                ");

                                                    }
                                                
            out.write("\n");
            out.write("                                                <div style=\"clear:both\"></div>\n");
            out.write("                                            </td>\n");
            out.write("                                        </tr>\n");
            out.write("                                    </table>\n");
            out.write("                                </div>\n");
            out.write("\n");
            out.write("\n");
            out.write("                                <h2 id=\"openid.config.head\" class=\"sectionSeperator trigger active\"\n");
            out.write("                                    style=\"background-color: beige;\">\n");
            out.write("                                    <a href=\"#\">OpenID Configuration</a>\n");
            out.write("                                    <div class=\"enablelogo\"><img src=\"images/ok.png\" width=\"16\" height=\"16\"></div>\n");
            out.write("                                </h2>\n");
            out.write("                                <div class=\"toggle_container sectionSub\" style=\"margin-bottom:10px;display:none;\"\n");
            out.write("                                     id=\"openid.config.div\">\n");
            out.write("                                    <table class=\"carbonFormTable\">\n");
            out.write("\n");
            out.write("                                        <tr>\n");
            out.write("                                            <td style=\"width:15%\" class=\"leftCol-med labelField\">\n");
            out.write("                                                ");
            if (_jspx_meth_fmt_005fmessage_005f67(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write(":\n");
            out.write("                                            </td>\n");
            out.write("                                            <td>\n");
            out.write("                                                ");

                                                    if (appBean.getOpenIDRealm() != null) {
                                                
            out.write("\n");
            out.write("                                                <input style=\"width:50%\" id=\"openidRealm\" name=\"openidRealm\" type=\"text\"\n");
            out.write("                                                       value=\"");
            out.print(Encode.forHtmlAttribute(appBean.getOpenIDRealm()));
            out.write("\"\n");
            out.write("                                                       autofocus/>\n");
            out.write("                                                ");
 } else { 
            out.write("\n");
            out.write("                                                <input style=\"width:50%\" id=\"openidRealm\" name=\"openidRealm\" type=\"text\"\n");
            out.write("                                                       value=\"\" autofocus/>\n");
            out.write("                                                ");
 } 
            out.write("\n");
            out.write("                                                <div class=\"sectionHelp\">\n");
            out.write("                                                    ");
            if (_jspx_meth_fmt_005fmessage_005f68(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\n");
            out.write("                                                </div>\n");
            out.write("                                            </td>\n");
            out.write("\n");
            out.write("                                        </tr>\n");
            out.write("\n");
            out.write("                                    </table>\n");
            out.write("                                </div>\n");
            out.write("\n");
            out.write("\n");
            out.write("                                <h2 id=\"passive.sts.config.head\" class=\"sectionSeperator trigger active\"\n");
            out.write("                                    style=\"background-color: beige;\">\n");
            out.write("                                    <a href=\"#\">WS-Federation (Passive) Configuration</a>\n");
            out.write("                                    <div class=\"enablelogo\"><img src=\"images/ok.png\" width=\"16\" height=\"16\"></div>\n");
            out.write("                                </h2>\n");
            out.write("                                <div class=\"toggle_container sectionSub\" style=\"margin-bottom:10px;display:none;\"\n");
            out.write("                                     id=\"passive.config.div\">\n");
            out.write("                                    <table class=\"carbonFormTable\">\n");
            out.write("\n");
            out.write("                                        <tr>\n");
            out.write("                                            <td style=\"width:15%\" class=\"leftCol-med labelField\">\n");
            out.write("                                                ");
            if (_jspx_meth_fmt_005fmessage_005f69(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write(":\n");
            out.write("                                            </td>\n");
            out.write("                                            <td>\n");
            out.write("                                                ");

                                                    if (appBean.getPassiveSTSRealm() != null) {
                                                
            out.write("\n");
            out.write("                                                <input style=\"width:50%\" id=\"passiveSTSRealm\" name=\"passiveSTSRealm\"\n");
            out.write("                                                       type=\"text\"\n");
            out.write("                                                       value=\"");
            out.print(Encode.forHtmlAttribute(appBean.getPassiveSTSRealm()));
            out.write("\"\n");
            out.write("                                                       autofocus/>\n");
            out.write("                                                ");
 } else { 
            out.write("\n");
            out.write("                                                <input style=\"width:50%\" id=\"passiveSTSRealm\" name=\"passiveSTSRealm\"\n");
            out.write("                                                       type=\"text\" value=\"\" autofocus/>\n");
            out.write("                                                ");
 } 
            out.write("\n");
            out.write("                                                <div class=\"sectionHelp\">\n");
            out.write("                                                    ");
            if (_jspx_meth_fmt_005fmessage_005f70(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\n");
            out.write("                                                </div>\n");
            out.write("                                            </td>\n");
            out.write("\n");
            out.write("                                        </tr>\n");
            out.write("                                        <tr>\n");
            out.write("                                            <td style=\"width:15%\" class=\"leftCol-med labelField\">\n");
            out.write("                                                ");
            if (_jspx_meth_fmt_005fmessage_005f71(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write(":\n");
            out.write("                                            </td>\n");
            out.write("                                            <td>\n");
            out.write("                                                ");

                                                    if (appBean.getPassiveSTSWReply() != null) {
                                                
            out.write("\n");
            out.write("                                                <input style=\"width:50%\" id=\"passiveSTSWReply\" name=\"passiveSTSWReply\"\n");
            out.write("                                                       type=\"text\"\n");
            out.write("                                                       value=\"");
            out.print(Encode.forHtmlAttribute(appBean.getPassiveSTSWReply()));
            out.write("\"\n");
            out.write("                                                       autofocus/>\n");
            out.write("                                                ");
 } else { 
            out.write("\n");
            out.write("                                                <input style=\"width:50%\" id=\"passiveSTSWReply\" name=\"passiveSTSWReply\"\n");
            out.write("                                                       type=\"text\" value=\"\" autofocus/>\n");
            out.write("                                                ");
 } 
            out.write("\n");
            out.write("                                                <div class=\"sectionHelp\">\n");
            out.write("                                                    ");
            if (_jspx_meth_fmt_005fmessage_005f72(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\n");
            out.write("                                                </div>\n");
            out.write("                                            </td>\n");
            out.write("\n");
            out.write("                                        </tr>\n");
            out.write("\n");
            out.write("                                    </table>\n");
            out.write("                                </div>\n");
            out.write("\n");
            out.write("                                <h2 id=\"wst.config.head\" class=\"sectionSeperator trigger active\"\n");
            out.write("                                    style=\"background-color: beige;\">\n");
            out.write("                                    <a href=\"#\">");
            if (_jspx_meth_fmt_005fmessage_005f73(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</a>\n");
            out.write("                                    ");
 if (appBean.getWstrustSP() != null) { 
            out.write("\n");
            out.write("                                    <div class=\"enablelogo\"><img src=\"images/ok.png\" width=\"16\" height=\"16\"></div>\n");
            out.write("                                    ");
} 
            out.write("\n");
            out.write("                                </h2>\n");
            out.write("                                        ");
if (display!=null && display.equals("serviceName")) { 
            out.write("\n");
            out.write("                                <div class=\"toggle_container sectionSub\" style=\"margin-bottom:10px;\"\n");
            out.write("                                     id=\"wst.config.div\">\n");
            out.write("                                            ");
 } else { 
            out.write("\n");
            out.write("                                    <div class=\"toggle_container sectionSub\" style=\"margin-bottom:10px;display:none;\"\n");
            out.write("                                         id=\"wst.config.div\">\n");
            out.write("                                        ");
} 
            out.write("\n");
            out.write("                                        <table class=\"carbonFormTable\">\n");
            out.write("\n");
            out.write("                                            <tr>\n");
            out.write("                                                <td>\n");
            out.write("                                                    ");

                                                        if (appBean.getWstrustSP() == null) {
                                                    
            out.write("\n");
            out.write("                                                    <a id=\"sts_link\" class=\"icon-link\" onclick=\"onSTSClick()\">\n");
            out.write("                                                        ");
            if (_jspx_meth_fmt_005fmessage_005f74(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</a>\n");
            out.write("                                                    ");

                                                    } else {
                                                    
            out.write("\n");
            out.write("                                                    <div style=\"clear:both\"></div>\n");
            out.write("                                                    <table class=\"styledLeft\" id=\"samlTable\">\n");
            out.write("                                                        <thead>\n");
            out.write("                                                        <tr>\n");
            out.write("                                                            <th class=\"leftCol-med\">Audience</th>\n");
            out.write("                                                            <th>");
            if (_jspx_meth_fmt_005fmessage_005f75(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</th>\n");
            out.write("                                                        </tr>\n");
            out.write("                                                        </thead>\n");
            out.write("                                                        <tbody>\n");
            out.write("                                                        <tr>\n");
            out.write("                                                            <td>");
            out.print(Encode.forHtmlContent(appBean.getWstrustSP()));
            out.write("\n");
            out.write("                                                            </td>\n");
            out.write("                                                            <td style=\"white-space: nowrap;\">\n");
            out.write("                                                                <a title=\"Edit Audience\"\n");
            out.write("                                                                   onclick=\"updateBeanAndRedirect('../generic-sts/sts.jsp?spName=");
            out.print(Encode.forUriComponent(spName));
            out.write("&&spAudience=");
            out.print(Encode.forUriComponent(appBean.getWstrustSP()));
            out.write("&spAction=spEdit');\"\n");
            out.write("                                                                   class=\"icon-link\"\n");
            out.write("                                                                   style=\"background-image: url(../admin/images/edit.gif)\">Edit</a>\n");
            out.write("                                                                <a title=\"Delete Audience\"\n");
            out.write("                                                                   onclick=\"updateBeanAndPost('../generic-sts/remove-sts-trusted-service-ajaxprocessor.jsp',\n");
            out.write("                                                                       'action=delete&spName=");
            out.print(Encode.forUriComponent(spName));
            out.write("&endpointaddrs=");
            out.print(Encode.forUriComponent(appBean.getWstrustSP()));
            out.write("',\n");
            out.write("                                                                       'configure-service-provider.jsp?spName=");
            out.print(Encode.forUriComponent(spName));
            out.write("&action=delete&serviceName=");
            out.print(Encode.forUriComponent(appBean.getWstrustSP()));
            out.write("');\"\n");
            out.write("                                                                   class=\"icon-link\"\n");
            out.write("                                                                   style=\"background-image: url(images/delete.gif)\">\n");
            out.write("                                                                    Delete </a>\n");
            out.write("                                                            </td>\n");
            out.write("                                                        </tr>\n");
            out.write("                                                        </tbody>\n");
            out.write("                                                    </table>\n");
            out.write("                                                    ");

                                                        }
                                                    
            out.write("\n");
            out.write("                                                    <div style=\"clear:both\"></div>\n");
            out.write("                                                </td>\n");
            out.write("                                            </tr>\n");
            out.write("\n");
            out.write("                                        </table>\n");
            out.write("                                    </div>\n");
            out.write("\n");
            out.write("                                    <h2 id=\"kerberos.kdc.head\" class=\"sectionSeperator trigger active\"\n");
            out.write("                                        style=\"background-color: beige;\">\n");
            out.write("                                        <a href=\"#\">Kerberos KDC</a>\n");
            out.write("\n");
            out.write("                                        ");
 if (appBean.getKerberosServiceName() != null) { 
            out.write("\n");
            out.write("                                        <div class=\"enablelogo\"><img src=\"images/ok.png\" width=\"16\" height=\"16\"></div>\n");
            out.write("                                        ");
 } 
            out.write("\n");
            out.write("                                    </h2>\n");
            out.write("\n");
            out.write("                                            ");
if (display!=null && display.equals("kerberos")) { 
            out.write("\n");
            out.write("                                    <div class=\"toggle_container sectionSub\" style=\"margin-bottom:10px;\"\n");
            out.write("                                         id=\"kerberos.config.div\">\n");
            out.write("                                        ");
} else { 
            out.write("\n");
            out.write("                                        <div class=\"toggle_container sectionSub\"\n");
            out.write("                                             style=\"margin-bottom:10px;display:none;\"\n");
            out.write("                                             id=\"kerberos.config.div\">\n");
            out.write("                                            ");
} 
            out.write("\n");
            out.write("\n");
            out.write("                                            <table class=\"carbonFormTable\">\n");
            out.write("\n");
            out.write("                                                <tr>\n");
            out.write("                                                    <td>\n");
            out.write("                                                        ");

                                                            if (appBean.getKerberosServiceName() == null) {
                                                        
            out.write("\n");
            out.write("                                                        <a id=\"kerberos_link\" class=\"icon-link\"\n");
            out.write("                                                           onclick=\"onKerberosClick()\">");
            if (_jspx_meth_fmt_005fmessage_005f76(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</a>\n");
            out.write("\n");
            out.write("                                                        ");
 } else { 
            out.write("\n");
            out.write("                                                        <div style=\"clear:both\"></div>\n");
            out.write("                                                        <table class=\"styledLeft\" id=\"kerberosTable\">\n");
            out.write("                                                            <thead>\n");
            out.write("                                                            <tr>\n");
            out.write("                                                                <th class=\"leftCol-big\">");
            if (_jspx_meth_fmt_005fmessage_005f77(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</th>\n");
            out.write("                                                                <th>");
            if (_jspx_meth_fmt_005fmessage_005f78(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</th>\n");
            out.write("                                                            </tr>\n");
            out.write("                                                            </thead>\n");
            out.write("\n");
            out.write("                                                            <tbody>\n");
            out.write("                                                            <tr>\n");
            out.write("                                                                <td>");
            out.print(Encode.forHtmlContent(appBean.getKerberosServiceName()));
            out.write("\n");
            out.write("                                                                </td>\n");
            out.write("                                                                <td style=\"white-space: nowrap;\">\n");
            out.write("                                                                    <a title=\"Change Password\"\n");
            out.write("                                                                       onclick=\"updateBeanAndRedirect('../servicestore/change-passwd.jsp?SPAction=changePWr&spnName=");
            out.print(Encode.forUriComponent(appBean.getKerberosServiceName()));
            out.write("&spName=");
            out.print(Encode.forUriComponent(spName));
            out.write("');\"\n");
            out.write("                                                                       class=\"icon-link\"\n");
            out.write("                                                                       style=\"background-image: url(../admin/images/edit.gif)\">Change\n");
            out.write("                                                                        Password</a>\n");
            out.write("                                                                    <a title=\"Delete\"\n");
            out.write("                                                                       onclick=\"updateBeanAndPost('../servicestore/delete-finish-ajaxprocessor.jsp',\n");
            out.write("                                                                           'SPAction=delete&spnName=");
            out.print(Encode.forUriComponent(appBean.getKerberosServiceName()));
            out.write("&spName=");
            out.print(Encode.forUriComponent(spName));
            out.write("',\n");
            out.write("                                                                           'configure-service-provider.jsp?action=delete&spName=");
            out.print(Encode.forUriComponent(spName));
            out.write("&kerberos=");
            out.print(Encode.forUriComponent(appBean.getKerberosServiceName()));
            out.write("');\"\n");
            out.write("                                                                       class=\"icon-link\"\n");
            out.write("                                                                       style=\"background-image: url(images/delete.gif)\">\n");
            out.write("                                                                        Delete </a>\n");
            out.write("                                                                </td>\n");
            out.write("                                                            </tr>\n");
            out.write("                                                            </tbody>\n");
            out.write("                                                        </table>\n");
            out.write("                                                        ");

                                                            }
                                                        
            out.write("\n");
            out.write("                                                    </td>\n");
            out.write("\n");
            out.write("                                                </tr>\n");
            out.write("\n");
            out.write("                                            </table>\n");
            out.write("                                        </div>\n");
            out.write("\n");
            out.write("                                        ");

                                            List<String> standardInboundAuthTypes = new ArrayList<String>();
                                            standardInboundAuthTypes = new ArrayList<String>();
                                            standardInboundAuthTypes.add("oauth2");
                                            standardInboundAuthTypes.add("wstrust");
                                            standardInboundAuthTypes.add("samlsso");
                                            standardInboundAuthTypes.add("openid");
                                            standardInboundAuthTypes.add("passivests");
                                            standardInboundAuthTypes.add("kerberos");

                                            if (!CollectionUtils.isEmpty(appBean.getInboundAuthenticators())) {
                                                List<InboundAuthenticationRequestConfig> customAuthenticators = appBean
                                                    .getInboundAuthenticators();
                                                for (InboundAuthenticationRequestConfig customAuthenticator : customAuthenticators) {
                                                    if (!standardInboundAuthTypes.contains(customAuthenticator.getInboundAuthType())) {
                                                        String type = customAuthenticator.getInboundAuthType();
                                                        String friendlyName = customAuthenticator.getFriendlyName();
                                        
            out.write("\n");
            out.write("\n");
            out.write("                                        <h2 id=\"openid.config.head\" class=\"sectionSeperator trigger active\"\n");
            out.write("                                            style=\"background-color: beige;\">\n");
            out.write("                                            <a href=\"#\">");
            out.print(friendlyName);
            out.write("\n");
            out.write("                                            </a>\n");
            out.write("\n");
            out.write("                                            <div class=\"enablelogo\"><img src=\"images/ok.png\" width=\"16\" height=\"16\">\n");
            out.write("                                            </div>\n");
            out.write("                                        </h2>\n");
            out.write("                                        <div class=\"toggle_container sectionSub\"\n");
            out.write("                                             style=\"margin-bottom:10px;display:none;\"\n");
            out.write("                                             id=\"openid.config.div\">\n");
            out.write("                                            <table class=\"carbonFormTable\">\n");
            out.write("                                                ");

                                                    Property[] properties = customAuthenticator.getProperties();

                                                    if (properties != null && properties.length > 0) {
                                                        // Remove invalid properties returned from custom authenticators
                                                        List<Property> nonNullProperties = new ArrayList<Property>();
                                                        for (Property property : properties) {
                                                            if (property != null && StringUtils.isNotBlank(property.getName()) &&
                                                                StringUtils.isNotBlank(property.getDisplayName())) {
                                                                nonNullProperties.add(property);
                                                            }
                                                        }
                                                        properties = nonNullProperties.toArray(new Property[nonNullProperties.size()]);
                                                        Arrays.sort(properties, new Comparator<Property>() {
                                                            public int compare(Property obj1, Property obj2) {

                                                                return Integer.compare(obj1.getDisplayOrder(), obj2.getDisplayOrder());
                                                            }
                                                        });

                                                        for (Property prop : properties) {
                                                            String propName = "custom_auth_prop_name_" + type + "_" + prop.getName();
                                                            String hiddenProp = "";
                                                            if (StringUtils.equals(prop.getType(), "hidden")) {
                                                                hiddenProp = "hidden";
                                                            }
                                                
            out.write("\n");
            out.write("                                                <tr ");
            out.print(hiddenProp);
            out.write(">\n");
            out.write("                                                    <td>\n");
            out.write("                                                                ");
if (prop.getRequired()) { 
            out.write("\n");
            out.write("                                                    <td style=\"width:15%\"\n");
            out.write("                                                        class=\"leftCol-med labelField\">");
            out.print(prop.getDisplayName());
            out.write("\n");
            out.write("                                                        :<span class=\"required\">*</span></td>\n");
            out.write("                                                            ");
 } else { 
            out.write("\n");
            out.write("                                                    <td style=\"width:15%\"\n");
            out.write("                                                        class=\"leftCol-med labelField\">");
            out.print(prop.getDisplayName());
            out.write(":\n");
            out.write("                                                    </td>\n");
            out.write("                                                            ");
} 
            out.write("\n");
            out.write("                                                    <td>\n");
            out.write("                                                        ");
 if (prop.getConfidential()) { 
            out.write("\n");
            out.write("                                                        <div id=\"showHideButtonDivId\"\n");
            out.write("                                                             style=\"border:1px solid rgb(88, 105, 125);\"\n");
            out.write("                                                             class=\"leftCol-med\">\n");
            out.write("                                                            <input id=");
            out.print(propName);
            out.write(" name=\"");
            out.print(propName);
            out.write("\"\n");
            out.write("                                                                   type=\"password\" autocomplete=\"off\"\n");
            out.write("                                                                ");
 if (StringUtils.isNotBlank(prop.getValue())) { 
            out.write("\n");
            out.write("                                                                   value=\"");
            out.print(prop.getValue());
            out.write("\"\n");
            out.write("                                                                ");
 } else if (StringUtils.isNotBlank(prop.getDefaultValue())) { 
            out.write("\n");
            out.write("                                                                   value=\"");
            out.print(prop.getDefaultValue());
            out.write("\"\n");
            out.write("                                                                ");
}
            out.write("\n");
            out.write("                                                                   style=\"  outline: none; border: none; min-width: 175px; max-width:\n");
            out.write("\t\t\t\t\t\t                            180px;\"/>\n");
            out.write("                                                            <span style=\" float: right; padding-right: 5px;\">\n");
            out.write("\t\t\t\t\t                            <a style=\"margin-top: 5px;\" class=\"showHideBtn\"\n");
            out.write("                                                   onclick=\"showHidePassword(this, '");
            out.print(propName);
            out.write("')\">Show</a>\n");
            out.write("\t\t\t\t                            </span>\n");
            out.write("                                                        </div>\n");
            out.write("                                                        ");
 } else { 
            out.write("\n");
            out.write("                                                        <input id=\"");
            out.print(propName);
            out.write("\"\n");
            out.write("                                                               name=\"");
            out.print(propName);
            out.write("\"\n");
            out.write("                                                               type=\"text\"\n");
            out.write("                                                            ");
 if (StringUtils.isNotBlank(prop.getValue())) { 
            out.write("\n");
            out.write("                                                               value=\"");
            out.print(prop.getValue());
            out.write("\"\n");
            out.write("                                                            ");
 } else if (StringUtils.isNotBlank(prop.getDefaultValue())) { 
            out.write("\n");
            out.write("                                                               value=\"");
            out.print(prop.getDefaultValue());
            out.write("\"\n");
            out.write("                                                            ");
 } 
            out.write("\n");
            out.write("                                                        />\n");
            out.write("                                                        ");
 } 
            out.write("\n");
            out.write("                                                        ");
 if (prop.getDescription() != null) { 
            out.write("\n");
            out.write("                                                        <div class=\"sectionHelp\">");
            out.print(prop.getDescription());
            out.write("\n");
            out.write("                                                        </div>\n");
            out.write("                                                        ");
} 
            out.write("\n");
            out.write("                                                    </td>\n");
            out.write("                                                            ");

					                            }
		                            }
	                            
            out.write("\n");
            out.write("                                            </table>\n");
            out.write("                                        </div>\n");
            out.write("                                        ");

                                                    }
                                                }
                                            }
                                        
            out.write("\n");
            out.write("                                    </div>\n");
            out.write("\n");
            out.write("                                    <h2 id=\"app_authentication_advance_head\" class=\"sectionSeperator trigger active\">\n");
            out.write("                                        <a href=\"#\">");
            if (_jspx_meth_fmt_005fmessage_005f79(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</a>\n");
            out.write("                                    </h2>\n");
            out.write("                                            ");
if (display!=null && "auth_config".equals(display)) {
            out.write("\n");
            out.write("                                    <div class=\"toggle_container sectionSub\" style=\"margin-bottom:10px;display:block;\"\n");
            out.write("                                         id=\"advanceAuthnConfRow\">\n");
            out.write("                                                ");
 } else { 
            out.write("\n");
            out.write("                                        <div class=\"toggle_container sectionSub\"\n");
            out.write("                                             style=\"margin-bottom:10px;display:none;\" id=\"advanceAuthnConfRow\">\n");
            out.write("                                            ");
 } 
            out.write("\n");
            out.write("                                            <table class=\"carbonFormTable\">\n");
            out.write("                                                <tr>\n");
            out.write("                                                    <td class=\"leftCol-med labelField\">");
            if (_jspx_meth_fmt_005fmessage_005f80(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write(":<span\n");
            out.write("                                                        class=\"required\">*</span>\n");
            out.write("                                                    </td>\n");
            out.write("                                                    <td class=\"leftCol-med\">\n");
            out.write("                                                        ");
 if (ApplicationBean.AUTH_TYPE_DEFAULT.equals(appBean.getAuthenticationType())) { 
            out.write("\n");
            out.write("                                                        <input type=\"radio\" id=\"default\" name=\"auth_type\"\n");
            out.write("                                                               value=\"default\" checked><label for=\"default\"\n");
            out.write("                                                                                              style=\"cursor: pointer;\">");
            if (_jspx_meth_fmt_005fmessage_005f81(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</label>\n");
            out.write("                                                        ");
 } else { 
            out.write("\n");
            out.write("                                                        <input type=\"radio\" id=\"default\" name=\"auth_type\"\n");
            out.write("                                                               value=\"default\"><label for=\"default\"\n");
            out.write("                                                                                      style=\"cursor: pointer;\">");
            if (_jspx_meth_fmt_005fmessage_005f82(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</label>\n");
            out.write("                                                        ");
 } 
            out.write("\n");
            out.write("                                                    </td>\n");
            out.write("                                                    <td/>\n");
            out.write("                                                </tr>\n");
            out.write("                                                <tr>\n");
            out.write("                                                    <td style=\"width:15%\" class=\"leftCol-med labelField\"/>\n");
            out.write("                                                    <td>\n");
            out.write("                                                        ");
 if (ApplicationBean.AUTH_TYPE_LOCAL.equals(appBean.getAuthenticationType())) { 
            out.write("\n");
            out.write("                                                        <input type=\"radio\" id=\"local\" name=\"auth_type\" value=\"local\"\n");
            out.write("                                                               checked><label for=\"local\"\n");
            out.write("                                                                              style=\"cursor: pointer;\">");
            if (_jspx_meth_fmt_005fmessage_005f83(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</label>\n");
            out.write("                                                        ");
 } else { 
            out.write("\n");
            out.write("                                                        <input type=\"radio\" id=\"local\" name=\"auth_type\"\n");
            out.write("                                                               value=\"local\"><label for=\"local\"\n");
            out.write("                                                                                    style=\"cursor: pointer;\">");
            if (_jspx_meth_fmt_005fmessage_005f84(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</label>\n");
            out.write("                                                        ");
 } 
            out.write("\n");
            out.write("                                                    </td>\n");
            out.write("                                                    <td>\n");
            out.write("                                                        <select name=\"local_authenticator\" id=\"local_authenticator\">\n");
            out.write("                                                            ");

                                                                if (appBean.getLocalAuthenticatorConfigs() != null) {
                                                                    LocalAuthenticatorConfig[] localAuthenticatorConfigs = appBean.getLocalAuthenticatorConfigs();
                                                                    for (LocalAuthenticatorConfig authenticator : localAuthenticatorConfigs) {
                                                                        Property[] props = authenticator.getProperties();
                                                                        if (props != null && props.length > 0) {
                                                                            boolean isHander = false;
                                                                            for (Property pro : props) {
                                                                                if ((IS_HANDLER.equals(pro.getName()) && Boolean.valueOf(pro.getValue()))) {
                                                                                    isHander = true;
                                                                                    break;
                                                                                }
                                                                            }
                                                                            if (isHander) {
                                                                                continue;
                                                                            }
                                                                        }
                                                            
            out.write("\n");
            out.write("                                                            \n");
            out.write("                                                            ");
 if (authenticator.getName().equals(appBean.getStepZeroAuthenticatorName(ApplicationBean.AUTH_TYPE_LOCAL))) { 
            out.write("\n");
            out.write("                                                            <option\n");
            out.write("                                                                value=\"");
            out.print(Encode.forHtmlAttribute(authenticator.getName()));
            out.write("\"\n");
            out.write("                                                                selected>");
            out.print(Encode.forHtmlContent(authenticator.getDisplayName()));
            out.write("\n");
            out.write("                                                            </option>\n");
            out.write("                                                            ");
 } else { 
            out.write("\n");
            out.write("                                                            <option\n");
            out.write("                                                                value=\"");
            out.print(Encode.forHtmlAttribute(authenticator.getName()));
            out.write('"');
            out.write('>');
            out.print(Encode.forHtmlContent(authenticator.getDisplayName()));
            out.write("\n");
            out.write("                                                            </option>\n");
            out.write("                                                            ");
 } 
            out.write("\n");
            out.write("                                                            ");
 } 
            out.write("\n");
            out.write("                                                            ");
 } 
            out.write("\n");
            out.write("                                                        </select>\n");
            out.write("                                                    </td>\n");
            out.write("                                                </tr>\n");
            out.write("                                                ");


                                                    if (appBean.getEnabledFederatedIdentityProviders() != null && appBean.getEnabledFederatedIdentityProviders().size() > 0) {
            out.write("\n");
            out.write("                                                <tr>\n");
            out.write("                                                    <td class=\"leftCol-med labelField\"/>\n");
            out.write("                                                    <td>\n");
            out.write("                                                        ");
 if (ApplicationBean.AUTH_TYPE_FEDERATED.equals(appBean.getAuthenticationType())) { 
            out.write("\n");
            out.write("                                                        <input type=\"radio\" id=\"federated\" name=\"auth_type\"\n");
            out.write("                                                               value=\"federated\" checked><label for=\"federated\"\n");
            out.write("                                                                                                style=\"cursor: pointer;\">");
            if (_jspx_meth_fmt_005fmessage_005f85(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</label>\n");
            out.write("                                                        ");
 } else { 
            out.write("\n");
            out.write("                                                        <input type=\"radio\" id=\"federated\" name=\"auth_type\"\n");
            out.write("                                                               value=\"federated\"><label for=\"federated\"\n");
            out.write("                                                                                        style=\"cursor: pointer;\">");
            if (_jspx_meth_fmt_005fmessage_005f86(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</label>\n");
            out.write("                                                        ");
 } 
            out.write("\n");
            out.write("                                                    </td>\n");
            out.write("                                                    <td>\n");
            out.write("                                                        <select name=\"fed_idp\" id=\"fed_idp\">\n");
            out.write("                                                            ");
 List<IdentityProvider> idps = appBean.getEnabledFederatedIdentityProviders();
                                                                String selectedIdP = appBean.getStepZeroAuthenticatorName(ApplicationBean.AUTH_TYPE_FEDERATED);
                                                                boolean isSelectedIdPUsed = false;
                                                                for (IdentityProvider idp : idps) {
                                                                    if (selectedIdP != null && idp.getIdentityProviderName().equals(selectedIdP)) {
                                                                        isSelectedIdPUsed = true;
                                                            
            out.write("\n");
            out.write("                                                            <option\n");
            out.write("                                                                value=\"");
            out.print(Encode.forHtmlAttribute(idp.getIdentityProviderName()));
            out.write("\"\n");
            out.write("                                                                selected>");
            out.print(Encode.forHtmlContent(idp.getIdentityProviderName()) );
            out.write("\n");
            out.write("                                                            </option>\n");
            out.write("                                                            ");
 } else { 
            out.write("\n");
            out.write("                                                            <option\n");
            out.write("                                                                value=\"");
            out.print(Encode.forHtmlAttribute(idp.getIdentityProviderName()));
            out.write('"');
            out.write('>');
            out.print(Encode.forHtmlContent(idp.getIdentityProviderName()));
            out.write("\n");
            out.write("                                                            </option>\n");
            out.write("                                                            ");
 } 
            out.write("\n");
            out.write("                                                            ");
 } 
            out.write("\n");
            out.write("                                                        </select>\n");
            out.write("                                                    </td>\n");
            out.write("                                                </tr>\n");
            out.write("                                                ");
 } else {
            out.write("\n");
            out.write("                                                <tr>\n");
            out.write("                                                    <td class=\"leftCol-med labelField\"/>\n");
            out.write("                                                    <td>\n");
            out.write("                                                        <input type=\"radio\" id=\"disabledFederated\" name=\"auth_type\"\n");
            out.write("                                                               value=\"federated\" disabled><label\n");
            out.write("                                                        for=\"disabledFederated\">");
            if (_jspx_meth_fmt_005fmessage_005f87(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</label>\n");
            out.write("                                                    </td>\n");
            out.write("                                                    <td></td>\n");
            out.write("                                                </tr>\n");
            out.write("                                                ");
 } 
            out.write("\n");
            out.write("                                                <tr>\n");
            out.write("                                                    <td class=\"leftCol-med labelField\"/>\n");
            out.write("                                                    <td>\n");
            out.write("                                                        ");
 if (ApplicationBean.AUTH_TYPE_FLOW.equals(appBean.getAuthenticationType())) { 
            out.write("\n");
            out.write("                                                        <input type=\"radio\" id=\"advanced\" name=\"auth_type\" value=\"flow\"\n");
            out.write("                                                               onclick=\"updateBeanAndRedirect('configure-authentication-flow.jsp?spName=");
            out.print(Encode.forUriComponent(spName));
            out.write("');\"\n");
            out.write("                                                               checked><label style=\"cursor: pointer; color: #2F7ABD;\"\n");
            out.write("                                                                              for=\"advanced\">");
            if (_jspx_meth_fmt_005fmessage_005f88(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</label>\n");
            out.write("                                                        ");
 } else { 
            out.write("\n");
            out.write("                                                        <input type=\"radio\" id=\"advanced\" name=\"auth_type\" value=\"flow\"\n");
            out.write("                                                               onclick=\"updateBeanAndRedirect('configure-authentication-flow.jsp?spName=");
            out.print(Encode.forUriComponent(spName));
            out.write("')\"><label\n");
            out.write("                                                        style=\"cursor: pointer; color: #2F7ABD;\"\n");
            out.write("                                                        for=\"advanced\">");
            if (_jspx_meth_fmt_005fmessage_005f89(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</label>\n");
            out.write("                                                        ");
 } 
            out.write("\n");
            out.write("                                                    </td>\n");
            out.write("                                                </tr>\n");
            out.write("                                            </table>\n");
            out.write("                                            <table class=\"carbonFormTable\" style=\"padding-top: 5px;\">\n");
            out.write("                                                <tr>\n");
            out.write("                                                    <td class=\"leftCol-med\">\n");
            out.write("                                                        <input type=\"checkbox\" id=\"always_send_local_subject_id\"\n");
            out.write("                                                               name=\"always_send_local_subject_id\" ");
            out.print(appBean.isAlwaysSendMappedLocalSubjectId() ? "checked" : "" );
            out.write("/><label\n");
            out.write("                                                        for=\"always_send_local_subject_id\">");
            if (_jspx_meth_fmt_005fmessage_005f90(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</label>\n");
            out.write("                                                    </td>\n");
            out.write("                                                </tr>\n");
            out.write("                                                <tr>\n");
            out.write("                                                    <td class=\"leftCol-med\">\n");
            out.write("                                                        <input type=\"checkbox\" id=\"always_send_auth_list_of_idps\"\n");
            out.write("                                                               name=\"always_send_auth_list_of_idps\" ");
            out.print(appBean.isAlwaysSendBackAuthenticatedListOfIdPs() ? "checked" : "" );
            out.write("/><label\n");
            out.write("                                                        for=\"always_send_auth_list_of_idps\">");
            if (_jspx_meth_fmt_005fmessage_005f91(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</label>\n");
            out.write("                                                    </td>\n");
            out.write("                                                </tr>\n");
            out.write("                                                <tr>\n");
            out.write("                                                    <td class=\"leftCol-med\">\n");
            out.write("                                                        <input type=\"checkbox\"\n");
            out.write("                                                               id=\"use_tenant_domain_in_local_subject_identifier\"\n");
            out.write("                                                               name=\"use_tenant_domain_in_local_subject_identifier\" ");
            out.print(appBean.isUseTenantDomainInLocalSubjectIdentifier() ? "checked"
                                                            : "" );
            out.write("/><label\n");
            out.write("                                                        for=\"use_tenant_domain_in_local_subject_identifier\">");
            if (_jspx_meth_fmt_005fmessage_005f92(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</label>\n");
            out.write("                                                    </td>\n");
            out.write("                                                </tr>\n");
            out.write("                                                <tr>\n");
            out.write("                                                    <td class=\"leftCol-med\">\n");
            out.write("                                                        <input type=\"checkbox\"\n");
            out.write("                                                               id=\"use_userstore_domain_in_local_subject_identifier\"\n");
            out.write("                                                               name=\"use_userstore_domain_in_local_subject_identifier\" ");
            out.print(appBean.isUseUserstoreDomainInLocalSubjectIdentifier() ?
                                                            "checked" : "" );
            out.write("/><label\n");
            out.write("                                                        for=\"use_userstore_domain_in_local_subject_identifier\">");
            if (_jspx_meth_fmt_005fmessage_005f93(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</label>\n");
            out.write("                                                    </td>\n");
            out.write("                                                </tr>\n");
            out.write("                                                <tr>\n");
            out.write("                                                    <td class=\"leftCol-med\">\n");
            out.write("                                                        <input type=\"checkbox\" id=\"use_userstore_domain_in_roles\"\n");
            out.write("                                                               name=\"use_userstore_domain_in_roles\" ");
            out.print(appBean.isUseUserstoreDomainInRoles() ?
                                                                "checked" : "" );
            out.write("/><label\n");
            out.write("                                                            for=\"use_userstore_domain_in_roles\">");
            if (_jspx_meth_fmt_005fmessage_005f94(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</label>\n");
            out.write("                                                    </td>\n");
            out.write("                                                </tr>\n");
            out.write("                                                <tr>\n");
            out.write("                                                    <td class=\"leftCol-med\">\n");
            out.write("                                                        <input type=\"checkbox\" id=\"enable_authorization\"\n");
            out.write("                                                               name=\"enable_authorization\" ");
            out.print(appBean.isEnableAuthorization() ?
                                                            "checked" : "" );
            out.write("/><label\n");
            out.write("                                                        for=\"enable_authorization\">");
            if (_jspx_meth_fmt_005fmessage_005f95(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</label>\n");
            out.write("                                                    </td>\n");
            out.write("                                                </tr>\n");
            out.write("                                                <tr>\n");
            out.write("                                                    <input type=\"checkbox\" id=\"skipConsent\" name=\"skipConsent\" ");
            out.print( appBean.isSkipConsent() ? "checked" : "");
            out.write(" value=\"true\"/>\n");
            out.write("                                                    <label for=\"skipConsent\">");
            if (_jspx_meth_fmt_005fmessage_005f96(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</label>\n");
            out.write("                                                    </br>\n");
            out.write("                                                    <div class=\"sectionHelp\">\n");
            out.write("                                                        ");
            if (_jspx_meth_fmt_005fmessage_005f97(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\n");
            out.write("                                                    </div>\n");
            out.write("                                                </tr>\n");
            out.write("                                                <tr>\n");
            out.write("                                                    <input type=\"checkbox\" id=\"skipLogoutConsent\" name=\"skipLogoutConsent\" ");
            out.print(appBean.isSkipLogoutConsent() ? "checked" : "");
            out.write(" value=\"true\"/>\n");
            out.write("                                                    <label for=\"skipLogoutConsent\">");
            if (_jspx_meth_fmt_005fmessage_005f98(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</label>\n");
            out.write("                                                    </br>\n");
            out.write("                                                    <div class=\"sectionHelp\">\n");
            out.write("                                                        ");
            if (_jspx_meth_fmt_005fmessage_005f99(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\n");
            out.write("                                                    </div>\n");
            out.write("                                                </tr>\n");
            out.write("                                            </table>\n");
            out.write("\n");
            out.write("\n");
            out.write("                                            <h2 id=\"req_path_head\" class=\"sectionSeperator trigger active\"\n");
            out.write("                                                style=\"background-color: beige;\">\n");
            out.write("                                                <a href=\"#\">");
            if (_jspx_meth_fmt_005fmessage_005f100(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</a>\n");
            out.write("                                            </h2>\n");
            out.write("                                            <div class=\"toggle_container sectionSub\" style=\"margin-bottom:10px;\"\n");
            out.write("                                                 id=\"ReqPathAuth\">\n");
            out.write("                                                <table class=\"styledLeft\" width=\"100%\" id=\"req_path_auth_table\">\n");
            out.write("                                                    <thead>\n");
            out.write("                                                    <tr>\n");
            out.write("                                                        <td>\n");
            out.write("                                                            <select name=\"reqPathAuthType\"\n");
            out.write("                                                                    style=\"float: left; min-width: 150px;font-size:13px;\">");
            out.print(requestPathAuthTypes.toString());
            out.write("\n");
            out.write("                                                            </select>\n");
            out.write("                                                            <a id=\"reqPathAuthenticatorAddLink\" class=\"icon-link\"\n");
            out.write("                                                               style=\"background-image:url(images/add.gif);\">Add</a>\n");
            out.write("                                                            <div style=\"clear:both\"></div>\n");
            out.write("                                                            <div class=\"sectionHelp\">\n");
            out.write("                                                                ");
            if (_jspx_meth_fmt_005fmessage_005f101(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\n");
            out.write("                                                            </div>\n");
            out.write("                                                        </td>\n");
            out.write("                                                    </tr>\n");
            out.write("                                                    </thead>\n");
            out.write("\n");
            out.write("                                                    ");

                                                        if (appBean.getServiceProvider().getRequestPathAuthenticatorConfigs() != null && appBean.getServiceProvider().getRequestPathAuthenticatorConfigs().length > 0) {
                                                            int x = 0;
                                                            for (RequestPathAuthenticatorConfig reqAth : appBean.getServiceProvider().getRequestPathAuthenticatorConfigs()) {
                                                                if (reqAth != null) {
                                                    
            out.write("\n");
            out.write("                                                    <tr>\n");
            out.write("                                                        <td>\n");
            out.write("                                                            <input name=\"req_path_auth\" id=\"req_path_auth\" type=\"hidden\"\n");
            out.write("                                                                   value=\"");
            out.print(Encode.forHtmlAttribute(reqAth.getName()));
            out.write("\"/>\n");
            out.write("                                                            <input\n");
            out.write("                                                                name=\"req_path_auth_");
            out.print(Encode.forHtmlAttribute(reqAth.getName()));
            out.write("\"\n");
            out.write("                                                                id=\"req_path_auth_");
            out.print(Encode.forHtmlAttribute(reqAth.getName()));
            out.write("\"\n");
            out.write("                                                                type=\"hidden\"\n");
            out.write("                                                                value=\"");
            out.print(Encode.forHtmlAttribute(reqAth.getName()));
            out.write("\"/>\n");
            out.write("\n");
            out.write("                                                            ");
            out.print(Encode.forHtmlContent(reqAth.getName()));
            out.write("\n");
            out.write("                                                        </td>\n");
            out.write("                                                        <td class=\"leftCol-small\">\n");
            out.write("                                                            <a onclick=\"deleteReqPathRow(this);return false;\" href=\"#\"\n");
            out.write("                                                               class=\"icon-link\"\n");
            out.write("                                                               style=\"background-image: url(images/delete.gif)\">\n");
            out.write("                                                                Delete </a>\n");
            out.write("                                                        </td>\n");
            out.write("                                                    </tr>\n");
            out.write("                                                    ");

                                                                }
                                                            }
                                                        }

                                                    
            out.write("\n");
            out.write("                                                </table>\n");
            out.write("                                            </div>\n");
            out.write("\n");
            out.write("                                        </div>\n");
            out.write("\n");
            out.write("                                        <h2 id=\"inbound_provisioning_head\" class=\"sectionSeperator trigger active\">\n");
            out.write("                                            <a href=\"#\">");
            if (_jspx_meth_fmt_005fmessage_005f102(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</a>\n");
            out.write("                                        </h2>\n");
            out.write("                                        <div class=\"toggle_container sectionSub\" style=\"margin-bottom:10px;\"\n");
            out.write("                                             id=\"inboundProvisioning\">\n");
            out.write("\n");
            out.write("                                            <h2 id=\"scim-inbound_provisioning_head\"\n");
            out.write("                                                class=\"sectionSeperator trigger active\"\n");
            out.write("                                                style=\"background-color: beige;\">\n");
            out.write("                                                <a href=\"#\">");
            if (_jspx_meth_fmt_005fmessage_005f103(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</a>\n");
            out.write("                                            </h2>\n");
            out.write("                                            <div class=\"toggle_container sectionSub\" style=\"margin-bottom:10px;\"\n");
            out.write("                                                 id=\"scim-inbound-provisioning-div\">\n");
            out.write("                                                <table class=\"carbonFormTable\">\n");
            out.write("                                                    <tr>\n");
            out.write("                                                        <td>Service provider based SCIM provisioning is protected via\n");
            out.write("                                                            OAuth 2.0.\n");
            out.write("                                                            Your service provider must have a valid OAuth 2.0 client key\n");
            out.write("                                                            and a client secret to invoke the SCIM API.\n");
            out.write("                                                            To create OAuth 2.0 key/secret : Inbound Authentication\n");
            out.write("                                                            Configuration -> OAuth/OpenID Connect Configuration.<br/>\n");
            out.write("                                                        </td>\n");
            out.write("                                                    </tr>\n");
            out.write("                                                    <tr>\n");
            out.write("                                                        <td>\n");
            out.write("                                                            <select style=\"min-width: 250px;\"\n");
            out.write("                                                                    id=\"scim-inbound-userstore\"\n");
            out.write("                                                                    name=\"scim-inbound-userstore\" ");
            out.print(appBean.getServiceProvider().getInboundProvisioningConfig().getDumbMode() ? "disabled" : "" );
            out.write(">\n");
            out.write("                                                                <option value=\"\">---Select---</option>\n");
            out.write("                                                                ");

                                                                    if (userStoreDomains != null && userStoreDomains.length > 0) {
                                                                        for (String userStoreDomain : userStoreDomains) {
                                                                            if (userStoreDomain != null) {
                                                                                if (appBean.getServiceProvider().getInboundProvisioningConfig() != null
                                                                                    && appBean.getServiceProvider().getInboundProvisioningConfig().getProvisioningUserStore() != null
                                                                                    && userStoreDomain.equals(appBean.getServiceProvider().getInboundProvisioningConfig().getProvisioningUserStore())) {
                                                                
            out.write("\n");
            out.write("                                                                <option selected=\"selected\"\n");
            out.write("                                                                        value=\"");
            out.print(Encode.forHtmlAttribute(userStoreDomain));
            out.write('"');
            out.write('>');
            out.print(Encode.forHtmlContent(userStoreDomain));
            out.write("\n");
            out.write("                                                                </option>\n");
            out.write("                                                                ");

                                                                } else {
                                                                
            out.write("\n");
            out.write("                                                                <option\n");
            out.write("                                                                    value=\"");
            out.print(Encode.forHtmlAttribute(userStoreDomain));
            out.write('"');
            out.write('>');
            out.print(Encode.forHtmlContent(userStoreDomain));
            out.write("\n");
            out.write("                                                                </option>\n");
            out.write("                                                                ");

                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                
            out.write("\n");
            out.write("                                                            </select>\n");
            out.write("                                                            <div class=\"sectionHelp\">\n");
            out.write("                                                                ");
            if (_jspx_meth_fmt_005fmessage_005f104(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\n");
            out.write("                                                            </div>\n");
            out.write("                                                        </td>\n");
            out.write("                                                    </tr>\n");
            out.write("                                                    <tr>\n");
            out.write("                                                        <td>\n");
            out.write("                                                            <input type=\"checkbox\" name=\"dumb\" id=\"dumb\" value=\"false\"\n");
            out.write("                                                                   onclick=\"disable()\" ");
            out.print(appBean.getServiceProvider().getInboundProvisioningConfig().getDumbMode() ? "checked" : "" );
            out.write(">Enable\n");
            out.write("                                                            Dumb Mode<br>\n");
            out.write("                                                            <div class=\"sectionHelp\">\n");
            out.write("                                                                ");
            if (_jspx_meth_fmt_005fmessage_005f105(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\n");
            out.write("                                                            </div>\n");
            out.write("                                                        </td>\n");
            out.write("                                                    </tr>\n");
            out.write("                                                </table>\n");
            out.write("                                            </div>\n");
            out.write("\n");
            out.write("\n");
            out.write("                                        </div>\n");
            out.write("\n");
            out.write("                                        <h2 id=\"outbound_provisioning_head\" class=\"sectionSeperator trigger active\">\n");
            out.write("                                            <a href=\"#\">");
            if (_jspx_meth_fmt_005fmessage_005f106(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</a>\n");
            out.write("                                        </h2>\n");
            out.write("                                        <div class=\"toggle_container sectionSub\" style=\"margin-bottom:10px;\"\n");
            out.write("                                             id=\"outboundProvisioning\">\n");
            out.write("                                            <table class=\"styledLeft\" width=\"100%\" id=\"fed_auth_table\">\n");
            out.write("\n");
            out.write("                                                ");
 if (idpType != null && idpType.length() > 0) {
            out.write("\n");
            out.write("                                                <thead>\n");
            out.write("\n");
            out.write("                                                <tr>\n");
            out.write("                                                    <td>\n");
            out.write("                                                        <select name=\"provisioning_idps\"\n");
            out.write("                                                                style=\"float: left; min-width: 150px;font-size:13px;\">\n");
            out.write("                                                            ");
            out.print(idpType.toString());
            out.write("\n");
            out.write("                                                            s </select>\n");
            out.write("                                                        <a id=\"provisioningIdpAdd\"\n");
            out.write("                                                           onclick=\"addIDPRow(this);return false;\" class=\"icon-link\"\n");
            out.write("                                                           style=\"background-image:url(images/add.gif);\"></a>\n");
            out.write("                                                    </td>\n");
            out.write("                                                </tr>\n");
            out.write("\n");
            out.write("                                                </thead>\n");
            out.write("                                                ");
 } else { 
            out.write("\n");
            out.write("                                                <tr>\n");
            out.write("                                                    <td colspan=\"4\" style=\"border: none;\">There are no provisioning\n");
            out.write("                                                        enabled identity providers defined in the system.\n");
            out.write("                                                    </td>\n");
            out.write("                                                </tr>\n");
            out.write("                                                ");
} 
            out.write("\n");
            out.write("\n");
            out.write("                                                ");

                                                    if (appBean.getServiceProvider().getOutboundProvisioningConfig() != null) {
                                                        IdentityProvider[] fedIdps = appBean.getServiceProvider().getOutboundProvisioningConfig().getProvisioningIdentityProviders();
                                                        if (fedIdps != null && fedIdps.length > 0) {
                                                            for (IdentityProvider idp : fedIdps) {
                                                                if (idp != null) {
                                                                    boolean jitEnabled = false;
                                                                    boolean blocking = false;
                                                                    boolean ruleEnabled = false;

                                                                    if (idp.getJustInTimeProvisioningConfig() != null &&
                                                                        idp.getJustInTimeProvisioningConfig().getProvisioningEnabled()) {
                                                                        jitEnabled = true;
                                                                    }
                                                                    if (idp.getDefaultProvisioningConnectorConfig() != null &&
                                                                        idp.getDefaultProvisioningConnectorConfig().getBlocking()) {
                                                                        blocking = true;
                                                                    }
                                                                    if (idp.getDefaultProvisioningConnectorConfig() != null &&
                                                                        idp.getDefaultProvisioningConnectorConfig().getRulesEnabled()) {
                                                                        ruleEnabled = true;
                                                                    }

                                                
            out.write("\n");
            out.write("\n");
            out.write("                                                <tr>\n");
            out.write("                                                    <td>\n");
            out.write("                                                        <input name=\"provisioning_idp\" id=\"\" type=\"hidden\"\n");
            out.write("                                                               value=\"");
            out.print(Encode.forHtmlAttribute(idp.getIdentityProviderName()));
            out.write("\"/>\n");
            out.write("                                                        ");
            out.print(Encode.forHtmlContent(idp.getIdentityProviderName()) );
            out.write("\n");
            out.write("                                                    </td>\n");
            out.write("                                                    <td>\n");
            out.write("                                                        ");
 if (selectedProIdpConnectors.get(idp.getIdentityProviderName()) != null) { 
            out.write("\n");
            out.write("                                                        <select\n");
            out.write("                                                            name=\"provisioning_con_idp_");
            out.print(Encode.forHtmlAttribute(idp.getIdentityProviderName()));
            out.write("\"\n");
            out.write("                                                            style=\"float: left; min-width: 150px;font-size:13px;\">");
            out.print(selectedProIdpConnectors.get(idp.getIdentityProviderName()));
            out.write("\n");
            out.write("                                                        </select>\n");
            out.write("                                                        ");
 } 
            out.write("\n");
            out.write("                                                    </td>\n");
            out.write("                                                    <td>\n");
            out.write("                                                        <div class=\"sectionCheckbox\">\n");
            out.write("                                                            <input type=\"checkbox\"\n");
            out.write("                                                                   id=\"blocking_prov_");
            out.print(Encode.forHtmlAttribute(idp.getIdentityProviderName()));
            out.write("\"\n");
            out.write("                                                                   name=\"blocking_prov_");
            out.print(Encode.forHtmlAttribute(idp.getIdentityProviderName()));
            out.write('"');
            out.write(' ');
            out.print(blocking ? "checked" : "" );
            out.write(">Blocking\n");
            out.write("                                                        </div>\n");
            out.write("                                                    </td>\n");
            out.write("                                                    <td>\n");
            out.write("                                                        <div class=\"sectionCheckbox\">\n");
            out.write("                                                            <input type=\"checkbox\"\n");
            out.write("                                                                   id=\"rules_enabled_");
            out.print(Encode.forHtmlAttribute(idp.getIdentityProviderName()));
            out.write("\"\n");
            out.write("                                                                   name=\"rules_enabled_");
            out.print(Encode.forHtmlAttribute(idp.getIdentityProviderName()));
            out.write('"');
            out.write(' ');
            out.print(ruleEnabled ? "checked" :
                                                        "" );
            out.write(">Enable Rules\n");
            out.write("                                                        </div>\n");
            out.write("                                                    </td>\n");
            out.write("                                                    <td>\n");
            out.write("                                                        <div class=\"sectionCheckbox\">\n");
            out.write("                                                            <input type=\"checkbox\"\n");
            out.write("                                                                   id=\"provisioning_jit_");
            out.print(Encode.forHtmlAttribute(idp.getIdentityProviderName()));
            out.write("\"\n");
            out.write("                                                                   name=\"provisioning_jit_");
            out.print(Encode.forHtmlAttribute(idp.getIdentityProviderName()));
            out.write('"');
            out.write(' ');
            out.print(jitEnabled ? "checked" : "" );
            out.write(">Enable\n");
            out.write("                                                            JIT\n");
            out.write("                                                        </div>\n");
            out.write("                                                    </td>\n");
            out.write("                                                    <td class=\"leftCol-small\">\n");
            out.write("                                                        <a onclick=\"deleteIDPRow(this);return false;\" href=\"#\"\n");
            out.write("                                                           class=\"icon-link\"\n");
            out.write("                                                           style=\"background-image: url(images/delete.gif)\"> Delete </a>\n");
            out.write("                                                    </td>\n");
            out.write("                                                </tr>\n");
            out.write("                                                ");

                                                                }
                                                            }
                                                        }
                                                    }
                                                
            out.write("\n");
            out.write("                                            </table>\n");
            out.write("\n");
            out.write("                                        </div>\n");
            out.write("\n");
            out.write("                                        <div style=\"clear:both\"/>\n");
            out.write("                                        <!-- sectionSub Div -->\n");
            out.write("                                        <div class=\"buttonRow\">\n");
            out.write("                                            <input type=\"button\"\n");
            out.write("                                                   value=\"");
            if (_jspx_meth_fmt_005fmessage_005f107(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\"\n");
            out.write("                                                   onclick=\"createAppOnclick();\"/>\n");
            out.write("                                                <input style=\"display: none\" type=\"button\"\n");
            out.write("                                                       value=\"");
            if (_jspx_meth_fmt_005fmessage_005f108(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\"\n");
            out.write("                                                       onclick=\"saveAsTemplate();\"/>\n");
            out.write("                                            <input type=\"hidden\" name=\"templateName\" id=\"templateName\"/>\n");
            out.write("                                            <input type=\"hidden\" name=\"templateDesc\" id=\"templateDesc\"/>\n");
            out.write("                                            <input type=\"button\" value=\"");
            if (_jspx_meth_fmt_005fmessage_005f109(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\"\n");
            out.write("                                                   onclick=\"javascript:location.href='list-service-providers.jsp'\"/>\n");
            out.write("                                        </div>\n");
            out.write("            </form>\n");
            out.write("        </div>\n");
            out.write("    </div>\n");
            out.write("\n");
            out.write("    <div id=\"showDialog\" title=\"WSO2 Carbon\">\n");
            out.write("        <h2 style=\"margin-left:20px;margin-top:20px;\">\n");
            out.write("            ");
            if (_jspx_meth_fmt_005fmessage_005f110(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\n");
            out.write("        </h2>\n");
            out.write("\n");
            out.write("        ");
 if ("add".equals(operation)) { 
            out.write("\n");
            out.write("        <p style=\"font-size: 12px;margin-top:6px;margin-left:20px;\">");
            if (_jspx_meth_fmt_005fmessage_005f111(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</p>\n");
            out.write("        ");
 } 
            out.write("\n");
            out.write("\n");
            out.write("        ");
 if ("regenerate".equals(action)) { 
            out.write("\n");
            out.write("        <p style=\"font-size: 12px;margin-top:6px;margin-left:20px;\">\n");
            out.write("            ");
 String message = MessageFormat.format(resourceBundle.getString("application.regenerated"), Encode.forHtml(appBean.getOIDCClientId())); 
            out.write("\n");
            out.write("            ");
            out.print( message );
            out.write("\n");
            out.write("        </p>\n");
            out.write("        ");
 } 
            out.write("\n");
            out.write("\n");
            out.write("        <div style=\"margin-left:20px;background-color: #f4f4f4; border-left: 6px solid #cccccc;height:50px;width:90%;\">\n");
            out.write("            <p style=\"margin:20px;padding-top:10px;display:block;\"><strong>");
            if (_jspx_meth_fmt_005fmessage_005f112(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("<font\n");
            out.write("                color=\"red\">");
            if (_jspx_meth_fmt_005fmessage_005f113(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</font></strong></p>\n");
            out.write("        </div>\n");
            out.write("        <table style=\"margin-left:20px;margin-top:25px;\">\n");
            out.write("            <tr style=\"height: 35px;\">\n");
            out.write("                <td class=\"leftCol-small\" style=\"margin-top:10px;font-size: 12px;\"><b>");
            if (_jspx_meth_fmt_005fmessage_005f114(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</b></td>\n");
            out.write("                <td>\n");
            out.write("                    <input style=\"border: none; background: white; font-size: 14px;\" type=\"password\" size=\"25\"\n");
            out.write("                           autocomplete=\"off\" id=\"consumerKey\" name=\"consumerKey\"\n");
            out.write("                           value=");
            out.print(Encode.forHtmlAttribute(appBean.getOIDCClientId()));
            out.write(" readonly=\"readonly\">\n");
            out.write("                    <span>\n");
            out.write("                        <a style=\"margin-top: 5px;\" class=\"showHideBtn\"\n");
            out.write("                           onclick=\"showHidePassword(this, 'consumerKey')\">Show</a>\n");
            out.write("                    </span>\n");
            out.write("                    <span style=\"margin-left: 6px;float: right;\">\n");
            out.write("                        <a style=\"margin-top: 5px;\" class=\"showHideBtn\"\n");
            out.write("                           onclick=\"return copyTextClick(document.getElementById('consumerKey'))\">");
            if (_jspx_meth_fmt_005fmessage_005f115(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</a>\n");
            out.write("                    </span>\n");
            out.write("                </td>\n");
            out.write("            </tr>\n");
            out.write("            <tr style=\"height: 35px;\">\n");
            out.write("                <td class=\"leftCol-small\" style=\"margin-top:10px;font-size: 12px;\"><b>");
            if (_jspx_meth_fmt_005fmessage_005f116(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</b></td>\n");
            out.write("                <td>\n");
            out.write("                    <input style=\"border: none; background: white;font-size: 14px;\" type=\"password\" size=\"25\"\n");
            out.write("                           autocomplete=\"off\" id=\"consumerSecret\" name=\"consumerSecret\"\n");
            out.write("                           value=\"");
            out.print(Encode.forHtmlAttribute(oauthConsumerSecret));
            out.write("\" readonly=\"readonly\">\n");
            out.write("                    <span>\n");
            out.write("                        <a style=\"margin-top: 5px;\" class=\"showHideBtn\"\n");
            out.write("                           onclick=\"showHidePassword(this, 'consumerSecret')\">Show</a>\n");
            out.write("                    </span>\n");
            out.write("                    <span style=\"margin-left: 6px;float: right;\">\n");
            out.write("                        <a style=\"margin-top: 5px;\" class=\"showHideBtn\"\n");
            out.write("                           onclick=\"return copyTextClick(document.getElementById('consumerSecret'))\">");
            if (_jspx_meth_fmt_005fmessage_005f117(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</a>\n");
            out.write("                    </span>\n");
            out.write("                </td>\n");
            out.write("            </tr>\n");
            out.write("        </table>\n");
            out.write("    </div>\n");
            out.write("    <div class=\"editor-error-warn-container\">\n");
            out.write("        <br/>\n");
            out.write("        <br/>\n");
            out.write("        <div class=\"sectionSub\">\n");
            out.write("            <table class=\"carbonFormTable\">\n");
            out.write("                <tr>\n");
            out.write("                    <td style=\"width:15%\" class=\"leftCol-med labelField\">");
            if (_jspx_meth_fmt_005fmessage_005f118(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write(":<span class=\"required\">*</span></td>\n");
            out.write("                    <td>\n");
            out.write("                        <input type=\"text\" class=\"template-name\" name=\"template-name\"  white-list-patterns=\"^[a-zA-Z0-9\\s._-]*$\" autofocus/>\n");
            out.write("                        <div class=\"sectionHelp\">\n");
            out.write("                            ");
            if (_jspx_meth_fmt_005fmessage_005f119(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\n");
            out.write("                        </div>\n");
            out.write("                    </td>\n");
            out.write("                </tr>\n");
            out.write("                <tr>\n");
            out.write("                    <td style=\"width:15%\" class=\"leftCol-med labelField\">");
            if (_jspx_meth_fmt_005fmessage_005f120(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write(":</td>\n");
            out.write("                    <td>\n");
            out.write("                        <textarea style=\"width:50%\" type=\"text\" name=\"template-description\" class=\"template-description\" class=\"text-box-big\"></textarea>\n");
            out.write("                        <div class=\"sectionHelp\">\n");
            out.write("                            ");
            if (_jspx_meth_fmt_005fmessage_005f121(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\n");
            out.write("                        </div>\n");
            out.write("                    </td>\n");
            out.write("                </tr>\n");
            out.write("                <input type=\"hidden\" id=\"templateNames\" name=\"templateNames\"\n");
            out.write("                       value=\"");
            out.print(spTemplateNames.length() > 0 ? Encode.forHtmlAttribute(spTemplateNames.toString()) : "");
            out.write("\">\n");
            out.write("            </table>\n");
            out.write("        </div>\n");
            out.write("    </div>\n");
            out.write("    <div id=\"createTemplateErrorMsgDialog\"  title='WSO2 Carbon'>\n");
            out.write("        <div id=\"messagebox-error\">\n");
            out.write("            <h3>\n");
            out.write("                ");
            if (_jspx_meth_fmt_005fmessage_005f122(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\n");
            out.write("            </h3>\n");
            out.write("            <table style=\"margin-top:10px;\">\n");
            out.write("                ");

                    for (String error : createTemplateError){
                
            out.write("\n");
            out.write("                <tr>\n");
            out.write("                    <td>");
            out.print(error);
            out.write("</td>\n");
            out.write("                </tr>\n");
            out.write("                ");

                    }
                
            out.write("\n");
            out.write("            </table>\n");
            out.write("        </div>\n");
            out.write("    </div>\n");
            int evalDoAfterBody = _jspx_th_fmt_005fbundle_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
          if (_jspx_eval_fmt_005fbundle_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = _jspx_page_context.popBody();
          }
        }
        if (_jspx_th_fmt_005fbundle_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename.reuse(_jspx_th_fmt_005fbundle_005f0);
        _jspx_th_fmt_005fbundle_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fbundle_005f0, _jsp_getInstanceManager(), _jspx_th_fmt_005fbundle_005f0_reused);
      }
      out.write("\n");
      out.write("<script src=\"js/configure-sp-template-flow.js\"></script>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_fmt_005fmessage_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f0_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f0.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(540,38) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f0.setKey("alert.please.provide.service.provider.name");
      int _jspx_eval_fmt_005fmessage_005f0 = _jspx_th_fmt_005fmessage_005f0.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f0);
      _jspx_th_fmt_005fmessage_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f0, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f1 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f1_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f1.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(645,38) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f1.setKey("alert.please.provide.service.provider.name");
      int _jspx_eval_fmt_005fmessage_005f1 = _jspx_th_fmt_005fmessage_005f1.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f1);
      _jspx_th_fmt_005fmessage_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f1, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f2 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f2_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f2.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(655,38) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f2.setKey("alert.please.provide.service.provider.name");
      int _jspx_eval_fmt_005fmessage_005f2 = _jspx_th_fmt_005fmessage_005f2.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f2);
      _jspx_th_fmt_005fmessage_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f2, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f3(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f3 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f3_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f3.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(665,38) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f3.setKey("alert.please.provide.service.provider.name");
      int _jspx_eval_fmt_005fmessage_005f3 = _jspx_th_fmt_005fmessage_005f3.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f3);
      _jspx_th_fmt_005fmessage_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f3, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f4(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f4 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f4_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f4.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f4.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(675,38) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f4.setKey("alert.please.provide.service.provider.name");
      int _jspx_eval_fmt_005fmessage_005f4 = _jspx_th_fmt_005fmessage_005f4.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f4);
      _jspx_th_fmt_005fmessage_005f4_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f4, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f4_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f5(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f5 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f5_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f5.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f5.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(778,38) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f5.setKey("config.application.claim.dialect.sp.not.valid");
      int _jspx_eval_fmt_005fmessage_005f5 = _jspx_th_fmt_005fmessage_005f5.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f5);
      _jspx_th_fmt_005fmessage_005f5_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f5, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f5_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f6(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f6 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f6_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f6.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f6.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(815,46) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f6.setKey("config.application.claim.dialect.sp.already.exists");
      int _jspx_eval_fmt_005fmessage_005f6 = _jspx_th_fmt_005fmessage_005f6.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f6.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f6);
      _jspx_th_fmt_005fmessage_005f6_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f6, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f6_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f7(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f7 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f7_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f7.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f7.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(1311,12) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f7.setKey("title.service.providers");
      int _jspx_eval_fmt_005fmessage_005f7 = _jspx_th_fmt_005fmessage_005f7.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f7.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f7);
      _jspx_th_fmt_005fmessage_005f7_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f7, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f7_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f8(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f8 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f8_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f8.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f8.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(1318,61) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f8.setKey("title.config.app.basic.config");
      int _jspx_eval_fmt_005fmessage_005f8 = _jspx_th_fmt_005fmessage_005f8.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f8.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f8);
      _jspx_th_fmt_005fmessage_005f8_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f8, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f8_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f9(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f9 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f9_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f9.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f9.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(1322,81) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f9.setKey("config.application.info.basic.name");
      int _jspx_eval_fmt_005fmessage_005f9 = _jspx_th_fmt_005fmessage_005f9.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f9.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f9);
      _jspx_th_fmt_005fmessage_005f9_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f9, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f9_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f10(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f10 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f10_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f10.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f10.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(1329,36) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f10.setKey("help.name");
      int _jspx_eval_fmt_005fmessage_005f10 = _jspx_th_fmt_005fmessage_005f10.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f10.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f10);
      _jspx_th_fmt_005fmessage_005f10_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f10, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f10_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f11(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f11 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f11_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f11.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f11.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(1339,36) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f11.setKey("help.desc");
      int _jspx_eval_fmt_005fmessage_005f11 = _jspx_th_fmt_005fmessage_005f11.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f11.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f11);
      _jspx_th_fmt_005fmessage_005f11_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f11, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f11_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f12(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f12 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f12_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f12.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f12.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(1373,36) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f12.setKey("help.certificate");
      int _jspx_eval_fmt_005fmessage_005f12 = _jspx_th_fmt_005fmessage_005f12.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f12.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f12);
      _jspx_th_fmt_005fmessage_005f12_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f12, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f12_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f13(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f13 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f13_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f13.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f13.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(1378,102) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f13.setKey("public.cert.delete");
      int _jspx_eval_fmt_005fmessage_005f13 = _jspx_th_fmt_005fmessage_005f13.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f13.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f13);
      _jspx_th_fmt_005fmessage_005f13_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f13, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f13_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f14(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f14 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f14_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f14.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f14.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(1384,48) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f14.setKey("issuerdn");
      int _jspx_eval_fmt_005fmessage_005f14 = _jspx_th_fmt_005fmessage_005f14.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f14.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f14);
      _jspx_th_fmt_005fmessage_005f14_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f14, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f14_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f15(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f15 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f15_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f15.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f15.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(1385,48) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f15.setKey("subjectdn");
      int _jspx_eval_fmt_005fmessage_005f15 = _jspx_th_fmt_005fmessage_005f15.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f15.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f15);
      _jspx_th_fmt_005fmessage_005f15_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f15, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f15_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f16(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f16 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f16_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f16.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f16.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(1386,48) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f16.setKey("notafter");
      int _jspx_eval_fmt_005fmessage_005f16 = _jspx_th_fmt_005fmessage_005f16.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f16.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f16);
      _jspx_th_fmt_005fmessage_005f16_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f16, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f16_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f17(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f17 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f17_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f17.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f17.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(1387,48) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f17.setKey("notbefore");
      int _jspx_eval_fmt_005fmessage_005f17 = _jspx_th_fmt_005fmessage_005f17.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f17.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f17);
      _jspx_th_fmt_005fmessage_005f17_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f17, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f17_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f18(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f18 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f18_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f18.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f18.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(1388,48) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f18.setKey("serialno");
      int _jspx_eval_fmt_005fmessage_005f18 = _jspx_th_fmt_005fmessage_005f18.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f18.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f18);
      _jspx_th_fmt_005fmessage_005f18_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f18, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f18_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f19(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f19 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f19_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f19.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f19.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(1389,48) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f19.setKey("version");
      int _jspx_eval_fmt_005fmessage_005f19 = _jspx_th_fmt_005fmessage_005f19.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f19.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f19);
      _jspx_th_fmt_005fmessage_005f19_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f19, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f19_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f20(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f20 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f20_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f20.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f20.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(1442,28) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f20.setKey("config.application.JWKS");
      int _jspx_eval_fmt_005fmessage_005f20 = _jspx_th_fmt_005fmessage_005f20.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f20.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f20);
      _jspx_th_fmt_005fmessage_005f20_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f20, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f20_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f21(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f21 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f21_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f21.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f21.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(1451,55) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f21.setKey("config.application.isSaasApp");
      int _jspx_eval_fmt_005fmessage_005f21 = _jspx_th_fmt_005fmessage_005f21.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f21.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f21);
      _jspx_th_fmt_005fmessage_005f21_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f21, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f21_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f22(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f22 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f22_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f22.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f22.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(1458,36) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f22.setKey("help.saas");
      int _jspx_eval_fmt_005fmessage_005f22 = _jspx_th_fmt_005fmessage_005f22.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f22.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f22);
      _jspx_th_fmt_005fmessage_005f22_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f22, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f22_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f23(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f23 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f23_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f23.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f23.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(1465,63) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f23.setKey("config.application.isDiscoverableApp");
      int _jspx_eval_fmt_005fmessage_005f23 = _jspx_th_fmt_005fmessage_005f23.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f23.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f23);
      _jspx_th_fmt_005fmessage_005f23_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f23, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f23_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f24(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f24 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f24_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f24.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f24.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(1473,36) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f24.setKey("help.discoverable");
      int _jspx_eval_fmt_005fmessage_005f24 = _jspx_th_fmt_005fmessage_005f24.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f24.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f24);
      _jspx_th_fmt_005fmessage_005f24_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f24, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f24_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f25(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f25 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f25_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f25.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f25.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(1481,32) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f25.setKey("config.application.access.url");
      int _jspx_eval_fmt_005fmessage_005f25 = _jspx_th_fmt_005fmessage_005f25.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f25.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f25);
      _jspx_th_fmt_005fmessage_005f25_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f25, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f25_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f26(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f26 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f26_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f26.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f26.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(1487,36) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f26.setKey("help.access.url");
      int _jspx_eval_fmt_005fmessage_005f26 = _jspx_th_fmt_005fmessage_005f26.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f26.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f26);
      _jspx_th_fmt_005fmessage_005f26_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f26, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f26_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f27(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f27 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f27_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f27.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f27.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(1494,32) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f27.setKey("config.application.image.url");
      int _jspx_eval_fmt_005fmessage_005f27 = _jspx_th_fmt_005fmessage_005f27.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f27.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f27);
      _jspx_th_fmt_005fmessage_005f27_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f27, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f27_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f28(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f28 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f28_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f28.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f28.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(1501,36) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f28.setKey("help.image.url");
      int _jspx_eval_fmt_005fmessage_005f28 = _jspx_th_fmt_005fmessage_005f28.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f28.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f28);
      _jspx_th_fmt_005fmessage_005f28_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f28, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f28_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f29(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f29 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f29_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f29.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f29.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(1509,32) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f29.setKey("title.config.app.claim");
      int _jspx_eval_fmt_005fmessage_005f29 = _jspx_th_fmt_005fmessage_005f29.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f29.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f29);
      _jspx_th_fmt_005fmessage_005f29_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f29, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f29_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f30(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f30 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f30_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f30.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f30.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(1515,32) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f30.setKey("config.application.claim.dialect.select");
      int _jspx_eval_fmt_005fmessage_005f30 = _jspx_th_fmt_005fmessage_005f30.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f30.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f30);
      _jspx_th_fmt_005fmessage_005f30_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f30, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f30_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f31(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f31 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f31_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f31.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f31.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(1520,82) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f31.setKey("config.application.claim.dialect.local");
      int _jspx_eval_fmt_005fmessage_005f31 = _jspx_th_fmt_005fmessage_005f31.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f31.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f31);
      _jspx_th_fmt_005fmessage_005f31_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f31, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f31_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f32(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f32 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f32_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f32.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f32.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(1530,84) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f32.setKey("config.application.claim.dialect.custom");
      int _jspx_eval_fmt_005fmessage_005f32 = _jspx_th_fmt_005fmessage_005f32.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f32.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f32);
      _jspx_th_fmt_005fmessage_005f32_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f32, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f32_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f33(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f33 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f33_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f33.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f33.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(1544,159) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f33.setKey("button.add.claim.mapping");
      int _jspx_eval_fmt_005fmessage_005f33 = _jspx_th_fmt_005fmessage_005f33.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f33.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f33);
      _jspx_th_fmt_005fmessage_005f33_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f33, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f33_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f34(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f34 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f34_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f34.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f34.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(1551,102) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f34.setKey("title.table.claim.sp.claim");
      int _jspx_eval_fmt_005fmessage_005f34 = _jspx_th_fmt_005fmessage_005f34.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f34.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f34);
      _jspx_th_fmt_005fmessage_005f34_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f34, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f34_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f35(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f35 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f35_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f35.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f35.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(1553,64) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f35.setKey("title.table.claim.idp.claim");
      int _jspx_eval_fmt_005fmessage_005f35 = _jspx_th_fmt_005fmessage_005f35.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f35.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f35);
      _jspx_th_fmt_005fmessage_005f35_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f35, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f35_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f36(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f36 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f36_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f36.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f36.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(1555,102) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f36.setKey("config.application.req.claim");
      int _jspx_eval_fmt_005fmessage_005f36 = _jspx_th_fmt_005fmessage_005f36.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f36.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f36);
      _jspx_th_fmt_005fmessage_005f36_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f36, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f36_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f37(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f37 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f37_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f37.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f37.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(1558,44) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f37.setKey("config.application.mand.claim");
      int _jspx_eval_fmt_005fmessage_005f37 = _jspx_th_fmt_005fmessage_005f37.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f37.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f37);
      _jspx_th_fmt_005fmessage_005f37_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f37, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f37_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f38(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f38 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f38_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f38.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f38.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(1559,44) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f38.setKey("config.application.authz.permissions.action");
      int _jspx_eval_fmt_005fmessage_005f38 = _jspx_th_fmt_005fmessage_005f38.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f38.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f38);
      _jspx_th_fmt_005fmessage_005f38_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f38, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f38_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f39(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f39 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f39_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f39.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f39.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(1614,54) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f39.setKey("alert.info.delete.permission");
      int _jspx_eval_fmt_005fmessage_005f39 = _jspx_th_fmt_005fmessage_005f39.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f39.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f39);
      _jspx_th_fmt_005fmessage_005f39_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f39, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f39_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f40(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f40 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f40_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f40.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f40.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(1619,48) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f40.setKey("link.delete");
      int _jspx_eval_fmt_005fmessage_005f40 = _jspx_th_fmt_005fmessage_005f40.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f40.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f40);
      _jspx_th_fmt_005fmessage_005f40_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f40, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f40_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f41(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f41 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f41_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f41.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f41.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(1631,63) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f41.setKey("config.application.info.subject.claim.uri");
      int _jspx_eval_fmt_005fmessage_005f41 = _jspx_th_fmt_005fmessage_005f41.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f41.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f41);
      _jspx_th_fmt_005fmessage_005f41_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f41, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f41_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f42(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f42 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f42_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f42.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f42.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(1692,64) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f42.setKey("config.application.role.claim.uri");
      int _jspx_eval_fmt_005fmessage_005f42 = _jspx_th_fmt_005fmessage_005f42.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f42.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f42);
      _jspx_th_fmt_005fmessage_005f42_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f42, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f42_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f43(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f43 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f43_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f43.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f43.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(1720,40) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f43.setKey("help.role.claim");
      int _jspx_eval_fmt_005fmessage_005f43 = _jspx_th_fmt_005fmessage_005f43.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f43.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f43);
      _jspx_th_fmt_005fmessage_005f43_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f43, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f43_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f44(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f44 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f44_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f44.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f44.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(1730,73) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f44.setKey("config.application.claim.dialect.sp");
      int _jspx_eval_fmt_005fmessage_005f44 = _jspx_th_fmt_005fmessage_005f44.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f44.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f44);
      _jspx_th_fmt_005fmessage_005f44_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f44, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f44_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f45(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f45 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f45_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f45.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f45.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(1746,50) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f45.setKey("config.application.claim.dialect.sp.add");
      int _jspx_eval_fmt_005fmessage_005f45 = _jspx_th_fmt_005fmessage_005f45.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f45.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f45);
      _jspx_th_fmt_005fmessage_005f45_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f45, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f45_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f46(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f46 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f46_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f46.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f46.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(1949,32) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f46.setKey("title.config.app.authorization.permission");
      int _jspx_eval_fmt_005fmessage_005f46 = _jspx_th_fmt_005fmessage_005f46.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f46.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f46);
      _jspx_th_fmt_005fmessage_005f46_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f46, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f46_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f47(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f47 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f47_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f47.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f47.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(1962,99) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f47.setKey("button.add.permission");
      int _jspx_eval_fmt_005fmessage_005f47 = _jspx_th_fmt_005fmessage_005f47.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f47.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f47);
      _jspx_th_fmt_005fmessage_005f47_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f47, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f47_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f48(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f48 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f48_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f48.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f48.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(1966,40) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f48.setKey("help.permission.add");
      int _jspx_eval_fmt_005fmessage_005f48 = _jspx_th_fmt_005fmessage_005f48.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f48.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f48);
      _jspx_th_fmt_005fmessage_005f48_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f48, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f48_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f49(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f49 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f49_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f49.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f49.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(1984,58) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f49.setKey("alert.info.delete.permission");
      int _jspx_eval_fmt_005fmessage_005f49 = _jspx_th_fmt_005fmessage_005f49.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f49.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f49);
      _jspx_th_fmt_005fmessage_005f49_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f49, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f49_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f50(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f50 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f50_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f50.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f50.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(1989,52) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f50.setKey("link.delete");
      int _jspx_eval_fmt_005fmessage_005f50 = _jspx_th_fmt_005fmessage_005f50.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f50.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f50);
      _jspx_th_fmt_005fmessage_005f50_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f50, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f50_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f51(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f51 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f51_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f51.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f51.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2015,100) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f51.setKey("button.add.role.mapping");
      int _jspx_eval_fmt_005fmessage_005f51 = _jspx_th_fmt_005fmessage_005f51.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f51.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f51);
      _jspx_th_fmt_005fmessage_005f51_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f51, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f51_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f52(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f52 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f52_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f52.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f52.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2019,40) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f52.setKey("help.role.mapping");
      int _jspx_eval_fmt_005fmessage_005f52 = _jspx_th_fmt_005fmessage_005f52.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f52.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f52);
      _jspx_th_fmt_005fmessage_005f52_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f52, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f52_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f53(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f53 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f53_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f53.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f53.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2027,56) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f53.setKey("title.table.role.idp.role");
      int _jspx_eval_fmt_005fmessage_005f53 = _jspx_th_fmt_005fmessage_005f53.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f53.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f53);
      _jspx_th_fmt_005fmessage_005f53_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f53, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f53_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f54(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f54 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f54_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f54.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f54.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2028,56) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f54.setKey("title.table.role.sp.role");
      int _jspx_eval_fmt_005fmessage_005f54 = _jspx_th_fmt_005fmessage_005f54.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f54.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f54);
      _jspx_th_fmt_005fmessage_005f54_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f54, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f54_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f55(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f55 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f55_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f55.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f55.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2029,36) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f55.setKey("config.application.authz.permissions.action");
      int _jspx_eval_fmt_005fmessage_005f55 = _jspx_th_fmt_005fmessage_005f55.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f55.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f55);
      _jspx_th_fmt_005fmessage_005f55_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f55, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f55_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f56(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f56 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f56_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f56.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f56.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2052,46) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f56.setKey("alert.info.delete.rolemap");
      int _jspx_eval_fmt_005fmessage_005f56 = _jspx_th_fmt_005fmessage_005f56.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f56.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f56);
      _jspx_th_fmt_005fmessage_005f56_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f56, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f56_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f57(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f57 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f57_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f57.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f57.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2057,40) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f57.setKey("link.delete");
      int _jspx_eval_fmt_005fmessage_005f57 = _jspx_th_fmt_005fmessage_005f57.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f57.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f57);
      _jspx_th_fmt_005fmessage_005f57_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f57, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f57_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f58(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f58 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f58_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f58.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f58.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2070,32) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f58.setKey("title.config.app.authentication");
      int _jspx_eval_fmt_005fmessage_005f58 = _jspx_th_fmt_005fmessage_005f58.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f58.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f58);
      _jspx_th_fmt_005fmessage_005f58_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f58, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f58_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f59(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f59 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f59_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f59.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f59.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2084,40) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f59.setKey("title.config.saml2.web.sso.config");
      int _jspx_eval_fmt_005fmessage_005f59 = _jspx_th_fmt_005fmessage_005f59.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f59.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f59);
      _jspx_th_fmt_005fmessage_005f59_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f59, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f59_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f60(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f60 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f60_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f60.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f60.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2102,107) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f60.setKey("auth.configure");
      int _jspx_eval_fmt_005fmessage_005f60 = _jspx_th_fmt_005fmessage_005f60.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f60.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f60);
      _jspx_th_fmt_005fmessage_005f60_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f60, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f60_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f61(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f61 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f61_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f61.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f61.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2111,76) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f61.setKey("title.table.saml.config.issuer");
      int _jspx_eval_fmt_005fmessage_005f61 = _jspx_th_fmt_005fmessage_005f61.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f61.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f61);
      _jspx_th_fmt_005fmessage_005f61_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f61, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f61_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f62(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f62 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f62_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f62.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f62.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2113,76) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f62.setKey("application.info.saml2sso.acsi");
      int _jspx_eval_fmt_005fmessage_005f62 = _jspx_th_fmt_005fmessage_005f62.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f62.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f62);
      _jspx_th_fmt_005fmessage_005f62_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f62, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f62_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f63(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f63 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f63_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f63.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f63.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2115,56) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f63.setKey("application.info.saml2sso.action");
      int _jspx_eval_fmt_005fmessage_005f63 = _jspx_th_fmt_005fmessage_005f63.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f63.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f63);
      _jspx_th_fmt_005fmessage_005f63_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f63, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f63_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f64(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f64 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f64_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f64.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f64.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2158,44) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f64.setKey("title.config.oauth2.oidc.config");
      int _jspx_eval_fmt_005fmessage_005f64 = _jspx_th_fmt_005fmessage_005f64.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f64.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f64);
      _jspx_th_fmt_005fmessage_005f64_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f64, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f64_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f65(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f65 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f65_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f65.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f65.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2176,52) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f65.setKey("auth.configure");
      int _jspx_eval_fmt_005fmessage_005f65 = _jspx_th_fmt_005fmessage_005f65.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f65.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f65);
      _jspx_th_fmt_005fmessage_005f65_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f65, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f65_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f66(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f66 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f66_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f66.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f66.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2186,60) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f66.setKey("application.info.oauthoidc.action");
      int _jspx_eval_fmt_005fmessage_005f66 = _jspx_th_fmt_005fmessage_005f66.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f66.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f66);
      _jspx_th_fmt_005fmessage_005f66_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f66, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f66_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f67(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f67 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f67_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f67.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f67.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2268,48) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f67.setKey("application.openid.realm");
      int _jspx_eval_fmt_005fmessage_005f67 = _jspx_th_fmt_005fmessage_005f67.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f67.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f67);
      _jspx_th_fmt_005fmessage_005f67_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f67, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f67_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f68(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f68 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f68_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f68.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f68.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2282,52) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f68.setKey("help.openid");
      int _jspx_eval_fmt_005fmessage_005f68 = _jspx_th_fmt_005fmessage_005f68.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f68.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f68);
      _jspx_th_fmt_005fmessage_005f68_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f68, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f68_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f69(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f69 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f69_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f69.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f69.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2303,48) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f69.setKey("application.passive.sts.realm");
      int _jspx_eval_fmt_005fmessage_005f69 = _jspx_th_fmt_005fmessage_005f69.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f69.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f69);
      _jspx_th_fmt_005fmessage_005f69_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f69, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f69_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f70(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f70 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f70_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f70.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f70.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2318,52) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f70.setKey("help.passive.sts");
      int _jspx_eval_fmt_005fmessage_005f70 = _jspx_th_fmt_005fmessage_005f70.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f70.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f70);
      _jspx_th_fmt_005fmessage_005f70_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f70, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f70_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f71(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f71 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f71_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f71.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f71.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2325,48) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f71.setKey("application.passive.sts.wreply");
      int _jspx_eval_fmt_005fmessage_005f71 = _jspx_th_fmt_005fmessage_005f71.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f71.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f71);
      _jspx_th_fmt_005fmessage_005f71_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f71, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f71_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f72(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f72 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f72_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f72.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f72.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2340,52) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f72.setKey("help.passive.sts.wreply");
      int _jspx_eval_fmt_005fmessage_005f72 = _jspx_th_fmt_005fmessage_005f72.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f72.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f72);
      _jspx_th_fmt_005fmessage_005f72_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f72, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f72_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f73(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f73 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f73_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f73.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f73.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2351,48) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f73.setKey("title.config.sts.config");
      int _jspx_eval_fmt_005fmessage_005f73 = _jspx_th_fmt_005fmessage_005f73.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f73.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f73);
      _jspx_th_fmt_005fmessage_005f73_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f73, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f73_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f74(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f74 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f74_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f74.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f74.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2371,56) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f74.setKey("auth.configure");
      int _jspx_eval_fmt_005fmessage_005f74 = _jspx_th_fmt_005fmessage_005f74.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f74.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f74);
      _jspx_th_fmt_005fmessage_005f74_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f74, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f74_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f75(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f75 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f75_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f75.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f75.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2380,64) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f75.setKey("application.info.oauthoidc.action");
      int _jspx_eval_fmt_005fmessage_005f75 = _jspx_th_fmt_005fmessage_005f75.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f75.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f75);
      _jspx_th_fmt_005fmessage_005f75_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f75, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f75_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f76(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f76 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f76_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f76.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f76.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2440,87) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f76.setKey("auth.configure");
      int _jspx_eval_fmt_005fmessage_005f76 = _jspx_th_fmt_005fmessage_005f76.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f76.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f76);
      _jspx_th_fmt_005fmessage_005f76_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f76, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f76_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f77(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f77 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f77_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f77.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f77.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2448,88) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f77.setKey("title.table.kerberos.config");
      int _jspx_eval_fmt_005fmessage_005f77 = _jspx_th_fmt_005fmessage_005f77.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f77.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f77);
      _jspx_th_fmt_005fmessage_005f77_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f77, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f77_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f78(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f78 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f78_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f78.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f78.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2450,68) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f78.setKey("application.info.kerberos.action");
      int _jspx_eval_fmt_005fmessage_005f78 = _jspx_th_fmt_005fmessage_005f78.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f78.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f78);
      _jspx_th_fmt_005fmessage_005f78_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f78, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f78_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f79(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f79 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f79_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f79.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f79.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2604,52) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f79.setKey("outbound.title.config.app.authentication.type");
      int _jspx_eval_fmt_005fmessage_005f79 = _jspx_th_fmt_005fmessage_005f79.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f79.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f79);
      _jspx_th_fmt_005fmessage_005f79_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f79, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f79_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f80(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f80 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f80_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f80.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f80.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2616,87) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f80.setKey("config.application.info.authentication.advance.type");
      int _jspx_eval_fmt_005fmessage_005f80 = _jspx_th_fmt_005fmessage_005f80.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f80.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f80);
      _jspx_th_fmt_005fmessage_005f80_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f80, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f80_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f81(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f81 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f81_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f81.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f81.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2624,119) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f81.setKey("config.authentication.type.default");
      int _jspx_eval_fmt_005fmessage_005f81 = _jspx_th_fmt_005fmessage_005f81.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f81.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f81);
      _jspx_th_fmt_005fmessage_005f81_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f81, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f81_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f82(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f82 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f82_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f82.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f82.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2629,111) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f82.setKey("config.authentication.type.default");
      int _jspx_eval_fmt_005fmessage_005f82 = _jspx_th_fmt_005fmessage_005f82.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f82.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f82);
      _jspx_th_fmt_005fmessage_005f82_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f82, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f82_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f83(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f83 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f83_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f83.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f83.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2641,103) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f83.setKey("config.authentication.type.local");
      int _jspx_eval_fmt_005fmessage_005f83 = _jspx_th_fmt_005fmessage_005f83.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f83.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f83);
      _jspx_th_fmt_005fmessage_005f83_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f83, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f83_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f84(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f84 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f84_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f84.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f84.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2646,109) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f84.setKey("config.authentication.type.local");
      int _jspx_eval_fmt_005fmessage_005f84 = _jspx_th_fmt_005fmessage_005f84.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f84.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f84);
      _jspx_th_fmt_005fmessage_005f84_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f84, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f84_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f85(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f85 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f85_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f85.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f85.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2695,121) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f85.setKey("config.authentication.type.federated");
      int _jspx_eval_fmt_005fmessage_005f85 = _jspx_th_fmt_005fmessage_005f85.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f85.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f85);
      _jspx_th_fmt_005fmessage_005f85_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f85, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f85_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f86(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f86 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f86_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f86.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f86.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2700,113) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f86.setKey("config.authentication.type.federated");
      int _jspx_eval_fmt_005fmessage_005f86 = _jspx_th_fmt_005fmessage_005f86.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f86.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f86);
      _jspx_th_fmt_005fmessage_005f86_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f86, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f86_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f87(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f87 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f87_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f87.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f87.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2732,80) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f87.setKey("config.authentication.type.federated");
      int _jspx_eval_fmt_005fmessage_005f87 = _jspx_th_fmt_005fmessage_005f87.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f87.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f87);
      _jspx_th_fmt_005fmessage_005f87_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f87, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f87_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f88(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f88 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f88_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f88.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f88.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2745,93) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f88.setKey("config.authentication.type.flow");
      int _jspx_eval_fmt_005fmessage_005f88 = _jspx_th_fmt_005fmessage_005f88.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f88.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f88);
      _jspx_th_fmt_005fmessage_005f88_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f88, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f88_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f89(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f89 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f89_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f89.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f89.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2751,71) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f89.setKey("config.authentication.type.flow");
      int _jspx_eval_fmt_005fmessage_005f89 = _jspx_th_fmt_005fmessage_005f89.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f89.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f89);
      _jspx_th_fmt_005fmessage_005f89_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f89, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f89_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f90(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f90 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f90_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f90.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f90.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2762,91) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f90.setKey("config.application.claim.assert.local.select");
      int _jspx_eval_fmt_005fmessage_005f90 = _jspx_th_fmt_005fmessage_005f90.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f90.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f90);
      _jspx_th_fmt_005fmessage_005f90_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f90, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f90_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f91(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f91 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f91_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f91.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f91.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2770,92) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f91.setKey("config.application.claim.always.auth.list");
      int _jspx_eval_fmt_005fmessage_005f91 = _jspx_th_fmt_005fmessage_005f91.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f91.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f91);
      _jspx_th_fmt_005fmessage_005f91_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f91, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f91_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f92(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f92 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f92_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f92.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f92.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2780,108) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f92.setKey("config.application.use.tenant.domain.in.local.subject.identifier");
      int _jspx_eval_fmt_005fmessage_005f92 = _jspx_th_fmt_005fmessage_005f92.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f92.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f92);
      _jspx_th_fmt_005fmessage_005f92_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f92, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f92_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f93(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f93 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f93_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f93.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f93.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2790,111) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f93.setKey("config.application.use.userstore.domain.in.local.subject.identifier");
      int _jspx_eval_fmt_005fmessage_005f93 = _jspx_th_fmt_005fmessage_005f93.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f93.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f93);
      _jspx_th_fmt_005fmessage_005f93_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f93, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f93_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f94(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f94 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f94_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f94.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f94.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2799,96) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f94.setKey("config.application.use.userstore.domain.in.roles");
      int _jspx_eval_fmt_005fmessage_005f94 = _jspx_th_fmt_005fmessage_005f94.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f94.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f94);
      _jspx_th_fmt_005fmessage_005f94_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f94, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f94_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f95(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f95 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f95_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f95.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f95.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2808,83) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f95.setKey("config.application.enable.authorization");
      int _jspx_eval_fmt_005fmessage_005f95 = _jspx_th_fmt_005fmessage_005f95.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f95.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f95);
      _jspx_th_fmt_005fmessage_005f95_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f95, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f95_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f96(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f96 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f96_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f96.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f96.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2814,77) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f96.setKey("config.application.skip.consent");
      int _jspx_eval_fmt_005fmessage_005f96 = _jspx_th_fmt_005fmessage_005f96.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f96.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f96);
      _jspx_th_fmt_005fmessage_005f96_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f96, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f96_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f97(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f97 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f97_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f97.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f97.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2817,56) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f97.setKey("help.skip.consent");
      int _jspx_eval_fmt_005fmessage_005f97 = _jspx_th_fmt_005fmessage_005f97.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f97.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f97);
      _jspx_th_fmt_005fmessage_005f97_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f97, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f97_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f98(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f98 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f98_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f98.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f98.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2822,83) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f98.setKey("config.application.skip.logout.consent");
      int _jspx_eval_fmt_005fmessage_005f98 = _jspx_th_fmt_005fmessage_005f98.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f98.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f98);
      _jspx_th_fmt_005fmessage_005f98_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f98, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f98_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f99(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f99 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f99_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f99.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f99.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2825,56) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f99.setKey("help.skip.logout.consent");
      int _jspx_eval_fmt_005fmessage_005f99 = _jspx_th_fmt_005fmessage_005f99.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f99.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f99);
      _jspx_th_fmt_005fmessage_005f99_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f99, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f99_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f100(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f100 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f100_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f100.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f100.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2833,60) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f100.setKey("title.req.config.authentication.steps");
      int _jspx_eval_fmt_005fmessage_005f100 = _jspx_th_fmt_005fmessage_005f100.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f100.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f100);
      _jspx_th_fmt_005fmessage_005f100_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f100, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f100_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f101(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f101 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f101_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f101.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f101.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2849,64) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f101.setKey("help.local.authnticators");
      int _jspx_eval_fmt_005fmessage_005f101 = _jspx_th_fmt_005fmessage_005f101.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f101.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f101);
      _jspx_th_fmt_005fmessage_005f101_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f101, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f101_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f102(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f102 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f102_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f102.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f102.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2892,56) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f102.setKey("inbound.provisioning.head");
      int _jspx_eval_fmt_005fmessage_005f102 = _jspx_th_fmt_005fmessage_005f102.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f102.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f102);
      _jspx_th_fmt_005fmessage_005f102_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f102, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f102_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f103(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f103 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f103_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f103.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f103.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2900,60) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f103.setKey("scim.inbound.provisioning.head");
      int _jspx_eval_fmt_005fmessage_005f103 = _jspx_th_fmt_005fmessage_005f103.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f103.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f103);
      _jspx_th_fmt_005fmessage_005f103_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f103, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f103_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f104(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f104 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f104_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f104.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f104.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2945,64) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f104.setKey("help.inbound.scim");
      int _jspx_eval_fmt_005fmessage_005f104 = _jspx_th_fmt_005fmessage_005f104.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f104.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f104);
      _jspx_th_fmt_005fmessage_005f104_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f104, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f104_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f105(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f105 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f105_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f105.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f105.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2955,64) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f105.setKey("help.inbound.scim.dumb");
      int _jspx_eval_fmt_005fmessage_005f105 = _jspx_th_fmt_005fmessage_005f105.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f105.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f105);
      _jspx_th_fmt_005fmessage_005f105_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f105, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f105_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f106(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f106 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f106_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f106.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f106.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(2966,56) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f106.setKey("outbound.provisioning.head");
      int _jspx_eval_fmt_005fmessage_005f106 = _jspx_th_fmt_005fmessage_005f106.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f106.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f106);
      _jspx_th_fmt_005fmessage_005f106_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f106, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f106_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f107(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f107 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f107_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f107.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f107.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(3078,58) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f107.setKey("button.update.service.provider");
      int _jspx_eval_fmt_005fmessage_005f107 = _jspx_th_fmt_005fmessage_005f107.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f107.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f107);
      _jspx_th_fmt_005fmessage_005f107_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f107, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f107_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f108(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f108 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f108_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f108.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f108.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(3081,62) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f108.setKey("button.save.service.provider.template");
      int _jspx_eval_fmt_005fmessage_005f108 = _jspx_th_fmt_005fmessage_005f108.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f108.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f108);
      _jspx_th_fmt_005fmessage_005f108_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f108, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f108_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f109(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f109 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f109_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f109.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f109.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(3085,72) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f109.setKey("button.cancel");
      int _jspx_eval_fmt_005fmessage_005f109 = _jspx_th_fmt_005fmessage_005f109.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f109.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f109);
      _jspx_th_fmt_005fmessage_005f109_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f109, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f109_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f110(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f110 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f110_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f110.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f110.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(3094,12) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f110.setKey("title.oauth.application");
      int _jspx_eval_fmt_005fmessage_005f110 = _jspx_th_fmt_005fmessage_005f110.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f110.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f110);
      _jspx_th_fmt_005fmessage_005f110_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f110, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f110_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f111(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f111 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f111_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f111.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f111.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(3098,68) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f111.setKey("application.successfull");
      int _jspx_eval_fmt_005fmessage_005f111 = _jspx_th_fmt_005fmessage_005f111.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f111.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f111);
      _jspx_th_fmt_005fmessage_005f111_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f111, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f111_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f112(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f112 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f112_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f112.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f112.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(3109,75) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f112.setKey("note");
      int _jspx_eval_fmt_005fmessage_005f112 = _jspx_th_fmt_005fmessage_005f112.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f112.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f112);
      _jspx_th_fmt_005fmessage_005f112_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f112, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f112_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f113(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f113 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f113_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f113.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f113.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(3110,28) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f113.setKey("note.oauth.application");
      int _jspx_eval_fmt_005fmessage_005f113 = _jspx_th_fmt_005fmessage_005f113.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f113.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f113);
      _jspx_th_fmt_005fmessage_005f113_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f113, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f113_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f114(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f114 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f114_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f114.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f114.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(3114,86) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f114.setKey("config.application.consumerkey");
      int _jspx_eval_fmt_005fmessage_005f114 = _jspx_th_fmt_005fmessage_005f114.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f114.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f114);
      _jspx_th_fmt_005fmessage_005f114_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f114, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f114_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f115(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f115 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f115_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f115.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f115.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(3126,98) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f115.setKey("button.copy");
      int _jspx_eval_fmt_005fmessage_005f115 = _jspx_th_fmt_005fmessage_005f115.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f115.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f115);
      _jspx_th_fmt_005fmessage_005f115_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f115, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f115_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f116(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f116 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f116_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f116.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f116.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(3132,86) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f116.setKey("config.application.consumersecret");
      int _jspx_eval_fmt_005fmessage_005f116 = _jspx_th_fmt_005fmessage_005f116.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f116.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f116);
      _jspx_th_fmt_005fmessage_005f116_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f116, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f116_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f117(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f117 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f117_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f117.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f117.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(3144,101) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f117.setKey("button.copy");
      int _jspx_eval_fmt_005fmessage_005f117 = _jspx_th_fmt_005fmessage_005f117.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f117.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f117);
      _jspx_th_fmt_005fmessage_005f117_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f117, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f117_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f118(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f118 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f118_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f118.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f118.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(3157,73) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f118.setKey("config.application.template.name");
      int _jspx_eval_fmt_005fmessage_005f118 = _jspx_th_fmt_005fmessage_005f118.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f118.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f118);
      _jspx_th_fmt_005fmessage_005f118_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f118, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f118_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f119(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f119 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f119_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f119.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f119.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(3161,28) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f119.setKey("help.template.name");
      int _jspx_eval_fmt_005fmessage_005f119 = _jspx_th_fmt_005fmessage_005f119.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f119.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f119);
      _jspx_th_fmt_005fmessage_005f119_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f119, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f119_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f120(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f120 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f120_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f120.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f120.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(3166,73) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f120.setKey("config.application.template.description");
      int _jspx_eval_fmt_005fmessage_005f120 = _jspx_th_fmt_005fmessage_005f120.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f120.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f120);
      _jspx_th_fmt_005fmessage_005f120_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f120, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f120_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f121(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f121 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f121_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f121.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f121.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(3170,28) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f121.setKey("help.template.desc");
      int _jspx_eval_fmt_005fmessage_005f121 = _jspx_th_fmt_005fmessage_005f121.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f121.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f121);
      _jspx_th_fmt_005fmessage_005f121_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f121, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f121_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f122(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f122 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f122_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f122.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f122.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /application/configure-service-provider.jsp(3182,16) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f122.setKey("alert.error.add.sp.template");
      int _jspx_eval_fmt_005fmessage_005f122 = _jspx_th_fmt_005fmessage_005f122.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f122.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f122);
      _jspx_th_fmt_005fmessage_005f122_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f122, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f122_reused);
    }
    return false;
  }
}
