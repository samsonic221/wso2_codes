/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.31
 * Generated at: 2020-07-29 13:35:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.identity_002dclaim_002dmgt;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.wso2.carbon.ui.CarbonUIUtil;
import org.apache.axis2.context.ConfigurationContext;
import org.wso2.carbon.utils.ServerConstants;
import org.wso2.carbon.CarbonConstants;
import org.wso2.carbon.identity.claim.metadata.mgt.ui.client.ClaimMetadataAdminClient;
import java.util.ResourceBundle;
import org.wso2.carbon.ui.CarbonUIMessage;
import org.wso2.carbon.user.core.UserCoreConstants;
import org.owasp.encoder.Encode;
import org.wso2.carbon.identity.claim.metadata.mgt.stub.dto.LocalClaimDTO;
import org.wso2.carbon.identity.claim.metadata.mgt.stub.dto.AttributeMappingDTO;
import org.wso2.carbon.identity.claim.metadata.mgt.stub.dto.ClaimPropertyDTO;
import java.util.Properties;
import org.apache.commons.lang.StringUtils;
import java.util.ArrayList;
import java.util.List;
import java.util.Enumeration;
import org.wso2.carbon.identity.claim.metadata.mgt.ui.utils.ClaimConstants;

public final class list_002dlocal_002dclaims_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/tlds/carbontags.tld", Long.valueOf(1582879640000L));
    _jspx_dependants.put("/WEB-INF/tlds/fmt.tld", Long.valueOf(1582879640000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("org.apache.commons.lang.StringUtils");
    _jspx_imports_classes.add("java.util.Properties");
    _jspx_imports_classes.add("org.apache.axis2.context.ConfigurationContext");
    _jspx_imports_classes.add("java.util.Enumeration");
    _jspx_imports_classes.add("org.wso2.carbon.ui.CarbonUIUtil");
    _jspx_imports_classes.add("org.wso2.carbon.identity.claim.metadata.mgt.stub.dto.AttributeMappingDTO");
    _jspx_imports_classes.add("org.wso2.carbon.user.core.UserCoreConstants");
    _jspx_imports_classes.add("org.wso2.carbon.identity.claim.metadata.mgt.stub.dto.ClaimPropertyDTO");
    _jspx_imports_classes.add("java.util.ArrayList");
    _jspx_imports_classes.add("org.wso2.carbon.identity.claim.metadata.mgt.stub.dto.LocalClaimDTO");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("org.owasp.encoder.Encode");
    _jspx_imports_classes.add("java.util.ResourceBundle");
    _jspx_imports_classes.add("org.wso2.carbon.ui.CarbonUIMessage");
    _jspx_imports_classes.add("org.wso2.carbon.utils.ServerConstants");
    _jspx_imports_classes.add("org.wso2.carbon.CarbonConstants");
    _jspx_imports_classes.add("org.wso2.carbon.identity.claim.metadata.mgt.ui.client.ClaimMetadataAdminClient");
    _jspx_imports_classes.add("org.wso2.carbon.identity.claim.metadata.mgt.ui.utils.ClaimConstants");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fcarbon_005fbreadcrumb_0026_005ftopPage_005fresourceBundle_005frequest_005flabel_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fcarbon_005fbreadcrumb_0026_005ftopPage_005fresourceBundle_005frequest_005flabel_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename.release();
    _005fjspx_005ftagPool_005fcarbon_005fbreadcrumb_0026_005ftopPage_005fresourceBundle_005frequest_005flabel_005fnobody.release();
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../dialog/display_messages.jsp", out, false);
      out.write('\n');
      out.write('\n');

    String serverURL = CarbonUIUtil.getServerURL(config.getServletContext(), session);
    ConfigurationContext configContext = (ConfigurationContext)
            config.getServletContext().getAttribute(CarbonConstants.CONFIGURATION_CONTEXT);
    String cookie = (String) session.getAttribute(ServerConstants.ADMIN_SERVICE_COOKIE);

    org.wso2.carbon.identity.claim.metadata.mgt.stub.dto.LocalClaimDTO[] localClaims = null;
    try {
        ClaimMetadataAdminClient client = new ClaimMetadataAdminClient(cookie, serverURL, configContext);
        localClaims = client.getLocalClaims();
        session.setAttribute("localClaims", localClaims);
    } catch (Exception e) {
        String BUNDLE = "org.wso2.carbon.identity.claim.metadata.mgt.ui.i18n.Resources";
        ResourceBundle resourceBundle = ResourceBundle.getBundle(BUNDLE, request.getLocale());
        String message = resourceBundle.getString("error.while.loading.local.claims");
        CarbonUIMessage.sendCarbonUIMessage(message, CarbonUIMessage.ERROR, request);
        String forwardTo = "../admin/error.jsp";

      out.write("\n");
      out.write("\n");
      out.write("    <script type=\"text/javascript\">\n");
      out.write("        function forward() {\n");
      out.write("            location.href = \"");
      out.print(forwardTo);
      out.write("\";\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        forward();\n");
      out.write("    </script>\n");

    }

      out.write('\n');
      out.write('\n');
      out.write('\n');
      //  fmt:bundle
      org.apache.taglibs.standard.tag.rt.fmt.BundleTag _jspx_th_fmt_005fbundle_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.BundleTag) _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename.get(org.apache.taglibs.standard.tag.rt.fmt.BundleTag.class);
      boolean _jspx_th_fmt_005fbundle_005f0_reused = false;
      try {
        _jspx_th_fmt_005fbundle_005f0.setPageContext(_jspx_page_context);
        _jspx_th_fmt_005fbundle_005f0.setParent(null);
        // /identity-claim-mgt/list-local-claims.jsp(71,0) name = basename type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_fmt_005fbundle_005f0.setBasename("org.wso2.carbon.identity.claim.metadata.mgt.ui.i18n.Resources");
        int _jspx_eval_fmt_005fbundle_005f0 = _jspx_th_fmt_005fbundle_005f0.doStartTag();
        if (_jspx_eval_fmt_005fbundle_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          if (_jspx_eval_fmt_005fbundle_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_fmt_005fbundle_005f0);
          }
          do {
            out.write("\n");
            out.write("    ");
            //  carbon:breadcrumb
            org.wso2.carbon.ui.taglibs.Breadcrumb _jspx_th_carbon_005fbreadcrumb_005f0 = (org.wso2.carbon.ui.taglibs.Breadcrumb) _005fjspx_005ftagPool_005fcarbon_005fbreadcrumb_0026_005ftopPage_005fresourceBundle_005frequest_005flabel_005fnobody.get(org.wso2.carbon.ui.taglibs.Breadcrumb.class);
            boolean _jspx_th_carbon_005fbreadcrumb_005f0_reused = false;
            try {
              _jspx_th_carbon_005fbreadcrumb_005f0.setPageContext(_jspx_page_context);
              _jspx_th_carbon_005fbreadcrumb_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
              // /identity-claim-mgt/list-local-claims.jsp(72,4) name = label type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_carbon_005fbreadcrumb_005f0.setLabel("list.title");
              // /identity-claim-mgt/list-local-claims.jsp(72,4) name = resourceBundle type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_carbon_005fbreadcrumb_005f0.setResourceBundle("org.wso2.carbon.identity.claim.metadata.mgt.ui.i18n.Resources");
              // /identity-claim-mgt/list-local-claims.jsp(72,4) name = topPage type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_carbon_005fbreadcrumb_005f0.setTopPage(false);
              // /identity-claim-mgt/list-local-claims.jsp(72,4) name = request type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_carbon_005fbreadcrumb_005f0.setRequest(request);
              int _jspx_eval_carbon_005fbreadcrumb_005f0 = _jspx_th_carbon_005fbreadcrumb_005f0.doStartTag();
              if (_jspx_th_carbon_005fbreadcrumb_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005fcarbon_005fbreadcrumb_0026_005ftopPage_005fresourceBundle_005frequest_005flabel_005fnobody.reuse(_jspx_th_carbon_005fbreadcrumb_005f0);
              _jspx_th_carbon_005fbreadcrumb_005f0_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_carbon_005fbreadcrumb_005f0, _jsp_getInstanceManager(), _jspx_th_carbon_005fbreadcrumb_005f0_reused);
            }
            out.write("\n");
            out.write("\n");
            out.write("    <script type=\"text/javascript\" src=\"../admin/js/breadcrumbs.js\"></script>\n");
            out.write("    <script type=\"text/javascript\" src=\"../admin/js/cookies.js\"></script>\n");
            out.write("    <script type=\"text/javascript\" src=\"../admin/js/main.js\"></script>\n");
            out.write("    <script type=\"text/javascript\">\n");
            out.write("        jQuery(document).ready(function () {\n");
            out.write("\n");
            out.write("            jQuery(\".toggle_container\").hide();\n");
            out.write("            /*Hide (Collapse) the toggle containers on load use show() insted of hide() \tin the above code if you want to keep the content section expanded. */\n");
            out.write("            var triggerHandler = function () {\n");
            out.write("                if (jQuery(this.parentNode).next().is(\":visible\")) {\n");
            out.write("                    $('i', this).get(0).className = \"claim-arrow-down\";\n");
            out.write("                    jQuery(this).parent().removeClass('trigger-title-container-light');\n");
            out.write("                } else {\n");
            out.write("                    $('i', this).get(0).className = \"claim-arrow-up\";\n");
            out.write("                    jQuery(this).parent().addClass('trigger-title-container-light');\n");
            out.write("                }\n");
            out.write("\n");
            out.write("                jQuery(this.parentNode).next().slideToggle(\"fast\");\n");
            out.write("                return false; //Prevent the browser jump to the link anchor\n");
            out.write("            };\n");
            out.write("            jQuery(\"a.trigger-title\").click(triggerHandler);\n");
            out.write("        });\n");
            out.write("        function removeItem(localClaimURI, localClaimURIForMessage, localClaimslength) {\n");
            out.write("            if (localClaimslength <= 1) {\n");
            out.write("                CARBON.showWarningDialog('");
            if (_jspx_meth_fmt_005fmessage_005f0(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("');\n");
            out.write("                return false;\n");
            out.write("            } else {\n");
            out.write("                function doDelete() {\n");
            out.write("                    $.ajax({\n");
            out.write("                        type: 'POST',\n");
            out.write("                        url: 'remove-local-claim-finish-ajaxprocessor.jsp',\n");
            out.write("                        headers: {\n");
            out.write("                            Accept: \"text/html\"\n");
            out.write("                        },\n");
            out.write("                        data: 'localClaimURI=' + localClaimURI,\n");
            out.write("                        async: false,\n");
            out.write("                        success: function (responseText, status) {\n");
            out.write("                            if (status == \"success\") {\n");
            out.write("                                location.assign(\"list-local-claims.jsp?ordinal=1\");\n");
            out.write("                            }\n");
            out.write("                        }\n");
            out.write("                    });\n");
            out.write("                }\n");
            out.write("\n");
            out.write("                CARBON.showConfirmationDialog('");
            if (_jspx_meth_fmt_005fmessage_005f1(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write(" ' +\n");
            out.write("                        localClaimURIForMessage + '");
            if (_jspx_meth_fmt_005fmessage_005f2(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("', doDelete, null);\n");
            out.write("            }\n");
            out.write("        }\n");
            out.write("    </script>\n");
            out.write("    <style type=\"text/css\">\n");
            out.write("        .editLink {\n");
            out.write("            background: transparent url(../admin/images/edit.gif) no-repeat 0px 0px !important;\n");
            out.write("            float: left !important;\n");
            out.write("            padding: 0px 0px 0px 20px !important;\n");
            out.write("            color: inherit !important;\n");
            out.write("            font-size: 12px !important;\n");
            out.write("            line-height: 20px !important;\n");
            out.write("            margin-right: 10px !important;\n");
            out.write("            margin-bottom: 5px !important;\n");
            out.write("            margin-left: 5px !important;\n");
            out.write("            height: 30px;\n");
            out.write("        }\n");
            out.write("\n");
            out.write("        .deleteLink {\n");
            out.write("            background: transparent url(../admin/images/delete.gif) no-repeat 0px 0px !important;\n");
            out.write("            float: left !important;\n");
            out.write("            padding: 0px 0px 0px 20px !important;\n");
            out.write("            color: inherit !important;\n");
            out.write("            font-size: 12px !important;\n");
            out.write("            line-height: 20px !important;\n");
            out.write("            margin-right: 10px !important;\n");
            out.write("            margin-bottom: 5px !important;\n");
            out.write("            margin-left: 5px !important;\n");
            out.write("            height: 30px;\n");
            out.write("        }\n");
            out.write("\n");
            out.write("        .trigger-title {\n");
            out.write("            float: left;\n");
            out.write("            display: block;\n");
            out.write("            min-width: 30%;\n");
            out.write("            vertical-align: bottom;\n");
            out.write("        }\n");
            out.write("\n");
            out.write("        .claim-arrow-up {\n");
            out.write("            background: url('../admin/images/up-arrow.png') left bottom;\n");
            out.write("            width: 16px;\n");
            out.write("            height: 16px;\n");
            out.write("            display: inline-block;\n");
            out.write("            margin-top: 3px;\n");
            out.write("        }\n");
            out.write("\n");
            out.write("        .claim-arrow-down {\n");
            out.write("            background: url('../admin/images/down-arrow.png') left bottom;\n");
            out.write("            width: 16px;\n");
            out.write("            height: 16px;\n");
            out.write("            display: inline-block;\n");
            out.write("            margin-top: 3px;\n");
            out.write("        }\n");
            out.write("\n");
            out.write("        div.trigger-title-container {\n");
            out.write("            border: solid 1px #c2c4c6;\n");
            out.write("\n");
            out.write("            -moz-box-shadow: 3px 3px 3px #888;\n");
            out.write("            -webkit-box-shadow: 3px 3px 3px #888;\n");
            out.write("            box-shadow: 3px 3px 3px #888;\n");
            out.write("\n");
            out.write("            padding: 0;\n");
            out.write("            background-color: #e9e9e9;\n");
            out.write("            background-repeat: no-repeat;\n");
            out.write("            background-position: 5px center;\n");
            out.write("            padding-left: 5px;\n");
            out.write("            padding-bottom: 0px !important;\n");
            out.write("            margin-bottom: 0px !important;\n");
            out.write("            margin: 0;\n");
            out.write("            z-index: 1;\n");
            out.write("            cursor: pointer;\n");
            out.write("            min-height: 30px;\n");
            out.write("\n");
            out.write("            font-weight: normal;\n");
            out.write("            outline-color: -moz-use-text-color;\n");
            out.write("            outline-style: none;\n");
            out.write("            outline-width: 0;\n");
            out.write("            font-size: 13px;\n");
            out.write("\n");
            out.write("        }\n");
            out.write("\n");
            out.write("        div.trigger-title-container-light {\n");
            out.write("            background-color: #fefefe;\n");
            out.write("            -moz-box-shadow: 0 0 0 transparent;\n");
            out.write("            -webkit-box-shadow: 0 0 0 transparent;\n");
            out.write("            box-shadow: 0 0 0 transparent;\n");
            out.write("            font-weight: bold;\n");
            out.write("        }\n");
            out.write("\n");
            out.write("        div.trigger-title-container span {\n");
            out.write("            line-height: 16px;\n");
            out.write("        }\n");
            out.write("\n");
            out.write("    </style>\n");
            out.write("    <div id=\"middle\">\n");
            out.write("        <h2>");
            if (_jspx_meth_fmt_005fmessage_005f3(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write(' ');
            out.print(Encode.forHtml(UserCoreConstants.DEFAULT_CARBON_DIALECT));
            out.write("</h2>\n");
            out.write("\n");
            out.write("        <div id=\"workArea\">\n");
            out.write("\n");
            out.write("            ");

                for (int i = 0; i < localClaims.length; i++) {

                    LocalClaimDTO localClaim = localClaims[i];
                    String localClaimURI = localClaim.getLocalClaimURI();
                    AttributeMappingDTO[] attributeMappings = localClaim.getAttributeMappings();
                    ClaimPropertyDTO[] claimPropertyDTOs = localClaim.getClaimProperties();

                    if (attributeMappings == null) {
                        attributeMappings = new AttributeMappingDTO[0];
                    }

                    if (claimPropertyDTOs == null) {
                        claimPropertyDTOs = new ClaimPropertyDTO[0];
                    }

                    Properties claimProperties = new Properties();
                    for (int j = 0; j < claimPropertyDTOs.length; j++) {
                        claimProperties.put(claimPropertyDTOs[j].getPropertyName(),
                                claimPropertyDTOs[j].getPropertyValue());
                    }

                    String displayName = localClaimURI;
                    if (claimProperties.containsKey(ClaimConstants.DISPLAY_NAME_PROPERTY)) {
                        displayName = claimProperties.getProperty(ClaimConstants.DISPLAY_NAME_PROPERTY);
                        claimProperties.remove(ClaimConstants.DISPLAY_NAME_PROPERTY);
                    }

                    String description = null;
                    if (claimProperties.containsKey(ClaimConstants.DESCRIPTION_PROPERTY)) {
                        description = claimProperties.getProperty(ClaimConstants.DESCRIPTION_PROPERTY);
                        claimProperties.remove(ClaimConstants.DESCRIPTION_PROPERTY);
                    }

                    String regex = null;
                    if (claimProperties.containsKey(ClaimConstants.REGULAR_EXPRESSION_PROPERTY)) {
                        regex = claimProperties.getProperty(ClaimConstants.REGULAR_EXPRESSION_PROPERTY);
                        claimProperties.remove(ClaimConstants.REGULAR_EXPRESSION_PROPERTY);
                    }

                    String displayOrder = null;
                    if (claimProperties.containsKey(ClaimConstants.DISPLAY_ORDER_PROPERTY)) {
                        displayOrder = claimProperties.getProperty(ClaimConstants.DISPLAY_ORDER_PROPERTY);
                        claimProperties.remove(ClaimConstants.DISPLAY_ORDER_PROPERTY);
                    } else {
                        displayOrder = "0";
                    }

                    String supportedByDefault = null;
                    if (claimProperties.containsKey(ClaimConstants.SUPPORTED_BY_DEFAULT_PROPERTY)) {
                        supportedByDefault = claimProperties.getProperty(ClaimConstants.SUPPORTED_BY_DEFAULT_PROPERTY);
                        claimProperties.remove(ClaimConstants.SUPPORTED_BY_DEFAULT_PROPERTY);
                    }

                    String required = null;
                    if (claimProperties.containsKey(ClaimConstants.REQUIRED_PROPERTY)) {
                        required = claimProperties.getProperty(ClaimConstants.REQUIRED_PROPERTY);
                        claimProperties.remove(ClaimConstants.REQUIRED_PROPERTY);
                    }

                    String readonly = null;
                    if (claimProperties.containsKey(ClaimConstants.READ_ONLY_PROPERTY)) {
                        readonly = claimProperties.getProperty(ClaimConstants.READ_ONLY_PROPERTY);
                        claimProperties.remove(ClaimConstants.READ_ONLY_PROPERTY);
                    }

                    if (StringUtils.isNotBlank(displayName)) {
            out.write("\n");
            out.write("            <div class=\"trigger-title-container\">\n");
            out.write("                <a href=\"#\" class=\"trigger-title\">\n");
            out.write("                    <i class=\"claim-arrow-down\"></i>\n");
            out.write("                    <span>");
            out.print(Encode.forHtmlContent(displayName));
            out.write("</span>\n");
            out.write("                </a>\n");
            out.write("                <a href=\"update-local-claim.jsp?localClaimURI=");
            out.print(Encode.forUriComponent(localClaimURI));
            out.write("\"\n");
            out.write("                   class=\"editLink icon-link\">");
            if (_jspx_meth_fmt_005fmessage_005f4(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\n");
            out.write("                </a>\n");
            out.write("                <a href=\"#\" class=\"icon-link deleteLink\"\n");
            out.write("                   style=\"background-image:url(../identity-claim-mgt/images/delete.gif);\"\n");
            out.write("                   onclick=\"removeItem('");
            out.print(Encode.forJavaScriptAttribute(Encode.forUriComponent(localClaimURI)));
            out.write("',\n");
            out.write("                           '");
            out.print(Encode.forJavaScriptAttribute(localClaimURI));
            out.write("',\n");
            out.write("                           '");
            out.print(Encode.forJavaScriptAttribute(String.valueOf(localClaims.length)));
            out.write("');return\n");
            out.write("                           false;\">");
            if (_jspx_meth_fmt_005fmessage_005f5(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\n");
            out.write("                </a>\n");
            out.write("\n");
            out.write("                <div style=\"clear:both\"></div>\n");
            out.write("            </div>\n");
            out.write("\n");
            out.write("            <div class=\"toggle_container\">\n");
            out.write("                <table style=\"width: 100%\" class=\"styledLeft\">\n");
            out.write("                    <tbody>\n");
            out.write("                    <tr>\n");
            out.write("                        <td class=\"leftCol-small\">");
            if (_jspx_meth_fmt_005fmessage_005f6(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</td>\n");
            out.write("                        <td class=\"leftCol-big\">");
            out.print(Encode.forHtmlContent(localClaimURI));
            out.write("\n");
            out.write("                        </td>\n");
            out.write("                    </tr>\n");
            out.write("\n");
            out.write("                    <tr>\n");
            out.write("                        <td class=\"leftCol-small\">");
            if (_jspx_meth_fmt_005fmessage_005f7(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</td>\n");
            out.write("                        <td class=\"leftCol-big\">");
            out.print(Encode.forHtmlContent(description));
            out.write("\n");
            out.write("                        </td>\n");
            out.write("                    </tr>\n");
            out.write("\n");
            out.write("                    <tr>\n");
            out.write("                        <td class=\"leftCol-small\">");
            if (_jspx_meth_fmt_005fmessage_005f8(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</td>\n");
            out.write("                        <td>\n");
            out.write("                            <table class=\"styledLeft\" id=\"attributeAddTable\">\n");
            out.write("                                <thead>\n");
            out.write("                                <tr>\n");
            out.write("                                    <th>");
            if (_jspx_meth_fmt_005fmessage_005f9(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</th>\n");
            out.write("                                    <th>");
            if (_jspx_meth_fmt_005fmessage_005f10(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</th>\n");
            out.write("                                </tr>\n");
            out.write("                                </thead>\n");
            out.write("                                <tbody>\n");
            out.write("                                ");

                                    for (int attributeCounter = 0; attributeCounter < attributeMappings.length; attributeCounter++) {
                                        AttributeMappingDTO attributeMapping = attributeMappings[attributeCounter];
                                        String userStoreDomainName = attributeMapping.getUserStoreDomain();
                                        String attributeName = attributeMapping.getAttributeName();
                                
            out.write("\n");
            out.write("                                <tr>\n");
            out.write("                                    <td class=\"leftCol-big\">\n");
            out.write("                                        <input style=\"width: 98%;\" type=\"text\"\n");
            out.write("                                               value=\"");
            out.print(Encode.forHtmlAttribute(userStoreDomainName));
            out.write("\"\n");
            out.write("                                               id=\"userstore_");
            out.print(attributeCounter);
            out.write("\"\n");
            out.write("                                               name=\"userstore_");
            out.print(attributeCounter);
            out.write("\" readonly/>\n");
            out.write("                                    </td>\n");
            out.write("                                    <td class=\"leftCol-big\">\n");
            out.write("                                        <input style=\"width: 98%;\" type=\"text\"\n");
            out.write("                                               value=\"");
            out.print(Encode.forHtmlAttribute(attributeName));
            out.write("\"\n");
            out.write("                                               id=\"attribute_");
            out.print(attributeCounter);
            out.write("\"\n");
            out.write("                                               name=\"attribute_");
            out.print(attributeCounter);
            out.write("\" readonly/>\n");
            out.write("                                    </td>\n");
            out.write("                                </tr>\n");
            out.write("                                ");

                                    }
                                
            out.write("\n");
            out.write("                                </tbody>\n");
            out.write("                            </table>\n");
            out.write("                            <div style=\"clear:both\"/>\n");
            out.write("                        </td>\n");
            out.write("                    </tr>\n");
            out.write("\n");
            out.write("                    <tr>\n");
            out.write("                        <td class=\"leftCol-small\">");
            if (_jspx_meth_fmt_005fmessage_005f11(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</td>\n");
            out.write("                        ");
 if (regex == null) { 
            out.write("\n");
            out.write("                        <td class=\"leftCol-big\">");
            out.print("" );
            out.write("\n");
            out.write("                        </td>\n");
            out.write("                        ");
 } else {
            out.write("\n");
            out.write("                        <td class=\"leftCol-big\">");
            out.print(Encode.forHtmlContent(regex) );
            out.write("\n");
            out.write("                        </td>\n");
            out.write("                        ");
 } 
            out.write("\n");
            out.write("                    </tr>\n");
            out.write("                    <tr>\n");
            out.write("                        <td class=\"leftCol-small\">");
            if (_jspx_meth_fmt_005fmessage_005f12(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</td>\n");
            out.write("                        <td class=\"leftCol-big\">");
            out.print(Encode.forHtmlContent(displayOrder));
            out.write("\n");
            out.write("                        </td>\n");
            out.write("                    </tr>\n");
            out.write("                    <tr>\n");
            out.write("                        <td class=\"leftCol-small\">");
            if (_jspx_meth_fmt_005fmessage_005f13(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</td>\n");
            out.write("                        ");
if (Boolean.parseBoolean(supportedByDefault)) { 
            out.write("\n");
            out.write("                        <td>true</td>\n");
            out.write("                        ");
 } else { 
            out.write("\n");
            out.write("                        <td>false</td>\n");
            out.write("                        ");
} 
            out.write("\n");
            out.write("                    </tr>\n");
            out.write("\n");
            out.write("                    <tr>\n");
            out.write("                        <td class=\"leftCol-small\">");
            if (_jspx_meth_fmt_005fmessage_005f14(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</td>\n");
            out.write("                        ");
if (Boolean.parseBoolean(required)) { 
            out.write("\n");
            out.write("                        <td>true</td>\n");
            out.write("                        ");
 } else { 
            out.write("\n");
            out.write("                        <td>false</td>\n");
            out.write("                        ");
} 
            out.write("\n");
            out.write("                    </tr>\n");
            out.write("\n");
            out.write("                    <tr>\n");
            out.write("                        <td class=\"leftCol-small\">");
            if (_jspx_meth_fmt_005fmessage_005f15(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</td>\n");
            out.write("                        ");
if (Boolean.parseBoolean(readonly)) { 
            out.write("\n");
            out.write("                        <td>true</td>\n");
            out.write("                        ");
 } else { 
            out.write("\n");
            out.write("                        <td>false</td>\n");
            out.write("                        ");
} 
            out.write("\n");
            out.write("                    </tr>\n");
            out.write("\n");
            out.write("                    ");

                        if (claimProperties.size() > 0) {
                    
            out.write("\n");
            out.write("                    <tr>\n");
            out.write("                        <td class=\"leftCol-small\">");
            if (_jspx_meth_fmt_005fmessage_005f16(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</td>\n");
            out.write("                        <td>\n");
            out.write("                            <table class=\"styledLeft\" id=\"propertyAddTable\">\n");
            out.write("                                <thead>\n");
            out.write("                                <tr>\n");
            out.write("                                    <th>");
            if (_jspx_meth_fmt_005fmessage_005f17(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</th>\n");
            out.write("                                    <th>");
            if (_jspx_meth_fmt_005fmessage_005f18(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</th>\n");
            out.write("                                </tr>\n");
            out.write("                                </thead>\n");
            out.write("                                <tbody>\n");
            out.write("                                ");

                                    Enumeration propertyNames = claimProperties.propertyNames();

                                    int propertyCounter = -1;
                                    while (propertyNames.hasMoreElements()) {
                                        propertyCounter++;

                                        String propertyName = (String) propertyNames.nextElement();
                                        String propertyValue = claimProperties.getProperty(propertyName);
                                
            out.write("\n");
            out.write("                                <tr>\n");
            out.write("                                    <td class=\"leftCol-big\">\n");
            out.write("                                        <input style=\"width: 98%;\" type=\"text\"\n");
            out.write("                                               value=\"");
            out.print(Encode.forHtmlAttribute(propertyName));
            out.write("\"\n");
            out.write("                                               id=\"propertyName_");
            out.print(propertyCounter);
            out.write("\"\n");
            out.write("                                               name=\"propertyName_");
            out.print(propertyCounter);
            out.write("\" readonly/>\n");
            out.write("                                    </td>\n");
            out.write("                                    <td class=\"leftCol-big\">\n");
            out.write("                                        <input style=\"width: 98%;\" type=\"text\"\n");
            out.write("                                               value=\"");
            out.print(Encode.forHtmlAttribute(propertyValue));
            out.write("\"\n");
            out.write("                                               id=\"propertyValue_");
            out.print(propertyCounter);
            out.write("\"\n");
            out.write("                                               name=\"propertyValue_");
            out.print(propertyCounter);
            out.write("\" readonly/>\n");
            out.write("                                    </td>\n");
            out.write("                                </tr>\n");
            out.write("                                ");

                                    }
                                
            out.write("\n");
            out.write("                                </tbody>\n");
            out.write("                            </table>\n");
            out.write("                            <div style=\"clear:both\"/>\n");
            out.write("                        </td>\n");
            out.write("                    </tr>\n");
            out.write("                    ");

                        }
                    
            out.write("\n");
            out.write("\n");
            out.write("                    </tbody>\n");
            out.write("                </table>\n");
            out.write("            </div>\n");
            out.write("            ");

                    }
                }
            
            out.write("\n");
            out.write("        </div>\n");
            out.write("    </div>\n");
            int evalDoAfterBody = _jspx_th_fmt_005fbundle_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
          if (_jspx_eval_fmt_005fbundle_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = _jspx_page_context.popBody();
          }
        }
        if (_jspx_th_fmt_005fbundle_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename.reuse(_jspx_th_fmt_005fbundle_005f0);
        _jspx_th_fmt_005fbundle_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fbundle_005f0, _jsp_getInstanceManager(), _jspx_th_fmt_005fbundle_005f0_reused);
      }
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_fmt_005fmessage_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f0_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f0.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /identity-claim-mgt/list-local-claims.jsp(100,42) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f0.setKey("cannot.remove.default.carbon.dialect.all.claims");
      int _jspx_eval_fmt_005fmessage_005f0 = _jspx_th_fmt_005fmessage_005f0.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f0);
      _jspx_th_fmt_005fmessage_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f0, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f1 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f1_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f1.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /identity-claim-mgt/list-local-claims.jsp(120,47) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f1.setKey("remove.message1");
      int _jspx_eval_fmt_005fmessage_005f1 = _jspx_th_fmt_005fmessage_005f1.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f1);
      _jspx_th_fmt_005fmessage_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f1, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f2 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f2_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f2.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /identity-claim-mgt/list-local-claims.jsp(121,51) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f2.setKey("remove.message2");
      int _jspx_eval_fmt_005fmessage_005f2 = _jspx_th_fmt_005fmessage_005f2.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f2);
      _jspx_th_fmt_005fmessage_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f2, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f3(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f3 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f3_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f3.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /identity-claim-mgt/list-local-claims.jsp(216,12) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f3.setKey("available.claims.for");
      int _jspx_eval_fmt_005fmessage_005f3 = _jspx_th_fmt_005fmessage_005f3.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f3);
      _jspx_th_fmt_005fmessage_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f3, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f4(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f4 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f4_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f4.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f4.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /identity-claim-mgt/list-local-claims.jsp(293,46) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f4.setKey("edit");
      int _jspx_eval_fmt_005fmessage_005f4 = _jspx_th_fmt_005fmessage_005f4.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f4);
      _jspx_th_fmt_005fmessage_005f4_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f4, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f4_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f5(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f5 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f5_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f5.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f5.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /identity-claim-mgt/list-local-claims.jsp(300,35) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f5.setKey("delete");
      int _jspx_eval_fmt_005fmessage_005f5 = _jspx_th_fmt_005fmessage_005f5.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f5);
      _jspx_th_fmt_005fmessage_005f5_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f5, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f5_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f6(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f6 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f6_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f6.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f6.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /identity-claim-mgt/list-local-claims.jsp(310,50) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f6.setKey("claim.uri");
      int _jspx_eval_fmt_005fmessage_005f6 = _jspx_th_fmt_005fmessage_005f6.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f6.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f6);
      _jspx_th_fmt_005fmessage_005f6_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f6, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f6_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f7(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f7 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f7_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f7.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f7.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /identity-claim-mgt/list-local-claims.jsp(316,50) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f7.setKey("description");
      int _jspx_eval_fmt_005fmessage_005f7 = _jspx_th_fmt_005fmessage_005f7.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f7.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f7);
      _jspx_th_fmt_005fmessage_005f7_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f7, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f7_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f8(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f8 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f8_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f8.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f8.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /identity-claim-mgt/list-local-claims.jsp(322,50) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f8.setKey("mapped.attribute");
      int _jspx_eval_fmt_005fmessage_005f8 = _jspx_th_fmt_005fmessage_005f8.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f8.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f8);
      _jspx_th_fmt_005fmessage_005f8_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f8, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f8_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f9(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f9 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f9_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f9.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f9.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /identity-claim-mgt/list-local-claims.jsp(327,40) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f9.setKey("label.user.store.domain.name");
      int _jspx_eval_fmt_005fmessage_005f9 = _jspx_th_fmt_005fmessage_005f9.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f9.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f9);
      _jspx_th_fmt_005fmessage_005f9_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f9, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f9_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f10(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f10 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f10_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f10.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f10.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /identity-claim-mgt/list-local-claims.jsp(328,40) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f10.setKey("label.mapped.attribute");
      int _jspx_eval_fmt_005fmessage_005f10 = _jspx_th_fmt_005fmessage_005f10.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f10.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f10);
      _jspx_th_fmt_005fmessage_005f10_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f10, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f10_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f11(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f11 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f11_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f11.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f11.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /identity-claim-mgt/list-local-claims.jsp(362,50) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f11.setKey("regular.expression");
      int _jspx_eval_fmt_005fmessage_005f11 = _jspx_th_fmt_005fmessage_005f11.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f11.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f11);
      _jspx_th_fmt_005fmessage_005f11_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f11, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f11_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f12(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f12 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f12_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f12.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f12.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /identity-claim-mgt/list-local-claims.jsp(372,50) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f12.setKey("display.order");
      int _jspx_eval_fmt_005fmessage_005f12 = _jspx_th_fmt_005fmessage_005f12.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f12.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f12);
      _jspx_th_fmt_005fmessage_005f12_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f12, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f12_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f13(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f13 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f13_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f13.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f13.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /identity-claim-mgt/list-local-claims.jsp(377,50) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f13.setKey("supported.by.default");
      int _jspx_eval_fmt_005fmessage_005f13 = _jspx_th_fmt_005fmessage_005f13.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f13.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f13);
      _jspx_th_fmt_005fmessage_005f13_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f13, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f13_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f14(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f14 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f14_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f14.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f14.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /identity-claim-mgt/list-local-claims.jsp(386,50) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f14.setKey("required");
      int _jspx_eval_fmt_005fmessage_005f14 = _jspx_th_fmt_005fmessage_005f14.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f14.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f14);
      _jspx_th_fmt_005fmessage_005f14_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f14, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f14_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f15(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f15 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f15_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f15.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f15.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /identity-claim-mgt/list-local-claims.jsp(395,50) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f15.setKey("readonly");
      int _jspx_eval_fmt_005fmessage_005f15 = _jspx_th_fmt_005fmessage_005f15.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f15.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f15);
      _jspx_th_fmt_005fmessage_005f15_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f15, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f15_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f16(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f16 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f16_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f16.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f16.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /identity-claim-mgt/list-local-claims.jsp(407,50) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f16.setKey("label.additional.properties");
      int _jspx_eval_fmt_005fmessage_005f16 = _jspx_th_fmt_005fmessage_005f16.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f16.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f16);
      _jspx_th_fmt_005fmessage_005f16_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f16, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f16_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f17(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f17 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f17_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f17.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f17.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /identity-claim-mgt/list-local-claims.jsp(412,40) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f17.setKey("label.claim.property.name");
      int _jspx_eval_fmt_005fmessage_005f17 = _jspx_th_fmt_005fmessage_005f17.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f17.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f17);
      _jspx_th_fmt_005fmessage_005f17_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f17, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f17_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f18(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f18 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f18_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f18.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f18.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /identity-claim-mgt/list-local-claims.jsp(413,40) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f18.setKey("label.claim.property.value");
      int _jspx_eval_fmt_005fmessage_005f18 = _jspx_th_fmt_005fmessage_005f18.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f18.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f18);
      _jspx_th_fmt_005fmessage_005f18_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f18, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f18_reused);
    }
    return false;
  }
}
